<?xml version="1.0"?>
<doc>
    <assembly>
        <name>System.4.0.0.0.Fakes</name>
    </assembly>
    <members>
        <member name="T:Microsoft.CSharp.Fakes.StubCSharpCodeProvider">
            <summary>Тип заглушки Microsoft.CSharp.CSharpCodeProvider</summary>
        </member>
        <member name="M:Microsoft.CSharp.Fakes.StubCSharpCodeProvider.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:Microsoft.CSharp.Fakes.StubCSharpCodeProvider.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:Microsoft.CSharp.Fakes.StubCSharpCodeProvider.AttachBackingFieldToSite">
            <summary>Присоединение делегатов для эмуляции StubCSharpCodeProvider.Site как свойства с резервным полем.</summary>
        </member>
        <member name="P:Microsoft.CSharp.Fakes.StubCSharpCodeProvider.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:Microsoft.CSharp.Fakes.StubCSharpCodeProvider.CanRaiseEvents">
            <summary>Задает stub Component.get_CanRaiseEvents()</summary>
        </member>
        <member name="F:Microsoft.CSharp.Fakes.StubCSharpCodeProvider.CanRaiseEventsGet">
            <summary>Задает stub Component.get_CanRaiseEvents()</summary>
        </member>
        <member name="M:Microsoft.CSharp.Fakes.StubCSharpCodeProvider.CompileAssemblyFromDom(System.CodeDom.Compiler.CompilerParameters,System.CodeDom.CodeCompileUnit[])">
            <summary>Задает заглушка CodeDomProvider.CompileAssemblyFromDom(CompilerParameters options, CodeCompileUnit[] compilationUnits)</summary>
        </member>
        <member name="F:Microsoft.CSharp.Fakes.StubCSharpCodeProvider.CompileAssemblyFromDomCompilerParametersCodeCompileUnitArray">
            <summary>Задает stub CodeDomProvider.CompileAssemblyFromDom(CompilerParameters options, CodeCompileUnit[] compilationUnits)</summary>
        </member>
        <member name="M:Microsoft.CSharp.Fakes.StubCSharpCodeProvider.CompileAssemblyFromFile(System.CodeDom.Compiler.CompilerParameters,System.String[])">
            <summary>Задает заглушка CodeDomProvider.CompileAssemblyFromFile(CompilerParameters options, String[] fileNames)</summary>
        </member>
        <member name="F:Microsoft.CSharp.Fakes.StubCSharpCodeProvider.CompileAssemblyFromFileCompilerParametersStringArray">
            <summary>Задает stub CodeDomProvider.CompileAssemblyFromFile(CompilerParameters options, String[] fileNames)</summary>
        </member>
        <member name="M:Microsoft.CSharp.Fakes.StubCSharpCodeProvider.CompileAssemblyFromSource(System.CodeDom.Compiler.CompilerParameters,System.String[])">
            <summary>Задает заглушка CodeDomProvider.CompileAssemblyFromSource(CompilerParameters options, String[] sources)</summary>
        </member>
        <member name="F:Microsoft.CSharp.Fakes.StubCSharpCodeProvider.CompileAssemblyFromSourceCompilerParametersStringArray">
            <summary>Задает stub CodeDomProvider.CompileAssemblyFromSource(CompilerParameters options, String[] sources)</summary>
        </member>
        <member name="M:Microsoft.CSharp.Fakes.StubCSharpCodeProvider.CreateCompiler">
            <summary>Задает заглушка CSharpCodeProvider.CreateCompiler()</summary>
        </member>
        <member name="F:Microsoft.CSharp.Fakes.StubCSharpCodeProvider.CreateCompiler01">
            <summary>Задает stub CSharpCodeProvider.CreateCompiler()</summary>
        </member>
        <member name="M:Microsoft.CSharp.Fakes.StubCSharpCodeProvider.CreateEscapedIdentifier(System.String)">
            <summary>Задает заглушка CodeDomProvider.CreateEscapedIdentifier(String value)</summary>
        </member>
        <member name="F:Microsoft.CSharp.Fakes.StubCSharpCodeProvider.CreateEscapedIdentifierString">
            <summary>Задает stub CodeDomProvider.CreateEscapedIdentifier(String value)</summary>
        </member>
        <member name="M:Microsoft.CSharp.Fakes.StubCSharpCodeProvider.CreateGenerator">
            <summary>Задает заглушка CSharpCodeProvider.CreateGenerator()</summary>
        </member>
        <member name="M:Microsoft.CSharp.Fakes.StubCSharpCodeProvider.CreateGenerator(System.String)">
            <summary>Задает заглушка CodeDomProvider.CreateGenerator(String fileName)</summary>
        </member>
        <member name="M:Microsoft.CSharp.Fakes.StubCSharpCodeProvider.CreateGenerator(System.IO.TextWriter)">
            <summary>Задает заглушка CodeDomProvider.CreateGenerator(TextWriter output)</summary>
        </member>
        <member name="F:Microsoft.CSharp.Fakes.StubCSharpCodeProvider.CreateGenerator01">
            <summary>Задает stub CSharpCodeProvider.CreateGenerator()</summary>
        </member>
        <member name="F:Microsoft.CSharp.Fakes.StubCSharpCodeProvider.CreateGeneratorString">
            <summary>Задает stub CodeDomProvider.CreateGenerator(String fileName)</summary>
        </member>
        <member name="F:Microsoft.CSharp.Fakes.StubCSharpCodeProvider.CreateGeneratorTextWriter">
            <summary>Задает stub CodeDomProvider.CreateGenerator(TextWriter output)</summary>
        </member>
        <member name="M:Microsoft.CSharp.Fakes.StubCSharpCodeProvider.CreateParser">
            <summary>Задает заглушка CodeDomProvider.CreateParser()</summary>
        </member>
        <member name="F:Microsoft.CSharp.Fakes.StubCSharpCodeProvider.CreateParser01">
            <summary>Задает stub CodeDomProvider.CreateParser()</summary>
        </member>
        <member name="M:Microsoft.CSharp.Fakes.StubCSharpCodeProvider.CreateValidIdentifier(System.String)">
            <summary>Задает заглушка CodeDomProvider.CreateValidIdentifier(String value)</summary>
        </member>
        <member name="F:Microsoft.CSharp.Fakes.StubCSharpCodeProvider.CreateValidIdentifierString">
            <summary>Задает stub CodeDomProvider.CreateValidIdentifier(String value)</summary>
        </member>
        <member name="M:Microsoft.CSharp.Fakes.StubCSharpCodeProvider.Dispose(System.Boolean)">
            <summary>Задает заглушка Component.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Microsoft.CSharp.Fakes.StubCSharpCodeProvider.DisposeBoolean">
            <summary>Задает stub Component.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Microsoft.CSharp.Fakes.StubCSharpCodeProvider.FileExtension">
            <summary>Задает stub CSharpCodeProvider.get_FileExtension()</summary>
        </member>
        <member name="F:Microsoft.CSharp.Fakes.StubCSharpCodeProvider.FileExtensionGet">
            <summary>Задает stub CSharpCodeProvider.get_FileExtension()</summary>
        </member>
        <member name="M:Microsoft.CSharp.Fakes.StubCSharpCodeProvider.GenerateCodeFromCompileUnit(System.CodeDom.CodeCompileUnit,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
            <summary>Задает заглушка CodeDomProvider.GenerateCodeFromCompileUnit(CodeCompileUnit compileUnit, TextWriter writer, CodeGeneratorOptions options)</summary>
        </member>
        <member name="F:Microsoft.CSharp.Fakes.StubCSharpCodeProvider.GenerateCodeFromCompileUnitCodeCompileUnitTextWriterCodeGeneratorOptions">
            <summary>Задает stub CodeDomProvider.GenerateCodeFromCompileUnit(CodeCompileUnit compileUnit, TextWriter writer, CodeGeneratorOptions options)</summary>
        </member>
        <member name="M:Microsoft.CSharp.Fakes.StubCSharpCodeProvider.GenerateCodeFromExpression(System.CodeDom.CodeExpression,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
            <summary>Задает заглушка CodeDomProvider.GenerateCodeFromExpression(CodeExpression expression, TextWriter writer, CodeGeneratorOptions options)</summary>
        </member>
        <member name="F:Microsoft.CSharp.Fakes.StubCSharpCodeProvider.GenerateCodeFromExpressionCodeExpressionTextWriterCodeGeneratorOptions">
            <summary>Задает stub CodeDomProvider.GenerateCodeFromExpression(CodeExpression expression, TextWriter writer, CodeGeneratorOptions options)</summary>
        </member>
        <member name="M:Microsoft.CSharp.Fakes.StubCSharpCodeProvider.GenerateCodeFromMember(System.CodeDom.CodeTypeMember,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
            <summary>Задает заглушка CSharpCodeProvider.GenerateCodeFromMember(CodeTypeMember member, TextWriter writer, CodeGeneratorOptions options)</summary>
        </member>
        <member name="F:Microsoft.CSharp.Fakes.StubCSharpCodeProvider.GenerateCodeFromMemberCodeTypeMemberTextWriterCodeGeneratorOptions">
            <summary>Задает stub CSharpCodeProvider.GenerateCodeFromMember(CodeTypeMember member, TextWriter writer, CodeGeneratorOptions options)</summary>
        </member>
        <member name="M:Microsoft.CSharp.Fakes.StubCSharpCodeProvider.GenerateCodeFromNamespace(System.CodeDom.CodeNamespace,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
            <summary>Задает заглушка CodeDomProvider.GenerateCodeFromNamespace(CodeNamespace codeNamespace, TextWriter writer, CodeGeneratorOptions options)</summary>
        </member>
        <member name="F:Microsoft.CSharp.Fakes.StubCSharpCodeProvider.GenerateCodeFromNamespaceCodeNamespaceTextWriterCodeGeneratorOptions">
            <summary>Задает stub CodeDomProvider.GenerateCodeFromNamespace(CodeNamespace codeNamespace, TextWriter writer, CodeGeneratorOptions options)</summary>
        </member>
        <member name="M:Microsoft.CSharp.Fakes.StubCSharpCodeProvider.GenerateCodeFromStatement(System.CodeDom.CodeStatement,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
            <summary>Задает заглушка CodeDomProvider.GenerateCodeFromStatement(CodeStatement statement, TextWriter writer, CodeGeneratorOptions options)</summary>
        </member>
        <member name="F:Microsoft.CSharp.Fakes.StubCSharpCodeProvider.GenerateCodeFromStatementCodeStatementTextWriterCodeGeneratorOptions">
            <summary>Задает stub CodeDomProvider.GenerateCodeFromStatement(CodeStatement statement, TextWriter writer, CodeGeneratorOptions options)</summary>
        </member>
        <member name="M:Microsoft.CSharp.Fakes.StubCSharpCodeProvider.GenerateCodeFromType(System.CodeDom.CodeTypeDeclaration,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
            <summary>Задает заглушка CodeDomProvider.GenerateCodeFromType(CodeTypeDeclaration codeType, TextWriter writer, CodeGeneratorOptions options)</summary>
        </member>
        <member name="F:Microsoft.CSharp.Fakes.StubCSharpCodeProvider.GenerateCodeFromTypeCodeTypeDeclarationTextWriterCodeGeneratorOptions">
            <summary>Задает stub CodeDomProvider.GenerateCodeFromType(CodeTypeDeclaration codeType, TextWriter writer, CodeGeneratorOptions options)</summary>
        </member>
        <member name="M:Microsoft.CSharp.Fakes.StubCSharpCodeProvider.GetConverter(System.Type)">
            <summary>Задает заглушка CSharpCodeProvider.GetConverter(Type type)</summary>
        </member>
        <member name="F:Microsoft.CSharp.Fakes.StubCSharpCodeProvider.GetConverterType">
            <summary>Задает stub CSharpCodeProvider.GetConverter(Type type)</summary>
        </member>
        <member name="M:Microsoft.CSharp.Fakes.StubCSharpCodeProvider.GetService(System.Type)">
            <summary>Задает заглушка Component.GetService(Type service)</summary>
        </member>
        <member name="F:Microsoft.CSharp.Fakes.StubCSharpCodeProvider.GetServiceType">
            <summary>Задает stub Component.GetService(Type service)</summary>
        </member>
        <member name="M:Microsoft.CSharp.Fakes.StubCSharpCodeProvider.GetTypeOutput(System.CodeDom.CodeTypeReference)">
            <summary>Задает заглушка CodeDomProvider.GetTypeOutput(CodeTypeReference type)</summary>
        </member>
        <member name="F:Microsoft.CSharp.Fakes.StubCSharpCodeProvider.GetTypeOutputCodeTypeReference">
            <summary>Задает stub CodeDomProvider.GetTypeOutput(CodeTypeReference type)</summary>
        </member>
        <member name="M:Microsoft.CSharp.Fakes.StubCSharpCodeProvider.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCSharpCodeProvider</summary>
        </member>
        <member name="P:Microsoft.CSharp.Fakes.StubCSharpCodeProvider.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:Microsoft.CSharp.Fakes.StubCSharpCodeProvider.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:Microsoft.CSharp.Fakes.StubCSharpCodeProvider.IsValidIdentifier(System.String)">
            <summary>Задает заглушка CodeDomProvider.IsValidIdentifier(String value)</summary>
        </member>
        <member name="F:Microsoft.CSharp.Fakes.StubCSharpCodeProvider.IsValidIdentifierString">
            <summary>Задает stub CodeDomProvider.IsValidIdentifier(String value)</summary>
        </member>
        <member name="P:Microsoft.CSharp.Fakes.StubCSharpCodeProvider.LanguageOptions">
            <summary>Задает stub CodeDomProvider.get_LanguageOptions()</summary>
        </member>
        <member name="F:Microsoft.CSharp.Fakes.StubCSharpCodeProvider.LanguageOptionsGet">
            <summary>Задает stub CodeDomProvider.get_LanguageOptions()</summary>
        </member>
        <member name="M:Microsoft.CSharp.Fakes.StubCSharpCodeProvider.Parse(System.IO.TextReader)">
            <summary>Задает заглушка CodeDomProvider.Parse(TextReader codeStream)</summary>
        </member>
        <member name="F:Microsoft.CSharp.Fakes.StubCSharpCodeProvider.ParseTextReader">
            <summary>Задает stub CodeDomProvider.Parse(TextReader codeStream)</summary>
        </member>
        <member name="P:Microsoft.CSharp.Fakes.StubCSharpCodeProvider.Site">
            <summary>Задает stub Component.get_Site()</summary>
        </member>
        <member name="F:Microsoft.CSharp.Fakes.StubCSharpCodeProvider.SiteGet">
            <summary>Задает stub Component.get_Site()</summary>
        </member>
        <member name="F:Microsoft.CSharp.Fakes.StubCSharpCodeProvider.SiteSetISite">
            <summary>Задает stub Component.set_Site(ISite value)</summary>
        </member>
        <member name="M:Microsoft.CSharp.Fakes.StubCSharpCodeProvider.Supports(System.CodeDom.Compiler.GeneratorSupport)">
            <summary>Задает заглушка CodeDomProvider.Supports(GeneratorSupport generatorSupport)</summary>
        </member>
        <member name="F:Microsoft.CSharp.Fakes.StubCSharpCodeProvider.SupportsGeneratorSupport">
            <summary>Задает stub CodeDomProvider.Supports(GeneratorSupport generatorSupport)</summary>
        </member>
        <member name="M:Microsoft.CSharp.Fakes.StubCSharpCodeProvider.ToString">
            <summary>Задает заглушка Component.ToString()</summary>
        </member>
        <member name="F:Microsoft.CSharp.Fakes.StubCSharpCodeProvider.ToString01">
            <summary>Задает stub Component.ToString()</summary>
        </member>
        <member name="T:Microsoft.QualityTools.Testing.Fakes.Delegates.SystemDelegates">
            <summary>Содержит пользовательские делегаты для заглушек и оболочек совместимости System</summary>
        </member>
        <member name="T:Microsoft.VisualBasic.Fakes.StubVBCodeProvider">
            <summary>Тип заглушки Microsoft.VisualBasic.VBCodeProvider</summary>
        </member>
        <member name="M:Microsoft.VisualBasic.Fakes.StubVBCodeProvider.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:Microsoft.VisualBasic.Fakes.StubVBCodeProvider.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:Microsoft.VisualBasic.Fakes.StubVBCodeProvider.AttachBackingFieldToSite">
            <summary>Присоединение делегатов для эмуляции StubVBCodeProvider.Site как свойства с резервным полем.</summary>
        </member>
        <member name="P:Microsoft.VisualBasic.Fakes.StubVBCodeProvider.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:Microsoft.VisualBasic.Fakes.StubVBCodeProvider.CanRaiseEvents">
            <summary>Задает stub Component.get_CanRaiseEvents()</summary>
        </member>
        <member name="F:Microsoft.VisualBasic.Fakes.StubVBCodeProvider.CanRaiseEventsGet">
            <summary>Задает stub Component.get_CanRaiseEvents()</summary>
        </member>
        <member name="M:Microsoft.VisualBasic.Fakes.StubVBCodeProvider.CompileAssemblyFromDom(System.CodeDom.Compiler.CompilerParameters,System.CodeDom.CodeCompileUnit[])">
            <summary>Задает заглушка CodeDomProvider.CompileAssemblyFromDom(CompilerParameters options, CodeCompileUnit[] compilationUnits)</summary>
        </member>
        <member name="F:Microsoft.VisualBasic.Fakes.StubVBCodeProvider.CompileAssemblyFromDomCompilerParametersCodeCompileUnitArray">
            <summary>Задает stub CodeDomProvider.CompileAssemblyFromDom(CompilerParameters options, CodeCompileUnit[] compilationUnits)</summary>
        </member>
        <member name="M:Microsoft.VisualBasic.Fakes.StubVBCodeProvider.CompileAssemblyFromFile(System.CodeDom.Compiler.CompilerParameters,System.String[])">
            <summary>Задает заглушка CodeDomProvider.CompileAssemblyFromFile(CompilerParameters options, String[] fileNames)</summary>
        </member>
        <member name="F:Microsoft.VisualBasic.Fakes.StubVBCodeProvider.CompileAssemblyFromFileCompilerParametersStringArray">
            <summary>Задает stub CodeDomProvider.CompileAssemblyFromFile(CompilerParameters options, String[] fileNames)</summary>
        </member>
        <member name="M:Microsoft.VisualBasic.Fakes.StubVBCodeProvider.CompileAssemblyFromSource(System.CodeDom.Compiler.CompilerParameters,System.String[])">
            <summary>Задает заглушка CodeDomProvider.CompileAssemblyFromSource(CompilerParameters options, String[] sources)</summary>
        </member>
        <member name="F:Microsoft.VisualBasic.Fakes.StubVBCodeProvider.CompileAssemblyFromSourceCompilerParametersStringArray">
            <summary>Задает stub CodeDomProvider.CompileAssemblyFromSource(CompilerParameters options, String[] sources)</summary>
        </member>
        <member name="M:Microsoft.VisualBasic.Fakes.StubVBCodeProvider.CreateCompiler">
            <summary>Задает заглушка VBCodeProvider.CreateCompiler()</summary>
        </member>
        <member name="F:Microsoft.VisualBasic.Fakes.StubVBCodeProvider.CreateCompiler01">
            <summary>Задает stub VBCodeProvider.CreateCompiler()</summary>
        </member>
        <member name="M:Microsoft.VisualBasic.Fakes.StubVBCodeProvider.CreateEscapedIdentifier(System.String)">
            <summary>Задает заглушка CodeDomProvider.CreateEscapedIdentifier(String value)</summary>
        </member>
        <member name="F:Microsoft.VisualBasic.Fakes.StubVBCodeProvider.CreateEscapedIdentifierString">
            <summary>Задает stub CodeDomProvider.CreateEscapedIdentifier(String value)</summary>
        </member>
        <member name="M:Microsoft.VisualBasic.Fakes.StubVBCodeProvider.CreateGenerator">
            <summary>Задает заглушка VBCodeProvider.CreateGenerator()</summary>
        </member>
        <member name="M:Microsoft.VisualBasic.Fakes.StubVBCodeProvider.CreateGenerator(System.String)">
            <summary>Задает заглушка CodeDomProvider.CreateGenerator(String fileName)</summary>
        </member>
        <member name="M:Microsoft.VisualBasic.Fakes.StubVBCodeProvider.CreateGenerator(System.IO.TextWriter)">
            <summary>Задает заглушка CodeDomProvider.CreateGenerator(TextWriter output)</summary>
        </member>
        <member name="F:Microsoft.VisualBasic.Fakes.StubVBCodeProvider.CreateGenerator01">
            <summary>Задает stub VBCodeProvider.CreateGenerator()</summary>
        </member>
        <member name="F:Microsoft.VisualBasic.Fakes.StubVBCodeProvider.CreateGeneratorString">
            <summary>Задает stub CodeDomProvider.CreateGenerator(String fileName)</summary>
        </member>
        <member name="F:Microsoft.VisualBasic.Fakes.StubVBCodeProvider.CreateGeneratorTextWriter">
            <summary>Задает stub CodeDomProvider.CreateGenerator(TextWriter output)</summary>
        </member>
        <member name="M:Microsoft.VisualBasic.Fakes.StubVBCodeProvider.CreateParser">
            <summary>Задает заглушка CodeDomProvider.CreateParser()</summary>
        </member>
        <member name="F:Microsoft.VisualBasic.Fakes.StubVBCodeProvider.CreateParser01">
            <summary>Задает stub CodeDomProvider.CreateParser()</summary>
        </member>
        <member name="M:Microsoft.VisualBasic.Fakes.StubVBCodeProvider.CreateValidIdentifier(System.String)">
            <summary>Задает заглушка CodeDomProvider.CreateValidIdentifier(String value)</summary>
        </member>
        <member name="F:Microsoft.VisualBasic.Fakes.StubVBCodeProvider.CreateValidIdentifierString">
            <summary>Задает stub CodeDomProvider.CreateValidIdentifier(String value)</summary>
        </member>
        <member name="M:Microsoft.VisualBasic.Fakes.StubVBCodeProvider.Dispose(System.Boolean)">
            <summary>Задает заглушка Component.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Microsoft.VisualBasic.Fakes.StubVBCodeProvider.DisposeBoolean">
            <summary>Задает stub Component.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Microsoft.VisualBasic.Fakes.StubVBCodeProvider.FileExtension">
            <summary>Задает stub VBCodeProvider.get_FileExtension()</summary>
        </member>
        <member name="F:Microsoft.VisualBasic.Fakes.StubVBCodeProvider.FileExtensionGet">
            <summary>Задает stub VBCodeProvider.get_FileExtension()</summary>
        </member>
        <member name="M:Microsoft.VisualBasic.Fakes.StubVBCodeProvider.GenerateCodeFromCompileUnit(System.CodeDom.CodeCompileUnit,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
            <summary>Задает заглушка CodeDomProvider.GenerateCodeFromCompileUnit(CodeCompileUnit compileUnit, TextWriter writer, CodeGeneratorOptions options)</summary>
        </member>
        <member name="F:Microsoft.VisualBasic.Fakes.StubVBCodeProvider.GenerateCodeFromCompileUnitCodeCompileUnitTextWriterCodeGeneratorOptions">
            <summary>Задает stub CodeDomProvider.GenerateCodeFromCompileUnit(CodeCompileUnit compileUnit, TextWriter writer, CodeGeneratorOptions options)</summary>
        </member>
        <member name="M:Microsoft.VisualBasic.Fakes.StubVBCodeProvider.GenerateCodeFromExpression(System.CodeDom.CodeExpression,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
            <summary>Задает заглушка CodeDomProvider.GenerateCodeFromExpression(CodeExpression expression, TextWriter writer, CodeGeneratorOptions options)</summary>
        </member>
        <member name="F:Microsoft.VisualBasic.Fakes.StubVBCodeProvider.GenerateCodeFromExpressionCodeExpressionTextWriterCodeGeneratorOptions">
            <summary>Задает stub CodeDomProvider.GenerateCodeFromExpression(CodeExpression expression, TextWriter writer, CodeGeneratorOptions options)</summary>
        </member>
        <member name="M:Microsoft.VisualBasic.Fakes.StubVBCodeProvider.GenerateCodeFromMember(System.CodeDom.CodeTypeMember,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
            <summary>Задает заглушка VBCodeProvider.GenerateCodeFromMember(CodeTypeMember member, TextWriter writer, CodeGeneratorOptions options)</summary>
        </member>
        <member name="F:Microsoft.VisualBasic.Fakes.StubVBCodeProvider.GenerateCodeFromMemberCodeTypeMemberTextWriterCodeGeneratorOptions">
            <summary>Задает stub VBCodeProvider.GenerateCodeFromMember(CodeTypeMember member, TextWriter writer, CodeGeneratorOptions options)</summary>
        </member>
        <member name="M:Microsoft.VisualBasic.Fakes.StubVBCodeProvider.GenerateCodeFromNamespace(System.CodeDom.CodeNamespace,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
            <summary>Задает заглушка CodeDomProvider.GenerateCodeFromNamespace(CodeNamespace codeNamespace, TextWriter writer, CodeGeneratorOptions options)</summary>
        </member>
        <member name="F:Microsoft.VisualBasic.Fakes.StubVBCodeProvider.GenerateCodeFromNamespaceCodeNamespaceTextWriterCodeGeneratorOptions">
            <summary>Задает stub CodeDomProvider.GenerateCodeFromNamespace(CodeNamespace codeNamespace, TextWriter writer, CodeGeneratorOptions options)</summary>
        </member>
        <member name="M:Microsoft.VisualBasic.Fakes.StubVBCodeProvider.GenerateCodeFromStatement(System.CodeDom.CodeStatement,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
            <summary>Задает заглушка CodeDomProvider.GenerateCodeFromStatement(CodeStatement statement, TextWriter writer, CodeGeneratorOptions options)</summary>
        </member>
        <member name="F:Microsoft.VisualBasic.Fakes.StubVBCodeProvider.GenerateCodeFromStatementCodeStatementTextWriterCodeGeneratorOptions">
            <summary>Задает stub CodeDomProvider.GenerateCodeFromStatement(CodeStatement statement, TextWriter writer, CodeGeneratorOptions options)</summary>
        </member>
        <member name="M:Microsoft.VisualBasic.Fakes.StubVBCodeProvider.GenerateCodeFromType(System.CodeDom.CodeTypeDeclaration,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
            <summary>Задает заглушка CodeDomProvider.GenerateCodeFromType(CodeTypeDeclaration codeType, TextWriter writer, CodeGeneratorOptions options)</summary>
        </member>
        <member name="F:Microsoft.VisualBasic.Fakes.StubVBCodeProvider.GenerateCodeFromTypeCodeTypeDeclarationTextWriterCodeGeneratorOptions">
            <summary>Задает stub CodeDomProvider.GenerateCodeFromType(CodeTypeDeclaration codeType, TextWriter writer, CodeGeneratorOptions options)</summary>
        </member>
        <member name="M:Microsoft.VisualBasic.Fakes.StubVBCodeProvider.GetConverter(System.Type)">
            <summary>Задает заглушка VBCodeProvider.GetConverter(Type type)</summary>
        </member>
        <member name="F:Microsoft.VisualBasic.Fakes.StubVBCodeProvider.GetConverterType">
            <summary>Задает stub VBCodeProvider.GetConverter(Type type)</summary>
        </member>
        <member name="M:Microsoft.VisualBasic.Fakes.StubVBCodeProvider.GetService(System.Type)">
            <summary>Задает заглушка Component.GetService(Type service)</summary>
        </member>
        <member name="F:Microsoft.VisualBasic.Fakes.StubVBCodeProvider.GetServiceType">
            <summary>Задает stub Component.GetService(Type service)</summary>
        </member>
        <member name="M:Microsoft.VisualBasic.Fakes.StubVBCodeProvider.GetTypeOutput(System.CodeDom.CodeTypeReference)">
            <summary>Задает заглушка CodeDomProvider.GetTypeOutput(CodeTypeReference type)</summary>
        </member>
        <member name="F:Microsoft.VisualBasic.Fakes.StubVBCodeProvider.GetTypeOutputCodeTypeReference">
            <summary>Задает stub CodeDomProvider.GetTypeOutput(CodeTypeReference type)</summary>
        </member>
        <member name="M:Microsoft.VisualBasic.Fakes.StubVBCodeProvider.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubVBCodeProvider</summary>
        </member>
        <member name="P:Microsoft.VisualBasic.Fakes.StubVBCodeProvider.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:Microsoft.VisualBasic.Fakes.StubVBCodeProvider.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:Microsoft.VisualBasic.Fakes.StubVBCodeProvider.IsValidIdentifier(System.String)">
            <summary>Задает заглушка CodeDomProvider.IsValidIdentifier(String value)</summary>
        </member>
        <member name="F:Microsoft.VisualBasic.Fakes.StubVBCodeProvider.IsValidIdentifierString">
            <summary>Задает stub CodeDomProvider.IsValidIdentifier(String value)</summary>
        </member>
        <member name="P:Microsoft.VisualBasic.Fakes.StubVBCodeProvider.LanguageOptions">
            <summary>Задает stub VBCodeProvider.get_LanguageOptions()</summary>
        </member>
        <member name="F:Microsoft.VisualBasic.Fakes.StubVBCodeProvider.LanguageOptionsGet">
            <summary>Задает stub VBCodeProvider.get_LanguageOptions()</summary>
        </member>
        <member name="M:Microsoft.VisualBasic.Fakes.StubVBCodeProvider.Parse(System.IO.TextReader)">
            <summary>Задает заглушка CodeDomProvider.Parse(TextReader codeStream)</summary>
        </member>
        <member name="F:Microsoft.VisualBasic.Fakes.StubVBCodeProvider.ParseTextReader">
            <summary>Задает stub CodeDomProvider.Parse(TextReader codeStream)</summary>
        </member>
        <member name="P:Microsoft.VisualBasic.Fakes.StubVBCodeProvider.Site">
            <summary>Задает stub Component.get_Site()</summary>
        </member>
        <member name="F:Microsoft.VisualBasic.Fakes.StubVBCodeProvider.SiteGet">
            <summary>Задает stub Component.get_Site()</summary>
        </member>
        <member name="F:Microsoft.VisualBasic.Fakes.StubVBCodeProvider.SiteSetISite">
            <summary>Задает stub Component.set_Site(ISite value)</summary>
        </member>
        <member name="M:Microsoft.VisualBasic.Fakes.StubVBCodeProvider.Supports(System.CodeDom.Compiler.GeneratorSupport)">
            <summary>Задает заглушка CodeDomProvider.Supports(GeneratorSupport generatorSupport)</summary>
        </member>
        <member name="F:Microsoft.VisualBasic.Fakes.StubVBCodeProvider.SupportsGeneratorSupport">
            <summary>Задает stub CodeDomProvider.Supports(GeneratorSupport generatorSupport)</summary>
        </member>
        <member name="M:Microsoft.VisualBasic.Fakes.StubVBCodeProvider.ToString">
            <summary>Задает заглушка Component.ToString()</summary>
        </member>
        <member name="F:Microsoft.VisualBasic.Fakes.StubVBCodeProvider.ToString01">
            <summary>Задает stub Component.ToString()</summary>
        </member>
        <member name="T:Microsoft.Win32.Fakes.StubIntranetZoneCredentialPolicy">
            <summary>Тип заглушки Microsoft.Win32.IntranetZoneCredentialPolicy</summary>
        </member>
        <member name="M:Microsoft.Win32.Fakes.StubIntranetZoneCredentialPolicy.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:Microsoft.Win32.Fakes.StubIntranetZoneCredentialPolicy.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:Microsoft.Win32.Fakes.StubIntranetZoneCredentialPolicy.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubIntranetZoneCredentialPolicy</summary>
        </member>
        <member name="P:Microsoft.Win32.Fakes.StubIntranetZoneCredentialPolicy.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:Microsoft.Win32.Fakes.StubIntranetZoneCredentialPolicy.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:Microsoft.Win32.Fakes.StubIntranetZoneCredentialPolicy.ShouldSendCredential(System.Uri,System.Net.WebRequest,System.Net.NetworkCredential,System.Net.IAuthenticationModule)">
            <summary>Задает заглушка IntranetZoneCredentialPolicy.ShouldSendCredential(Uri challengeUri, WebRequest request, NetworkCredential credential, IAuthenticationModule authModule)</summary>
        </member>
        <member name="F:Microsoft.Win32.Fakes.StubIntranetZoneCredentialPolicy.ShouldSendCredentialUriWebRequestNetworkCredentialIAuthenticationModule">
            <summary>Задает stub IntranetZoneCredentialPolicy.ShouldSendCredential(Uri challengeUri, WebRequest request, NetworkCredential credential, IAuthenticationModule authModule)</summary>
        </member>
        <member name="T:Microsoft.Win32.Fakes.StubPowerModeChangedEventArgs">
            <summary>Тип заглушки Microsoft.Win32.PowerModeChangedEventArgs</summary>
        </member>
        <member name="M:Microsoft.Win32.Fakes.StubPowerModeChangedEventArgs.#ctor(Microsoft.Win32.PowerModes)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:Microsoft.Win32.Fakes.StubPowerModeChangedEventArgs.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:Microsoft.Win32.Fakes.StubPowerModeChangedEventArgs.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubPowerModeChangedEventArgs</summary>
        </member>
        <member name="P:Microsoft.Win32.Fakes.StubPowerModeChangedEventArgs.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:Microsoft.Win32.Fakes.StubPowerModeChangedEventArgs.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:Microsoft.Win32.Fakes.StubSessionEndedEventArgs">
            <summary>Тип заглушки Microsoft.Win32.SessionEndedEventArgs</summary>
        </member>
        <member name="M:Microsoft.Win32.Fakes.StubSessionEndedEventArgs.#ctor(Microsoft.Win32.SessionEndReasons)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:Microsoft.Win32.Fakes.StubSessionEndedEventArgs.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:Microsoft.Win32.Fakes.StubSessionEndedEventArgs.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubSessionEndedEventArgs</summary>
        </member>
        <member name="P:Microsoft.Win32.Fakes.StubSessionEndedEventArgs.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:Microsoft.Win32.Fakes.StubSessionEndedEventArgs.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:Microsoft.Win32.Fakes.StubSessionEndingEventArgs">
            <summary>Тип заглушки Microsoft.Win32.SessionEndingEventArgs</summary>
        </member>
        <member name="M:Microsoft.Win32.Fakes.StubSessionEndingEventArgs.#ctor(Microsoft.Win32.SessionEndReasons)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:Microsoft.Win32.Fakes.StubSessionEndingEventArgs.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:Microsoft.Win32.Fakes.StubSessionEndingEventArgs.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubSessionEndingEventArgs</summary>
        </member>
        <member name="P:Microsoft.Win32.Fakes.StubSessionEndingEventArgs.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:Microsoft.Win32.Fakes.StubSessionEndingEventArgs.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:Microsoft.Win32.Fakes.StubSessionSwitchEventArgs">
            <summary>Тип заглушки Microsoft.Win32.SessionSwitchEventArgs</summary>
        </member>
        <member name="M:Microsoft.Win32.Fakes.StubSessionSwitchEventArgs.#ctor(Microsoft.Win32.SessionSwitchReason)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:Microsoft.Win32.Fakes.StubSessionSwitchEventArgs.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:Microsoft.Win32.Fakes.StubSessionSwitchEventArgs.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubSessionSwitchEventArgs</summary>
        </member>
        <member name="P:Microsoft.Win32.Fakes.StubSessionSwitchEventArgs.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:Microsoft.Win32.Fakes.StubSessionSwitchEventArgs.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:Microsoft.Win32.Fakes.StubTimerElapsedEventArgs">
            <summary>Тип заглушки Microsoft.Win32.TimerElapsedEventArgs</summary>
        </member>
        <member name="M:Microsoft.Win32.Fakes.StubTimerElapsedEventArgs.#ctor(System.IntPtr)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:Microsoft.Win32.Fakes.StubTimerElapsedEventArgs.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:Microsoft.Win32.Fakes.StubTimerElapsedEventArgs.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubTimerElapsedEventArgs</summary>
        </member>
        <member name="P:Microsoft.Win32.Fakes.StubTimerElapsedEventArgs.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:Microsoft.Win32.Fakes.StubTimerElapsedEventArgs.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:Microsoft.Win32.Fakes.StubUserPreferenceChangedEventArgs">
            <summary>Тип заглушки Microsoft.Win32.UserPreferenceChangedEventArgs</summary>
        </member>
        <member name="M:Microsoft.Win32.Fakes.StubUserPreferenceChangedEventArgs.#ctor(Microsoft.Win32.UserPreferenceCategory)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:Microsoft.Win32.Fakes.StubUserPreferenceChangedEventArgs.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:Microsoft.Win32.Fakes.StubUserPreferenceChangedEventArgs.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubUserPreferenceChangedEventArgs</summary>
        </member>
        <member name="P:Microsoft.Win32.Fakes.StubUserPreferenceChangedEventArgs.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:Microsoft.Win32.Fakes.StubUserPreferenceChangedEventArgs.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:Microsoft.Win32.Fakes.StubUserPreferenceChangingEventArgs">
            <summary>Тип заглушки Microsoft.Win32.UserPreferenceChangingEventArgs</summary>
        </member>
        <member name="M:Microsoft.Win32.Fakes.StubUserPreferenceChangingEventArgs.#ctor(Microsoft.Win32.UserPreferenceCategory)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:Microsoft.Win32.Fakes.StubUserPreferenceChangingEventArgs.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:Microsoft.Win32.Fakes.StubUserPreferenceChangingEventArgs.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubUserPreferenceChangingEventArgs</summary>
        </member>
        <member name="P:Microsoft.Win32.Fakes.StubUserPreferenceChangingEventArgs.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:Microsoft.Win32.Fakes.StubUserPreferenceChangingEventArgs.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.CodeDom.Compiler.Fakes.StubCodeCompiler">
            <summary>Тип заглушки System.CodeDom.Compiler.CodeCompiler</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeCompiler.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.CodeDom.Compiler.Fakes.StubCodeCompiler.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeCompiler.CmdArgsFromParameters(System.CodeDom.Compiler.CompilerParameters)">
            <summary>Задает заглушка CodeCompiler.CmdArgsFromParameters(CompilerParameters options)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeCompiler.CmdArgsFromParametersCompilerParameters">
            <summary>Задает stub CodeCompiler.CmdArgsFromParameters(CompilerParameters options)</summary>
        </member>
        <member name="P:System.CodeDom.Compiler.Fakes.StubCodeCompiler.CompilerName">
            <summary>Задает stub CodeCompiler.get_CompilerName()</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeCompiler.CompilerNameGet">
            <summary>Задает stub CodeCompiler.get_CompilerName()</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeCompiler.ContinueOnNewLine(System.String)">
            <summary>Задает заглушка CodeGenerator.ContinueOnNewLine(String st)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeCompiler.ContinueOnNewLineString">
            <summary>Задает stub CodeGenerator.ContinueOnNewLine(String st)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeCompiler.CreateEscapedIdentifier(System.String)">
            <summary>Задает заглушка CodeGenerator.CreateEscapedIdentifier(String value)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeCompiler.CreateEscapedIdentifierString">
            <summary>Задает stub CodeGenerator.CreateEscapedIdentifier(String value)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeCompiler.CreateValidIdentifier(System.String)">
            <summary>Задает заглушка CodeGenerator.CreateValidIdentifier(String value)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeCompiler.CreateValidIdentifierString">
            <summary>Задает stub CodeGenerator.CreateValidIdentifier(String value)</summary>
        </member>
        <member name="P:System.CodeDom.Compiler.Fakes.StubCodeCompiler.FileExtension">
            <summary>Задает stub CodeCompiler.get_FileExtension()</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeCompiler.FileExtensionGet">
            <summary>Задает stub CodeCompiler.get_FileExtension()</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeCompiler.FromDom(System.CodeDom.Compiler.CompilerParameters,System.CodeDom.CodeCompileUnit)">
            <summary>Задает заглушка CodeCompiler.FromDom(CompilerParameters options, CodeCompileUnit e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeCompiler.FromDomBatch(System.CodeDom.Compiler.CompilerParameters,System.CodeDom.CodeCompileUnit[])">
            <summary>Задает заглушка CodeCompiler.FromDomBatch(CompilerParameters options, CodeCompileUnit[] ea)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeCompiler.FromDomBatchCompilerParametersCodeCompileUnitArray">
            <summary>Задает stub CodeCompiler.FromDomBatch(CompilerParameters options, CodeCompileUnit[] ea)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeCompiler.FromDomCompilerParametersCodeCompileUnit">
            <summary>Задает stub CodeCompiler.FromDom(CompilerParameters options, CodeCompileUnit e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeCompiler.FromFile(System.CodeDom.Compiler.CompilerParameters,System.String)">
            <summary>Задает заглушка CodeCompiler.FromFile(CompilerParameters options, String fileName)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeCompiler.FromFileBatch(System.CodeDom.Compiler.CompilerParameters,System.String[])">
            <summary>Задает заглушка CodeCompiler.FromFileBatch(CompilerParameters options, String[] fileNames)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeCompiler.FromFileBatchCompilerParametersStringArray">
            <summary>Задает stub CodeCompiler.FromFileBatch(CompilerParameters options, String[] fileNames)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeCompiler.FromFileCompilerParametersString">
            <summary>Задает stub CodeCompiler.FromFile(CompilerParameters options, String fileName)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeCompiler.FromSource(System.CodeDom.Compiler.CompilerParameters,System.String)">
            <summary>Задает заглушка CodeCompiler.FromSource(CompilerParameters options, String source)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeCompiler.FromSourceBatch(System.CodeDom.Compiler.CompilerParameters,System.String[])">
            <summary>Задает заглушка CodeCompiler.FromSourceBatch(CompilerParameters options, String[] sources)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeCompiler.FromSourceBatchCompilerParametersStringArray">
            <summary>Задает stub CodeCompiler.FromSourceBatch(CompilerParameters options, String[] sources)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeCompiler.FromSourceCompilerParametersString">
            <summary>Задает stub CodeCompiler.FromSource(CompilerParameters options, String source)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateArgumentReferenceExpression(System.CodeDom.CodeArgumentReferenceExpression)">
            <summary>Задает заглушка CodeGenerator.GenerateArgumentReferenceExpression(CodeArgumentReferenceExpression e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateArgumentReferenceExpressionCodeArgumentReferenceExpression">
            <summary>Задает stub CodeGenerator.GenerateArgumentReferenceExpression(CodeArgumentReferenceExpression e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateArrayCreateExpression(System.CodeDom.CodeArrayCreateExpression)">
            <summary>Задает заглушка CodeGenerator.GenerateArrayCreateExpression(CodeArrayCreateExpression e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateArrayCreateExpressionCodeArrayCreateExpression">
            <summary>Задает stub CodeGenerator.GenerateArrayCreateExpression(CodeArrayCreateExpression e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateArrayIndexerExpression(System.CodeDom.CodeArrayIndexerExpression)">
            <summary>Задает заглушка CodeGenerator.GenerateArrayIndexerExpression(CodeArrayIndexerExpression e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateArrayIndexerExpressionCodeArrayIndexerExpression">
            <summary>Задает stub CodeGenerator.GenerateArrayIndexerExpression(CodeArrayIndexerExpression e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateAssignStatement(System.CodeDom.CodeAssignStatement)">
            <summary>Задает заглушка CodeGenerator.GenerateAssignStatement(CodeAssignStatement e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateAssignStatementCodeAssignStatement">
            <summary>Задает stub CodeGenerator.GenerateAssignStatement(CodeAssignStatement e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateAttachEventStatement(System.CodeDom.CodeAttachEventStatement)">
            <summary>Задает заглушка CodeGenerator.GenerateAttachEventStatement(CodeAttachEventStatement e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateAttachEventStatementCodeAttachEventStatement">
            <summary>Задает stub CodeGenerator.GenerateAttachEventStatement(CodeAttachEventStatement e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateAttributeDeclarationsEnd(System.CodeDom.CodeAttributeDeclarationCollection)">
            <summary>Задает заглушка CodeGenerator.GenerateAttributeDeclarationsEnd(CodeAttributeDeclarationCollection attributes)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateAttributeDeclarationsEndCodeAttributeDeclarationCollection">
            <summary>Задает stub CodeGenerator.GenerateAttributeDeclarationsEnd(CodeAttributeDeclarationCollection attributes)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateAttributeDeclarationsStart(System.CodeDom.CodeAttributeDeclarationCollection)">
            <summary>Задает заглушка CodeGenerator.GenerateAttributeDeclarationsStart(CodeAttributeDeclarationCollection attributes)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateAttributeDeclarationsStartCodeAttributeDeclarationCollection">
            <summary>Задает stub CodeGenerator.GenerateAttributeDeclarationsStart(CodeAttributeDeclarationCollection attributes)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateBaseReferenceExpression(System.CodeDom.CodeBaseReferenceExpression)">
            <summary>Задает заглушка CodeGenerator.GenerateBaseReferenceExpression(CodeBaseReferenceExpression e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateBaseReferenceExpressionCodeBaseReferenceExpression">
            <summary>Задает stub CodeGenerator.GenerateBaseReferenceExpression(CodeBaseReferenceExpression e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateBinaryOperatorExpression(System.CodeDom.CodeBinaryOperatorExpression)">
            <summary>Задает заглушка CodeGenerator.GenerateBinaryOperatorExpression(CodeBinaryOperatorExpression e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateBinaryOperatorExpressionCodeBinaryOperatorExpression">
            <summary>Задает stub CodeGenerator.GenerateBinaryOperatorExpression(CodeBinaryOperatorExpression e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateCastExpression(System.CodeDom.CodeCastExpression)">
            <summary>Задает заглушка CodeGenerator.GenerateCastExpression(CodeCastExpression e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateCastExpressionCodeCastExpression">
            <summary>Задает stub CodeGenerator.GenerateCastExpression(CodeCastExpression e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateCodeFromMember(System.CodeDom.CodeTypeMember,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
            <summary>Задает заглушка CodeGenerator.GenerateCodeFromMember(CodeTypeMember member, TextWriter writer, CodeGeneratorOptions options)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateCodeFromMemberCodeTypeMemberTextWriterCodeGeneratorOptions">
            <summary>Задает stub CodeGenerator.GenerateCodeFromMember(CodeTypeMember member, TextWriter writer, CodeGeneratorOptions options)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateComment(System.CodeDom.CodeComment)">
            <summary>Задает заглушка CodeGenerator.GenerateComment(CodeComment e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateCommentCodeComment">
            <summary>Задает stub CodeGenerator.GenerateComment(CodeComment e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateCommentStatement(System.CodeDom.CodeCommentStatement)">
            <summary>Задает заглушка CodeGenerator.GenerateCommentStatement(CodeCommentStatement e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateCommentStatementCodeCommentStatement">
            <summary>Задает stub CodeGenerator.GenerateCommentStatement(CodeCommentStatement e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateCommentStatements(System.CodeDom.CodeCommentStatementCollection)">
            <summary>Задает заглушка CodeGenerator.GenerateCommentStatements(CodeCommentStatementCollection e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateCommentStatementsCodeCommentStatementCollection">
            <summary>Задает stub CodeGenerator.GenerateCommentStatements(CodeCommentStatementCollection e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateCompileUnit(System.CodeDom.CodeCompileUnit)">
            <summary>Задает заглушка CodeGenerator.GenerateCompileUnit(CodeCompileUnit e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateCompileUnitCodeCompileUnit">
            <summary>Задает stub CodeGenerator.GenerateCompileUnit(CodeCompileUnit e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateCompileUnitEnd(System.CodeDom.CodeCompileUnit)">
            <summary>Задает заглушка CodeGenerator.GenerateCompileUnitEnd(CodeCompileUnit e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateCompileUnitEndCodeCompileUnit">
            <summary>Задает stub CodeGenerator.GenerateCompileUnitEnd(CodeCompileUnit e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateCompileUnitStart(System.CodeDom.CodeCompileUnit)">
            <summary>Задает заглушка CodeGenerator.GenerateCompileUnitStart(CodeCompileUnit e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateCompileUnitStartCodeCompileUnit">
            <summary>Задает stub CodeGenerator.GenerateCompileUnitStart(CodeCompileUnit e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateConditionStatement(System.CodeDom.CodeConditionStatement)">
            <summary>Задает заглушка CodeGenerator.GenerateConditionStatement(CodeConditionStatement e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateConditionStatementCodeConditionStatement">
            <summary>Задает stub CodeGenerator.GenerateConditionStatement(CodeConditionStatement e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateConstructor(System.CodeDom.CodeConstructor,System.CodeDom.CodeTypeDeclaration)">
            <summary>Задает заглушка CodeGenerator.GenerateConstructor(CodeConstructor e, CodeTypeDeclaration c)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateConstructorCodeConstructorCodeTypeDeclaration">
            <summary>Задает stub CodeGenerator.GenerateConstructor(CodeConstructor e, CodeTypeDeclaration c)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateDecimalValue(System.Decimal)">
            <summary>Задает заглушка CodeGenerator.GenerateDecimalValue(Decimal d)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateDecimalValueDecimal">
            <summary>Задает stub CodeGenerator.GenerateDecimalValue(Decimal d)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateDefaultValueExpression(System.CodeDom.CodeDefaultValueExpression)">
            <summary>Задает заглушка CodeGenerator.GenerateDefaultValueExpression(CodeDefaultValueExpression e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateDefaultValueExpressionCodeDefaultValueExpression">
            <summary>Задает stub CodeGenerator.GenerateDefaultValueExpression(CodeDefaultValueExpression e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateDelegateCreateExpression(System.CodeDom.CodeDelegateCreateExpression)">
            <summary>Задает заглушка CodeGenerator.GenerateDelegateCreateExpression(CodeDelegateCreateExpression e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateDelegateCreateExpressionCodeDelegateCreateExpression">
            <summary>Задает stub CodeGenerator.GenerateDelegateCreateExpression(CodeDelegateCreateExpression e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateDelegateInvokeExpression(System.CodeDom.CodeDelegateInvokeExpression)">
            <summary>Задает заглушка CodeGenerator.GenerateDelegateInvokeExpression(CodeDelegateInvokeExpression e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateDelegateInvokeExpressionCodeDelegateInvokeExpression">
            <summary>Задает stub CodeGenerator.GenerateDelegateInvokeExpression(CodeDelegateInvokeExpression e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateDirectionExpression(System.CodeDom.CodeDirectionExpression)">
            <summary>Задает заглушка CodeGenerator.GenerateDirectionExpression(CodeDirectionExpression e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateDirectionExpressionCodeDirectionExpression">
            <summary>Задает stub CodeGenerator.GenerateDirectionExpression(CodeDirectionExpression e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateDirectives(System.CodeDom.CodeDirectiveCollection)">
            <summary>Задает заглушка CodeGenerator.GenerateDirectives(CodeDirectiveCollection directives)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateDirectivesCodeDirectiveCollection">
            <summary>Задает stub CodeGenerator.GenerateDirectives(CodeDirectiveCollection directives)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateDoubleValue(System.Double)">
            <summary>Задает заглушка CodeGenerator.GenerateDoubleValue(Double d)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateDoubleValueDouble">
            <summary>Задает stub CodeGenerator.GenerateDoubleValue(Double d)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateEntryPointMethod(System.CodeDom.CodeEntryPointMethod,System.CodeDom.CodeTypeDeclaration)">
            <summary>Задает заглушка CodeGenerator.GenerateEntryPointMethod(CodeEntryPointMethod e, CodeTypeDeclaration c)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateEntryPointMethodCodeEntryPointMethodCodeTypeDeclaration">
            <summary>Задает stub CodeGenerator.GenerateEntryPointMethod(CodeEntryPointMethod e, CodeTypeDeclaration c)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateEvent(System.CodeDom.CodeMemberEvent,System.CodeDom.CodeTypeDeclaration)">
            <summary>Задает заглушка CodeGenerator.GenerateEvent(CodeMemberEvent e, CodeTypeDeclaration c)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateEventCodeMemberEventCodeTypeDeclaration">
            <summary>Задает stub CodeGenerator.GenerateEvent(CodeMemberEvent e, CodeTypeDeclaration c)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateEventReferenceExpression(System.CodeDom.CodeEventReferenceExpression)">
            <summary>Задает заглушка CodeGenerator.GenerateEventReferenceExpression(CodeEventReferenceExpression e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateEventReferenceExpressionCodeEventReferenceExpression">
            <summary>Задает stub CodeGenerator.GenerateEventReferenceExpression(CodeEventReferenceExpression e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateExpressionStatement(System.CodeDom.CodeExpressionStatement)">
            <summary>Задает заглушка CodeGenerator.GenerateExpressionStatement(CodeExpressionStatement e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateExpressionStatementCodeExpressionStatement">
            <summary>Задает stub CodeGenerator.GenerateExpressionStatement(CodeExpressionStatement e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateField(System.CodeDom.CodeMemberField)">
            <summary>Задает заглушка CodeGenerator.GenerateField(CodeMemberField e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateFieldCodeMemberField">
            <summary>Задает stub CodeGenerator.GenerateField(CodeMemberField e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateFieldReferenceExpression(System.CodeDom.CodeFieldReferenceExpression)">
            <summary>Задает заглушка CodeGenerator.GenerateFieldReferenceExpression(CodeFieldReferenceExpression e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateFieldReferenceExpressionCodeFieldReferenceExpression">
            <summary>Задает stub CodeGenerator.GenerateFieldReferenceExpression(CodeFieldReferenceExpression e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateGotoStatement(System.CodeDom.CodeGotoStatement)">
            <summary>Задает заглушка CodeGenerator.GenerateGotoStatement(CodeGotoStatement e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateGotoStatementCodeGotoStatement">
            <summary>Задает stub CodeGenerator.GenerateGotoStatement(CodeGotoStatement e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateIndexerExpression(System.CodeDom.CodeIndexerExpression)">
            <summary>Задает заглушка CodeGenerator.GenerateIndexerExpression(CodeIndexerExpression e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateIndexerExpressionCodeIndexerExpression">
            <summary>Задает stub CodeGenerator.GenerateIndexerExpression(CodeIndexerExpression e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateIterationStatement(System.CodeDom.CodeIterationStatement)">
            <summary>Задает заглушка CodeGenerator.GenerateIterationStatement(CodeIterationStatement e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateIterationStatementCodeIterationStatement">
            <summary>Задает stub CodeGenerator.GenerateIterationStatement(CodeIterationStatement e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateLabeledStatement(System.CodeDom.CodeLabeledStatement)">
            <summary>Задает заглушка CodeGenerator.GenerateLabeledStatement(CodeLabeledStatement e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateLabeledStatementCodeLabeledStatement">
            <summary>Задает stub CodeGenerator.GenerateLabeledStatement(CodeLabeledStatement e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateLinePragmaEnd(System.CodeDom.CodeLinePragma)">
            <summary>Задает заглушка CodeGenerator.GenerateLinePragmaEnd(CodeLinePragma e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateLinePragmaEndCodeLinePragma">
            <summary>Задает stub CodeGenerator.GenerateLinePragmaEnd(CodeLinePragma e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateLinePragmaStart(System.CodeDom.CodeLinePragma)">
            <summary>Задает заглушка CodeGenerator.GenerateLinePragmaStart(CodeLinePragma e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateLinePragmaStartCodeLinePragma">
            <summary>Задает stub CodeGenerator.GenerateLinePragmaStart(CodeLinePragma e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateMethod(System.CodeDom.CodeMemberMethod,System.CodeDom.CodeTypeDeclaration)">
            <summary>Задает заглушка CodeGenerator.GenerateMethod(CodeMemberMethod e, CodeTypeDeclaration c)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateMethodCodeMemberMethodCodeTypeDeclaration">
            <summary>Задает stub CodeGenerator.GenerateMethod(CodeMemberMethod e, CodeTypeDeclaration c)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateMethodInvokeExpression(System.CodeDom.CodeMethodInvokeExpression)">
            <summary>Задает заглушка CodeGenerator.GenerateMethodInvokeExpression(CodeMethodInvokeExpression e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateMethodInvokeExpressionCodeMethodInvokeExpression">
            <summary>Задает stub CodeGenerator.GenerateMethodInvokeExpression(CodeMethodInvokeExpression e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateMethodReferenceExpression(System.CodeDom.CodeMethodReferenceExpression)">
            <summary>Задает заглушка CodeGenerator.GenerateMethodReferenceExpression(CodeMethodReferenceExpression e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateMethodReferenceExpressionCodeMethodReferenceExpression">
            <summary>Задает stub CodeGenerator.GenerateMethodReferenceExpression(CodeMethodReferenceExpression e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateMethodReturnStatement(System.CodeDom.CodeMethodReturnStatement)">
            <summary>Задает заглушка CodeGenerator.GenerateMethodReturnStatement(CodeMethodReturnStatement e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateMethodReturnStatementCodeMethodReturnStatement">
            <summary>Задает stub CodeGenerator.GenerateMethodReturnStatement(CodeMethodReturnStatement e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateNamespace(System.CodeDom.CodeNamespace)">
            <summary>Задает заглушка CodeGenerator.GenerateNamespace(CodeNamespace e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateNamespaceCodeNamespace">
            <summary>Задает stub CodeGenerator.GenerateNamespace(CodeNamespace e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateNamespaceEnd(System.CodeDom.CodeNamespace)">
            <summary>Задает заглушка CodeGenerator.GenerateNamespaceEnd(CodeNamespace e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateNamespaceEndCodeNamespace">
            <summary>Задает stub CodeGenerator.GenerateNamespaceEnd(CodeNamespace e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateNamespaceImport(System.CodeDom.CodeNamespaceImport)">
            <summary>Задает заглушка CodeGenerator.GenerateNamespaceImport(CodeNamespaceImport e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateNamespaceImportCodeNamespaceImport">
            <summary>Задает stub CodeGenerator.GenerateNamespaceImport(CodeNamespaceImport e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateNamespaceStart(System.CodeDom.CodeNamespace)">
            <summary>Задает заглушка CodeGenerator.GenerateNamespaceStart(CodeNamespace e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateNamespaceStartCodeNamespace">
            <summary>Задает stub CodeGenerator.GenerateNamespaceStart(CodeNamespace e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateObjectCreateExpression(System.CodeDom.CodeObjectCreateExpression)">
            <summary>Задает заглушка CodeGenerator.GenerateObjectCreateExpression(CodeObjectCreateExpression e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateObjectCreateExpressionCodeObjectCreateExpression">
            <summary>Задает stub CodeGenerator.GenerateObjectCreateExpression(CodeObjectCreateExpression e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateParameterDeclarationExpression(System.CodeDom.CodeParameterDeclarationExpression)">
            <summary>Задает заглушка CodeGenerator.GenerateParameterDeclarationExpression(CodeParameterDeclarationExpression e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateParameterDeclarationExpressionCodeParameterDeclarationExpression">
            <summary>Задает stub CodeGenerator.GenerateParameterDeclarationExpression(CodeParameterDeclarationExpression e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GeneratePrimitiveExpression(System.CodeDom.CodePrimitiveExpression)">
            <summary>Задает заглушка CodeGenerator.GeneratePrimitiveExpression(CodePrimitiveExpression e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GeneratePrimitiveExpressionCodePrimitiveExpression">
            <summary>Задает stub CodeGenerator.GeneratePrimitiveExpression(CodePrimitiveExpression e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateProperty(System.CodeDom.CodeMemberProperty,System.CodeDom.CodeTypeDeclaration)">
            <summary>Задает заглушка CodeGenerator.GenerateProperty(CodeMemberProperty e, CodeTypeDeclaration c)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GeneratePropertyCodeMemberPropertyCodeTypeDeclaration">
            <summary>Задает stub CodeGenerator.GenerateProperty(CodeMemberProperty e, CodeTypeDeclaration c)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GeneratePropertyReferenceExpression(System.CodeDom.CodePropertyReferenceExpression)">
            <summary>Задает заглушка CodeGenerator.GeneratePropertyReferenceExpression(CodePropertyReferenceExpression e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GeneratePropertyReferenceExpressionCodePropertyReferenceExpression">
            <summary>Задает stub CodeGenerator.GeneratePropertyReferenceExpression(CodePropertyReferenceExpression e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GeneratePropertySetValueReferenceExpression(System.CodeDom.CodePropertySetValueReferenceExpression)">
            <summary>Задает заглушка CodeGenerator.GeneratePropertySetValueReferenceExpression(CodePropertySetValueReferenceExpression e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GeneratePropertySetValueReferenceExpressionCodePropertySetValueReferenceExpression">
            <summary>Задает stub CodeGenerator.GeneratePropertySetValueReferenceExpression(CodePropertySetValueReferenceExpression e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateRemoveEventStatement(System.CodeDom.CodeRemoveEventStatement)">
            <summary>Задает заглушка CodeGenerator.GenerateRemoveEventStatement(CodeRemoveEventStatement e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateRemoveEventStatementCodeRemoveEventStatement">
            <summary>Задает stub CodeGenerator.GenerateRemoveEventStatement(CodeRemoveEventStatement e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateSingleFloatValue(System.Single)">
            <summary>Задает заглушка CodeGenerator.GenerateSingleFloatValue(Single s)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateSingleFloatValueSingle">
            <summary>Задает stub CodeGenerator.GenerateSingleFloatValue(Single s)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateSnippetCompileUnit(System.CodeDom.CodeSnippetCompileUnit)">
            <summary>Задает заглушка CodeGenerator.GenerateSnippetCompileUnit(CodeSnippetCompileUnit e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateSnippetCompileUnitCodeSnippetCompileUnit">
            <summary>Задает stub CodeGenerator.GenerateSnippetCompileUnit(CodeSnippetCompileUnit e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateSnippetExpression(System.CodeDom.CodeSnippetExpression)">
            <summary>Задает заглушка CodeGenerator.GenerateSnippetExpression(CodeSnippetExpression e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateSnippetExpressionCodeSnippetExpression">
            <summary>Задает stub CodeGenerator.GenerateSnippetExpression(CodeSnippetExpression e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateSnippetMember(System.CodeDom.CodeSnippetTypeMember)">
            <summary>Задает заглушка CodeGenerator.GenerateSnippetMember(CodeSnippetTypeMember e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateSnippetMemberCodeSnippetTypeMember">
            <summary>Задает stub CodeGenerator.GenerateSnippetMember(CodeSnippetTypeMember e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateSnippetStatement(System.CodeDom.CodeSnippetStatement)">
            <summary>Задает заглушка CodeGenerator.GenerateSnippetStatement(CodeSnippetStatement e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateSnippetStatementCodeSnippetStatement">
            <summary>Задает stub CodeGenerator.GenerateSnippetStatement(CodeSnippetStatement e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateThisReferenceExpression(System.CodeDom.CodeThisReferenceExpression)">
            <summary>Задает заглушка CodeGenerator.GenerateThisReferenceExpression(CodeThisReferenceExpression e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateThisReferenceExpressionCodeThisReferenceExpression">
            <summary>Задает stub CodeGenerator.GenerateThisReferenceExpression(CodeThisReferenceExpression e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateThrowExceptionStatement(System.CodeDom.CodeThrowExceptionStatement)">
            <summary>Задает заглушка CodeGenerator.GenerateThrowExceptionStatement(CodeThrowExceptionStatement e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateThrowExceptionStatementCodeThrowExceptionStatement">
            <summary>Задает stub CodeGenerator.GenerateThrowExceptionStatement(CodeThrowExceptionStatement e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateTryCatchFinallyStatement(System.CodeDom.CodeTryCatchFinallyStatement)">
            <summary>Задает заглушка CodeGenerator.GenerateTryCatchFinallyStatement(CodeTryCatchFinallyStatement e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateTryCatchFinallyStatementCodeTryCatchFinallyStatement">
            <summary>Задает stub CodeGenerator.GenerateTryCatchFinallyStatement(CodeTryCatchFinallyStatement e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateTypeConstructor(System.CodeDom.CodeTypeConstructor)">
            <summary>Задает заглушка CodeGenerator.GenerateTypeConstructor(CodeTypeConstructor e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateTypeConstructorCodeTypeConstructor">
            <summary>Задает stub CodeGenerator.GenerateTypeConstructor(CodeTypeConstructor e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateTypeEnd(System.CodeDom.CodeTypeDeclaration)">
            <summary>Задает заглушка CodeGenerator.GenerateTypeEnd(CodeTypeDeclaration e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateTypeEndCodeTypeDeclaration">
            <summary>Задает stub CodeGenerator.GenerateTypeEnd(CodeTypeDeclaration e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateTypeOfExpression(System.CodeDom.CodeTypeOfExpression)">
            <summary>Задает заглушка CodeGenerator.GenerateTypeOfExpression(CodeTypeOfExpression e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateTypeOfExpressionCodeTypeOfExpression">
            <summary>Задает stub CodeGenerator.GenerateTypeOfExpression(CodeTypeOfExpression e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateTypeReferenceExpression(System.CodeDom.CodeTypeReferenceExpression)">
            <summary>Задает заглушка CodeGenerator.GenerateTypeReferenceExpression(CodeTypeReferenceExpression e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateTypeReferenceExpressionCodeTypeReferenceExpression">
            <summary>Задает stub CodeGenerator.GenerateTypeReferenceExpression(CodeTypeReferenceExpression e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateTypeStart(System.CodeDom.CodeTypeDeclaration)">
            <summary>Задает заглушка CodeGenerator.GenerateTypeStart(CodeTypeDeclaration e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateTypeStartCodeTypeDeclaration">
            <summary>Задает stub CodeGenerator.GenerateTypeStart(CodeTypeDeclaration e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateVariableDeclarationStatement(System.CodeDom.CodeVariableDeclarationStatement)">
            <summary>Задает заглушка CodeGenerator.GenerateVariableDeclarationStatement(CodeVariableDeclarationStatement e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateVariableDeclarationStatementCodeVariableDeclarationStatement">
            <summary>Задает stub CodeGenerator.GenerateVariableDeclarationStatement(CodeVariableDeclarationStatement e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateVariableReferenceExpression(System.CodeDom.CodeVariableReferenceExpression)">
            <summary>Задает заглушка CodeGenerator.GenerateVariableReferenceExpression(CodeVariableReferenceExpression e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GenerateVariableReferenceExpressionCodeVariableReferenceExpression">
            <summary>Задает stub CodeGenerator.GenerateVariableReferenceExpression(CodeVariableReferenceExpression e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GetResponseFileCmdArgs(System.CodeDom.Compiler.CompilerParameters,System.String)">
            <summary>Задает заглушка CodeCompiler.GetResponseFileCmdArgs(CompilerParameters options, String cmdArgs)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GetResponseFileCmdArgsCompilerParametersString">
            <summary>Задает stub CodeCompiler.GetResponseFileCmdArgs(CompilerParameters options, String cmdArgs)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GetTypeOutput(System.CodeDom.CodeTypeReference)">
            <summary>Задает заглушка CodeGenerator.GetTypeOutput(CodeTypeReference value)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeCompiler.GetTypeOutputCodeTypeReference">
            <summary>Задает stub CodeGenerator.GetTypeOutput(CodeTypeReference value)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeCompiler.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCodeCompiler</summary>
        </member>
        <member name="P:System.CodeDom.Compiler.Fakes.StubCodeCompiler.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.CodeDom.Compiler.Fakes.StubCodeCompiler.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeCompiler.IsValidIdentifier(System.String)">
            <summary>Задает заглушка CodeGenerator.IsValidIdentifier(String value)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeCompiler.IsValidIdentifierString">
            <summary>Задает stub CodeGenerator.IsValidIdentifier(String value)</summary>
        </member>
        <member name="P:System.CodeDom.Compiler.Fakes.StubCodeCompiler.NullToken">
            <summary>Задает stub CodeGenerator.get_NullToken()</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeCompiler.NullTokenGet">
            <summary>Задает stub CodeGenerator.get_NullToken()</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeCompiler.OutputAttributeArgument(System.CodeDom.CodeAttributeArgument)">
            <summary>Задает заглушка CodeGenerator.OutputAttributeArgument(CodeAttributeArgument arg)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeCompiler.OutputAttributeArgumentCodeAttributeArgument">
            <summary>Задает stub CodeGenerator.OutputAttributeArgument(CodeAttributeArgument arg)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeCompiler.OutputAttributeDeclarations(System.CodeDom.CodeAttributeDeclarationCollection)">
            <summary>Задает заглушка CodeGenerator.OutputAttributeDeclarations(CodeAttributeDeclarationCollection attributes)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeCompiler.OutputAttributeDeclarationsCodeAttributeDeclarationCollection">
            <summary>Задает stub CodeGenerator.OutputAttributeDeclarations(CodeAttributeDeclarationCollection attributes)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeCompiler.OutputDirection(System.CodeDom.FieldDirection)">
            <summary>Задает заглушка CodeGenerator.OutputDirection(FieldDirection dir)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeCompiler.OutputDirectionFieldDirection">
            <summary>Задает stub CodeGenerator.OutputDirection(FieldDirection dir)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeCompiler.OutputExpressionList(System.CodeDom.CodeExpressionCollection)">
            <summary>Задает заглушка CodeGenerator.OutputExpressionList(CodeExpressionCollection expressions)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeCompiler.OutputExpressionList(System.CodeDom.CodeExpressionCollection,System.Boolean)">
            <summary>Задает заглушка CodeGenerator.OutputExpressionList(CodeExpressionCollection expressions, Boolean newlineBetweenItems)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeCompiler.OutputExpressionListCodeExpressionCollection">
            <summary>Задает stub CodeGenerator.OutputExpressionList(CodeExpressionCollection expressions)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeCompiler.OutputExpressionListCodeExpressionCollectionBoolean">
            <summary>Задает stub CodeGenerator.OutputExpressionList(CodeExpressionCollection expressions, Boolean newlineBetweenItems)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeCompiler.OutputFieldScopeModifier(System.CodeDom.MemberAttributes)">
            <summary>Задает заглушка CodeGenerator.OutputFieldScopeModifier(MemberAttributes attributes)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeCompiler.OutputFieldScopeModifierMemberAttributes">
            <summary>Задает stub CodeGenerator.OutputFieldScopeModifier(MemberAttributes attributes)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeCompiler.OutputIdentifier(System.String)">
            <summary>Задает заглушка CodeGenerator.OutputIdentifier(String ident)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeCompiler.OutputIdentifierString">
            <summary>Задает stub CodeGenerator.OutputIdentifier(String ident)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeCompiler.OutputMemberAccessModifier(System.CodeDom.MemberAttributes)">
            <summary>Задает заглушка CodeGenerator.OutputMemberAccessModifier(MemberAttributes attributes)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeCompiler.OutputMemberAccessModifierMemberAttributes">
            <summary>Задает stub CodeGenerator.OutputMemberAccessModifier(MemberAttributes attributes)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeCompiler.OutputMemberScopeModifier(System.CodeDom.MemberAttributes)">
            <summary>Задает заглушка CodeGenerator.OutputMemberScopeModifier(MemberAttributes attributes)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeCompiler.OutputMemberScopeModifierMemberAttributes">
            <summary>Задает stub CodeGenerator.OutputMemberScopeModifier(MemberAttributes attributes)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeCompiler.OutputOperator(System.CodeDom.CodeBinaryOperatorType)">
            <summary>Задает заглушка CodeGenerator.OutputOperator(CodeBinaryOperatorType op)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeCompiler.OutputOperatorCodeBinaryOperatorType">
            <summary>Задает stub CodeGenerator.OutputOperator(CodeBinaryOperatorType op)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeCompiler.OutputParameters(System.CodeDom.CodeParameterDeclarationExpressionCollection)">
            <summary>Задает заглушка CodeGenerator.OutputParameters(CodeParameterDeclarationExpressionCollection parameters)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeCompiler.OutputParametersCodeParameterDeclarationExpressionCollection">
            <summary>Задает stub CodeGenerator.OutputParameters(CodeParameterDeclarationExpressionCollection parameters)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeCompiler.OutputType(System.CodeDom.CodeTypeReference)">
            <summary>Задает заглушка CodeGenerator.OutputType(CodeTypeReference typeRef)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeCompiler.OutputTypeAttributes(System.Reflection.TypeAttributes,System.Boolean,System.Boolean)">
            <summary>Задает заглушка CodeGenerator.OutputTypeAttributes(TypeAttributes attributes, Boolean isStruct, Boolean isEnum)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeCompiler.OutputTypeAttributesTypeAttributesBooleanBoolean">
            <summary>Задает stub CodeGenerator.OutputTypeAttributes(TypeAttributes attributes, Boolean isStruct, Boolean isEnum)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeCompiler.OutputTypeCodeTypeReference">
            <summary>Задает stub CodeGenerator.OutputType(CodeTypeReference typeRef)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeCompiler.OutputTypeNamePair(System.CodeDom.CodeTypeReference,System.String)">
            <summary>Задает заглушка CodeGenerator.OutputTypeNamePair(CodeTypeReference typeRef, String name)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeCompiler.OutputTypeNamePairCodeTypeReferenceString">
            <summary>Задает stub CodeGenerator.OutputTypeNamePair(CodeTypeReference typeRef, String name)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeCompiler.ProcessCompilerOutputLine(System.CodeDom.Compiler.CompilerResults,System.String)">
            <summary>Задает заглушка CodeCompiler.ProcessCompilerOutputLine(CompilerResults results, String line)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeCompiler.ProcessCompilerOutputLineCompilerResultsString">
            <summary>Задает stub CodeCompiler.ProcessCompilerOutputLine(CompilerResults results, String line)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeCompiler.QuoteSnippetString(System.String)">
            <summary>Задает заглушка CodeGenerator.QuoteSnippetString(String value)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeCompiler.QuoteSnippetStringString">
            <summary>Задает stub CodeGenerator.QuoteSnippetString(String value)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeCompiler.Supports(System.CodeDom.Compiler.GeneratorSupport)">
            <summary>Задает заглушка CodeGenerator.Supports(GeneratorSupport support)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeCompiler.SupportsGeneratorSupport">
            <summary>Задает stub CodeGenerator.Supports(GeneratorSupport support)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeCompiler.ValidateIdentifier(System.String)">
            <summary>Задает заглушка CodeGenerator.ValidateIdentifier(String value)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeCompiler.ValidateIdentifierString">
            <summary>Задает stub CodeGenerator.ValidateIdentifier(String value)</summary>
        </member>
        <member name="T:System.CodeDom.Compiler.Fakes.StubCodeDomProvider">
            <summary>Тип заглушки System.CodeDom.Compiler.CodeDomProvider</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeDomProvider.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeDomProvider.AttachBackingFieldToSite">
            <summary>Присоединение делегатов для эмуляции StubCodeDomProvider.Site как свойства с резервным полем.</summary>
        </member>
        <member name="P:System.CodeDom.Compiler.Fakes.StubCodeDomProvider.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.CodeDom.Compiler.Fakes.StubCodeDomProvider.CanRaiseEvents">
            <summary>Задает stub Component.get_CanRaiseEvents()</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeDomProvider.CanRaiseEventsGet">
            <summary>Задает stub Component.get_CanRaiseEvents()</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeDomProvider.CompileAssemblyFromDom(System.CodeDom.Compiler.CompilerParameters,System.CodeDom.CodeCompileUnit[])">
            <summary>Задает заглушка CodeDomProvider.CompileAssemblyFromDom(CompilerParameters options, CodeCompileUnit[] compilationUnits)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeDomProvider.CompileAssemblyFromDomCompilerParametersCodeCompileUnitArray">
            <summary>Задает stub CodeDomProvider.CompileAssemblyFromDom(CompilerParameters options, CodeCompileUnit[] compilationUnits)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeDomProvider.CompileAssemblyFromFile(System.CodeDom.Compiler.CompilerParameters,System.String[])">
            <summary>Задает заглушка CodeDomProvider.CompileAssemblyFromFile(CompilerParameters options, String[] fileNames)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeDomProvider.CompileAssemblyFromFileCompilerParametersStringArray">
            <summary>Задает stub CodeDomProvider.CompileAssemblyFromFile(CompilerParameters options, String[] fileNames)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeDomProvider.CompileAssemblyFromSource(System.CodeDom.Compiler.CompilerParameters,System.String[])">
            <summary>Задает заглушка CodeDomProvider.CompileAssemblyFromSource(CompilerParameters options, String[] sources)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeDomProvider.CompileAssemblyFromSourceCompilerParametersStringArray">
            <summary>Задает stub CodeDomProvider.CompileAssemblyFromSource(CompilerParameters options, String[] sources)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeDomProvider.CreateCompiler">
            <summary>Задает заглушка CodeDomProvider.CreateCompiler()</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeDomProvider.CreateCompiler01">
            <summary>Задает stub CodeDomProvider.CreateCompiler()</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeDomProvider.CreateEscapedIdentifier(System.String)">
            <summary>Задает заглушка CodeDomProvider.CreateEscapedIdentifier(String value)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeDomProvider.CreateEscapedIdentifierString">
            <summary>Задает stub CodeDomProvider.CreateEscapedIdentifier(String value)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeDomProvider.CreateGenerator">
            <summary>Задает заглушка CodeDomProvider.CreateGenerator()</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeDomProvider.CreateGenerator(System.String)">
            <summary>Задает заглушка CodeDomProvider.CreateGenerator(String fileName)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeDomProvider.CreateGenerator(System.IO.TextWriter)">
            <summary>Задает заглушка CodeDomProvider.CreateGenerator(TextWriter output)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeDomProvider.CreateGenerator01">
            <summary>Задает stub CodeDomProvider.CreateGenerator()</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeDomProvider.CreateGeneratorString">
            <summary>Задает stub CodeDomProvider.CreateGenerator(String fileName)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeDomProvider.CreateGeneratorTextWriter">
            <summary>Задает stub CodeDomProvider.CreateGenerator(TextWriter output)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeDomProvider.CreateParser">
            <summary>Задает заглушка CodeDomProvider.CreateParser()</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeDomProvider.CreateParser01">
            <summary>Задает stub CodeDomProvider.CreateParser()</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeDomProvider.CreateValidIdentifier(System.String)">
            <summary>Задает заглушка CodeDomProvider.CreateValidIdentifier(String value)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeDomProvider.CreateValidIdentifierString">
            <summary>Задает stub CodeDomProvider.CreateValidIdentifier(String value)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeDomProvider.Dispose(System.Boolean)">
            <summary>Задает заглушка Component.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeDomProvider.DisposeBoolean">
            <summary>Задает stub Component.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.CodeDom.Compiler.Fakes.StubCodeDomProvider.FileExtension">
            <summary>Задает stub CodeDomProvider.get_FileExtension()</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeDomProvider.FileExtensionGet">
            <summary>Задает stub CodeDomProvider.get_FileExtension()</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeDomProvider.GenerateCodeFromCompileUnit(System.CodeDom.CodeCompileUnit,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
            <summary>Задает заглушка CodeDomProvider.GenerateCodeFromCompileUnit(CodeCompileUnit compileUnit, TextWriter writer, CodeGeneratorOptions options)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeDomProvider.GenerateCodeFromCompileUnitCodeCompileUnitTextWriterCodeGeneratorOptions">
            <summary>Задает stub CodeDomProvider.GenerateCodeFromCompileUnit(CodeCompileUnit compileUnit, TextWriter writer, CodeGeneratorOptions options)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeDomProvider.GenerateCodeFromExpression(System.CodeDom.CodeExpression,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
            <summary>Задает заглушка CodeDomProvider.GenerateCodeFromExpression(CodeExpression expression, TextWriter writer, CodeGeneratorOptions options)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeDomProvider.GenerateCodeFromExpressionCodeExpressionTextWriterCodeGeneratorOptions">
            <summary>Задает stub CodeDomProvider.GenerateCodeFromExpression(CodeExpression expression, TextWriter writer, CodeGeneratorOptions options)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeDomProvider.GenerateCodeFromMember(System.CodeDom.CodeTypeMember,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
            <summary>Задает заглушка CodeDomProvider.GenerateCodeFromMember(CodeTypeMember member, TextWriter writer, CodeGeneratorOptions options)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeDomProvider.GenerateCodeFromMemberCodeTypeMemberTextWriterCodeGeneratorOptions">
            <summary>Задает stub CodeDomProvider.GenerateCodeFromMember(CodeTypeMember member, TextWriter writer, CodeGeneratorOptions options)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeDomProvider.GenerateCodeFromNamespace(System.CodeDom.CodeNamespace,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
            <summary>Задает заглушка CodeDomProvider.GenerateCodeFromNamespace(CodeNamespace codeNamespace, TextWriter writer, CodeGeneratorOptions options)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeDomProvider.GenerateCodeFromNamespaceCodeNamespaceTextWriterCodeGeneratorOptions">
            <summary>Задает stub CodeDomProvider.GenerateCodeFromNamespace(CodeNamespace codeNamespace, TextWriter writer, CodeGeneratorOptions options)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeDomProvider.GenerateCodeFromStatement(System.CodeDom.CodeStatement,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
            <summary>Задает заглушка CodeDomProvider.GenerateCodeFromStatement(CodeStatement statement, TextWriter writer, CodeGeneratorOptions options)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeDomProvider.GenerateCodeFromStatementCodeStatementTextWriterCodeGeneratorOptions">
            <summary>Задает stub CodeDomProvider.GenerateCodeFromStatement(CodeStatement statement, TextWriter writer, CodeGeneratorOptions options)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeDomProvider.GenerateCodeFromType(System.CodeDom.CodeTypeDeclaration,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
            <summary>Задает заглушка CodeDomProvider.GenerateCodeFromType(CodeTypeDeclaration codeType, TextWriter writer, CodeGeneratorOptions options)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeDomProvider.GenerateCodeFromTypeCodeTypeDeclarationTextWriterCodeGeneratorOptions">
            <summary>Задает stub CodeDomProvider.GenerateCodeFromType(CodeTypeDeclaration codeType, TextWriter writer, CodeGeneratorOptions options)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeDomProvider.GetConverter(System.Type)">
            <summary>Задает заглушка CodeDomProvider.GetConverter(Type type)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeDomProvider.GetConverterType">
            <summary>Задает stub CodeDomProvider.GetConverter(Type type)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeDomProvider.GetService(System.Type)">
            <summary>Задает заглушка Component.GetService(Type service)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeDomProvider.GetServiceType">
            <summary>Задает stub Component.GetService(Type service)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeDomProvider.GetTypeOutput(System.CodeDom.CodeTypeReference)">
            <summary>Задает заглушка CodeDomProvider.GetTypeOutput(CodeTypeReference type)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeDomProvider.GetTypeOutputCodeTypeReference">
            <summary>Задает stub CodeDomProvider.GetTypeOutput(CodeTypeReference type)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeDomProvider.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCodeDomProvider</summary>
        </member>
        <member name="P:System.CodeDom.Compiler.Fakes.StubCodeDomProvider.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.CodeDom.Compiler.Fakes.StubCodeDomProvider.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeDomProvider.IsValidIdentifier(System.String)">
            <summary>Задает заглушка CodeDomProvider.IsValidIdentifier(String value)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeDomProvider.IsValidIdentifierString">
            <summary>Задает stub CodeDomProvider.IsValidIdentifier(String value)</summary>
        </member>
        <member name="P:System.CodeDom.Compiler.Fakes.StubCodeDomProvider.LanguageOptions">
            <summary>Задает stub CodeDomProvider.get_LanguageOptions()</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeDomProvider.LanguageOptionsGet">
            <summary>Задает stub CodeDomProvider.get_LanguageOptions()</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeDomProvider.Parse(System.IO.TextReader)">
            <summary>Задает заглушка CodeDomProvider.Parse(TextReader codeStream)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeDomProvider.ParseTextReader">
            <summary>Задает stub CodeDomProvider.Parse(TextReader codeStream)</summary>
        </member>
        <member name="P:System.CodeDom.Compiler.Fakes.StubCodeDomProvider.Site">
            <summary>Задает stub Component.get_Site()</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeDomProvider.SiteGet">
            <summary>Задает stub Component.get_Site()</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeDomProvider.SiteSetISite">
            <summary>Задает stub Component.set_Site(ISite value)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeDomProvider.Supports(System.CodeDom.Compiler.GeneratorSupport)">
            <summary>Задает заглушка CodeDomProvider.Supports(GeneratorSupport generatorSupport)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeDomProvider.SupportsGeneratorSupport">
            <summary>Задает stub CodeDomProvider.Supports(GeneratorSupport generatorSupport)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeDomProvider.ToString">
            <summary>Задает заглушка Component.ToString()</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeDomProvider.ToString01">
            <summary>Задает stub Component.ToString()</summary>
        </member>
        <member name="T:System.CodeDom.Compiler.Fakes.StubCodeGenerator">
            <summary>Тип заглушки System.CodeDom.Compiler.CodeGenerator</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeGenerator.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.CodeDom.Compiler.Fakes.StubCodeGenerator.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeGenerator.ContinueOnNewLine(System.String)">
            <summary>Задает заглушка CodeGenerator.ContinueOnNewLine(String st)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeGenerator.ContinueOnNewLineString">
            <summary>Задает stub CodeGenerator.ContinueOnNewLine(String st)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeGenerator.CreateEscapedIdentifier(System.String)">
            <summary>Задает заглушка CodeGenerator.CreateEscapedIdentifier(String value)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeGenerator.CreateEscapedIdentifierString">
            <summary>Задает stub CodeGenerator.CreateEscapedIdentifier(String value)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeGenerator.CreateValidIdentifier(System.String)">
            <summary>Задает заглушка CodeGenerator.CreateValidIdentifier(String value)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeGenerator.CreateValidIdentifierString">
            <summary>Задает stub CodeGenerator.CreateValidIdentifier(String value)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateArgumentReferenceExpression(System.CodeDom.CodeArgumentReferenceExpression)">
            <summary>Задает заглушка CodeGenerator.GenerateArgumentReferenceExpression(CodeArgumentReferenceExpression e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateArgumentReferenceExpressionCodeArgumentReferenceExpression">
            <summary>Задает stub CodeGenerator.GenerateArgumentReferenceExpression(CodeArgumentReferenceExpression e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateArrayCreateExpression(System.CodeDom.CodeArrayCreateExpression)">
            <summary>Задает заглушка CodeGenerator.GenerateArrayCreateExpression(CodeArrayCreateExpression e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateArrayCreateExpressionCodeArrayCreateExpression">
            <summary>Задает stub CodeGenerator.GenerateArrayCreateExpression(CodeArrayCreateExpression e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateArrayIndexerExpression(System.CodeDom.CodeArrayIndexerExpression)">
            <summary>Задает заглушка CodeGenerator.GenerateArrayIndexerExpression(CodeArrayIndexerExpression e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateArrayIndexerExpressionCodeArrayIndexerExpression">
            <summary>Задает stub CodeGenerator.GenerateArrayIndexerExpression(CodeArrayIndexerExpression e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateAssignStatement(System.CodeDom.CodeAssignStatement)">
            <summary>Задает заглушка CodeGenerator.GenerateAssignStatement(CodeAssignStatement e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateAssignStatementCodeAssignStatement">
            <summary>Задает stub CodeGenerator.GenerateAssignStatement(CodeAssignStatement e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateAttachEventStatement(System.CodeDom.CodeAttachEventStatement)">
            <summary>Задает заглушка CodeGenerator.GenerateAttachEventStatement(CodeAttachEventStatement e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateAttachEventStatementCodeAttachEventStatement">
            <summary>Задает stub CodeGenerator.GenerateAttachEventStatement(CodeAttachEventStatement e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateAttributeDeclarationsEnd(System.CodeDom.CodeAttributeDeclarationCollection)">
            <summary>Задает заглушка CodeGenerator.GenerateAttributeDeclarationsEnd(CodeAttributeDeclarationCollection attributes)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateAttributeDeclarationsEndCodeAttributeDeclarationCollection">
            <summary>Задает stub CodeGenerator.GenerateAttributeDeclarationsEnd(CodeAttributeDeclarationCollection attributes)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateAttributeDeclarationsStart(System.CodeDom.CodeAttributeDeclarationCollection)">
            <summary>Задает заглушка CodeGenerator.GenerateAttributeDeclarationsStart(CodeAttributeDeclarationCollection attributes)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateAttributeDeclarationsStartCodeAttributeDeclarationCollection">
            <summary>Задает stub CodeGenerator.GenerateAttributeDeclarationsStart(CodeAttributeDeclarationCollection attributes)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateBaseReferenceExpression(System.CodeDom.CodeBaseReferenceExpression)">
            <summary>Задает заглушка CodeGenerator.GenerateBaseReferenceExpression(CodeBaseReferenceExpression e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateBaseReferenceExpressionCodeBaseReferenceExpression">
            <summary>Задает stub CodeGenerator.GenerateBaseReferenceExpression(CodeBaseReferenceExpression e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateBinaryOperatorExpression(System.CodeDom.CodeBinaryOperatorExpression)">
            <summary>Задает заглушка CodeGenerator.GenerateBinaryOperatorExpression(CodeBinaryOperatorExpression e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateBinaryOperatorExpressionCodeBinaryOperatorExpression">
            <summary>Задает stub CodeGenerator.GenerateBinaryOperatorExpression(CodeBinaryOperatorExpression e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateCastExpression(System.CodeDom.CodeCastExpression)">
            <summary>Задает заглушка CodeGenerator.GenerateCastExpression(CodeCastExpression e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateCastExpressionCodeCastExpression">
            <summary>Задает stub CodeGenerator.GenerateCastExpression(CodeCastExpression e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateCodeFromMember(System.CodeDom.CodeTypeMember,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
            <summary>Задает заглушка CodeGenerator.GenerateCodeFromMember(CodeTypeMember member, TextWriter writer, CodeGeneratorOptions options)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateCodeFromMemberCodeTypeMemberTextWriterCodeGeneratorOptions">
            <summary>Задает stub CodeGenerator.GenerateCodeFromMember(CodeTypeMember member, TextWriter writer, CodeGeneratorOptions options)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateComment(System.CodeDom.CodeComment)">
            <summary>Задает заглушка CodeGenerator.GenerateComment(CodeComment e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateCommentCodeComment">
            <summary>Задает stub CodeGenerator.GenerateComment(CodeComment e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateCommentStatement(System.CodeDom.CodeCommentStatement)">
            <summary>Задает заглушка CodeGenerator.GenerateCommentStatement(CodeCommentStatement e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateCommentStatementCodeCommentStatement">
            <summary>Задает stub CodeGenerator.GenerateCommentStatement(CodeCommentStatement e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateCommentStatements(System.CodeDom.CodeCommentStatementCollection)">
            <summary>Задает заглушка CodeGenerator.GenerateCommentStatements(CodeCommentStatementCollection e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateCommentStatementsCodeCommentStatementCollection">
            <summary>Задает stub CodeGenerator.GenerateCommentStatements(CodeCommentStatementCollection e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateCompileUnit(System.CodeDom.CodeCompileUnit)">
            <summary>Задает заглушка CodeGenerator.GenerateCompileUnit(CodeCompileUnit e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateCompileUnitCodeCompileUnit">
            <summary>Задает stub CodeGenerator.GenerateCompileUnit(CodeCompileUnit e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateCompileUnitEnd(System.CodeDom.CodeCompileUnit)">
            <summary>Задает заглушка CodeGenerator.GenerateCompileUnitEnd(CodeCompileUnit e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateCompileUnitEndCodeCompileUnit">
            <summary>Задает stub CodeGenerator.GenerateCompileUnitEnd(CodeCompileUnit e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateCompileUnitStart(System.CodeDom.CodeCompileUnit)">
            <summary>Задает заглушка CodeGenerator.GenerateCompileUnitStart(CodeCompileUnit e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateCompileUnitStartCodeCompileUnit">
            <summary>Задает stub CodeGenerator.GenerateCompileUnitStart(CodeCompileUnit e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateConditionStatement(System.CodeDom.CodeConditionStatement)">
            <summary>Задает заглушка CodeGenerator.GenerateConditionStatement(CodeConditionStatement e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateConditionStatementCodeConditionStatement">
            <summary>Задает stub CodeGenerator.GenerateConditionStatement(CodeConditionStatement e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateConstructor(System.CodeDom.CodeConstructor,System.CodeDom.CodeTypeDeclaration)">
            <summary>Задает заглушка CodeGenerator.GenerateConstructor(CodeConstructor e, CodeTypeDeclaration c)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateConstructorCodeConstructorCodeTypeDeclaration">
            <summary>Задает stub CodeGenerator.GenerateConstructor(CodeConstructor e, CodeTypeDeclaration c)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateDecimalValue(System.Decimal)">
            <summary>Задает заглушка CodeGenerator.GenerateDecimalValue(Decimal d)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateDecimalValueDecimal">
            <summary>Задает stub CodeGenerator.GenerateDecimalValue(Decimal d)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateDefaultValueExpression(System.CodeDom.CodeDefaultValueExpression)">
            <summary>Задает заглушка CodeGenerator.GenerateDefaultValueExpression(CodeDefaultValueExpression e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateDefaultValueExpressionCodeDefaultValueExpression">
            <summary>Задает stub CodeGenerator.GenerateDefaultValueExpression(CodeDefaultValueExpression e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateDelegateCreateExpression(System.CodeDom.CodeDelegateCreateExpression)">
            <summary>Задает заглушка CodeGenerator.GenerateDelegateCreateExpression(CodeDelegateCreateExpression e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateDelegateCreateExpressionCodeDelegateCreateExpression">
            <summary>Задает stub CodeGenerator.GenerateDelegateCreateExpression(CodeDelegateCreateExpression e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateDelegateInvokeExpression(System.CodeDom.CodeDelegateInvokeExpression)">
            <summary>Задает заглушка CodeGenerator.GenerateDelegateInvokeExpression(CodeDelegateInvokeExpression e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateDelegateInvokeExpressionCodeDelegateInvokeExpression">
            <summary>Задает stub CodeGenerator.GenerateDelegateInvokeExpression(CodeDelegateInvokeExpression e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateDirectionExpression(System.CodeDom.CodeDirectionExpression)">
            <summary>Задает заглушка CodeGenerator.GenerateDirectionExpression(CodeDirectionExpression e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateDirectionExpressionCodeDirectionExpression">
            <summary>Задает stub CodeGenerator.GenerateDirectionExpression(CodeDirectionExpression e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateDirectives(System.CodeDom.CodeDirectiveCollection)">
            <summary>Задает заглушка CodeGenerator.GenerateDirectives(CodeDirectiveCollection directives)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateDirectivesCodeDirectiveCollection">
            <summary>Задает stub CodeGenerator.GenerateDirectives(CodeDirectiveCollection directives)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateDoubleValue(System.Double)">
            <summary>Задает заглушка CodeGenerator.GenerateDoubleValue(Double d)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateDoubleValueDouble">
            <summary>Задает stub CodeGenerator.GenerateDoubleValue(Double d)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateEntryPointMethod(System.CodeDom.CodeEntryPointMethod,System.CodeDom.CodeTypeDeclaration)">
            <summary>Задает заглушка CodeGenerator.GenerateEntryPointMethod(CodeEntryPointMethod e, CodeTypeDeclaration c)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateEntryPointMethodCodeEntryPointMethodCodeTypeDeclaration">
            <summary>Задает stub CodeGenerator.GenerateEntryPointMethod(CodeEntryPointMethod e, CodeTypeDeclaration c)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateEvent(System.CodeDom.CodeMemberEvent,System.CodeDom.CodeTypeDeclaration)">
            <summary>Задает заглушка CodeGenerator.GenerateEvent(CodeMemberEvent e, CodeTypeDeclaration c)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateEventCodeMemberEventCodeTypeDeclaration">
            <summary>Задает stub CodeGenerator.GenerateEvent(CodeMemberEvent e, CodeTypeDeclaration c)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateEventReferenceExpression(System.CodeDom.CodeEventReferenceExpression)">
            <summary>Задает заглушка CodeGenerator.GenerateEventReferenceExpression(CodeEventReferenceExpression e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateEventReferenceExpressionCodeEventReferenceExpression">
            <summary>Задает stub CodeGenerator.GenerateEventReferenceExpression(CodeEventReferenceExpression e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateExpressionStatement(System.CodeDom.CodeExpressionStatement)">
            <summary>Задает заглушка CodeGenerator.GenerateExpressionStatement(CodeExpressionStatement e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateExpressionStatementCodeExpressionStatement">
            <summary>Задает stub CodeGenerator.GenerateExpressionStatement(CodeExpressionStatement e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateField(System.CodeDom.CodeMemberField)">
            <summary>Задает заглушка CodeGenerator.GenerateField(CodeMemberField e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateFieldCodeMemberField">
            <summary>Задает stub CodeGenerator.GenerateField(CodeMemberField e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateFieldReferenceExpression(System.CodeDom.CodeFieldReferenceExpression)">
            <summary>Задает заглушка CodeGenerator.GenerateFieldReferenceExpression(CodeFieldReferenceExpression e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateFieldReferenceExpressionCodeFieldReferenceExpression">
            <summary>Задает stub CodeGenerator.GenerateFieldReferenceExpression(CodeFieldReferenceExpression e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateGotoStatement(System.CodeDom.CodeGotoStatement)">
            <summary>Задает заглушка CodeGenerator.GenerateGotoStatement(CodeGotoStatement e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateGotoStatementCodeGotoStatement">
            <summary>Задает stub CodeGenerator.GenerateGotoStatement(CodeGotoStatement e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateIndexerExpression(System.CodeDom.CodeIndexerExpression)">
            <summary>Задает заглушка CodeGenerator.GenerateIndexerExpression(CodeIndexerExpression e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateIndexerExpressionCodeIndexerExpression">
            <summary>Задает stub CodeGenerator.GenerateIndexerExpression(CodeIndexerExpression e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateIterationStatement(System.CodeDom.CodeIterationStatement)">
            <summary>Задает заглушка CodeGenerator.GenerateIterationStatement(CodeIterationStatement e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateIterationStatementCodeIterationStatement">
            <summary>Задает stub CodeGenerator.GenerateIterationStatement(CodeIterationStatement e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateLabeledStatement(System.CodeDom.CodeLabeledStatement)">
            <summary>Задает заглушка CodeGenerator.GenerateLabeledStatement(CodeLabeledStatement e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateLabeledStatementCodeLabeledStatement">
            <summary>Задает stub CodeGenerator.GenerateLabeledStatement(CodeLabeledStatement e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateLinePragmaEnd(System.CodeDom.CodeLinePragma)">
            <summary>Задает заглушка CodeGenerator.GenerateLinePragmaEnd(CodeLinePragma e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateLinePragmaEndCodeLinePragma">
            <summary>Задает stub CodeGenerator.GenerateLinePragmaEnd(CodeLinePragma e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateLinePragmaStart(System.CodeDom.CodeLinePragma)">
            <summary>Задает заглушка CodeGenerator.GenerateLinePragmaStart(CodeLinePragma e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateLinePragmaStartCodeLinePragma">
            <summary>Задает stub CodeGenerator.GenerateLinePragmaStart(CodeLinePragma e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateMethod(System.CodeDom.CodeMemberMethod,System.CodeDom.CodeTypeDeclaration)">
            <summary>Задает заглушка CodeGenerator.GenerateMethod(CodeMemberMethod e, CodeTypeDeclaration c)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateMethodCodeMemberMethodCodeTypeDeclaration">
            <summary>Задает stub CodeGenerator.GenerateMethod(CodeMemberMethod e, CodeTypeDeclaration c)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateMethodInvokeExpression(System.CodeDom.CodeMethodInvokeExpression)">
            <summary>Задает заглушка CodeGenerator.GenerateMethodInvokeExpression(CodeMethodInvokeExpression e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateMethodInvokeExpressionCodeMethodInvokeExpression">
            <summary>Задает stub CodeGenerator.GenerateMethodInvokeExpression(CodeMethodInvokeExpression e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateMethodReferenceExpression(System.CodeDom.CodeMethodReferenceExpression)">
            <summary>Задает заглушка CodeGenerator.GenerateMethodReferenceExpression(CodeMethodReferenceExpression e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateMethodReferenceExpressionCodeMethodReferenceExpression">
            <summary>Задает stub CodeGenerator.GenerateMethodReferenceExpression(CodeMethodReferenceExpression e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateMethodReturnStatement(System.CodeDom.CodeMethodReturnStatement)">
            <summary>Задает заглушка CodeGenerator.GenerateMethodReturnStatement(CodeMethodReturnStatement e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateMethodReturnStatementCodeMethodReturnStatement">
            <summary>Задает stub CodeGenerator.GenerateMethodReturnStatement(CodeMethodReturnStatement e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateNamespace(System.CodeDom.CodeNamespace)">
            <summary>Задает заглушка CodeGenerator.GenerateNamespace(CodeNamespace e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateNamespaceCodeNamespace">
            <summary>Задает stub CodeGenerator.GenerateNamespace(CodeNamespace e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateNamespaceEnd(System.CodeDom.CodeNamespace)">
            <summary>Задает заглушка CodeGenerator.GenerateNamespaceEnd(CodeNamespace e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateNamespaceEndCodeNamespace">
            <summary>Задает stub CodeGenerator.GenerateNamespaceEnd(CodeNamespace e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateNamespaceImport(System.CodeDom.CodeNamespaceImport)">
            <summary>Задает заглушка CodeGenerator.GenerateNamespaceImport(CodeNamespaceImport e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateNamespaceImportCodeNamespaceImport">
            <summary>Задает stub CodeGenerator.GenerateNamespaceImport(CodeNamespaceImport e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateNamespaceStart(System.CodeDom.CodeNamespace)">
            <summary>Задает заглушка CodeGenerator.GenerateNamespaceStart(CodeNamespace e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateNamespaceStartCodeNamespace">
            <summary>Задает stub CodeGenerator.GenerateNamespaceStart(CodeNamespace e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateObjectCreateExpression(System.CodeDom.CodeObjectCreateExpression)">
            <summary>Задает заглушка CodeGenerator.GenerateObjectCreateExpression(CodeObjectCreateExpression e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateObjectCreateExpressionCodeObjectCreateExpression">
            <summary>Задает stub CodeGenerator.GenerateObjectCreateExpression(CodeObjectCreateExpression e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateParameterDeclarationExpression(System.CodeDom.CodeParameterDeclarationExpression)">
            <summary>Задает заглушка CodeGenerator.GenerateParameterDeclarationExpression(CodeParameterDeclarationExpression e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateParameterDeclarationExpressionCodeParameterDeclarationExpression">
            <summary>Задает stub CodeGenerator.GenerateParameterDeclarationExpression(CodeParameterDeclarationExpression e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GeneratePrimitiveExpression(System.CodeDom.CodePrimitiveExpression)">
            <summary>Задает заглушка CodeGenerator.GeneratePrimitiveExpression(CodePrimitiveExpression e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GeneratePrimitiveExpressionCodePrimitiveExpression">
            <summary>Задает stub CodeGenerator.GeneratePrimitiveExpression(CodePrimitiveExpression e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateProperty(System.CodeDom.CodeMemberProperty,System.CodeDom.CodeTypeDeclaration)">
            <summary>Задает заглушка CodeGenerator.GenerateProperty(CodeMemberProperty e, CodeTypeDeclaration c)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GeneratePropertyCodeMemberPropertyCodeTypeDeclaration">
            <summary>Задает stub CodeGenerator.GenerateProperty(CodeMemberProperty e, CodeTypeDeclaration c)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GeneratePropertyReferenceExpression(System.CodeDom.CodePropertyReferenceExpression)">
            <summary>Задает заглушка CodeGenerator.GeneratePropertyReferenceExpression(CodePropertyReferenceExpression e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GeneratePropertyReferenceExpressionCodePropertyReferenceExpression">
            <summary>Задает stub CodeGenerator.GeneratePropertyReferenceExpression(CodePropertyReferenceExpression e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GeneratePropertySetValueReferenceExpression(System.CodeDom.CodePropertySetValueReferenceExpression)">
            <summary>Задает заглушка CodeGenerator.GeneratePropertySetValueReferenceExpression(CodePropertySetValueReferenceExpression e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GeneratePropertySetValueReferenceExpressionCodePropertySetValueReferenceExpression">
            <summary>Задает stub CodeGenerator.GeneratePropertySetValueReferenceExpression(CodePropertySetValueReferenceExpression e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateRemoveEventStatement(System.CodeDom.CodeRemoveEventStatement)">
            <summary>Задает заглушка CodeGenerator.GenerateRemoveEventStatement(CodeRemoveEventStatement e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateRemoveEventStatementCodeRemoveEventStatement">
            <summary>Задает stub CodeGenerator.GenerateRemoveEventStatement(CodeRemoveEventStatement e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateSingleFloatValue(System.Single)">
            <summary>Задает заглушка CodeGenerator.GenerateSingleFloatValue(Single s)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateSingleFloatValueSingle">
            <summary>Задает stub CodeGenerator.GenerateSingleFloatValue(Single s)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateSnippetCompileUnit(System.CodeDom.CodeSnippetCompileUnit)">
            <summary>Задает заглушка CodeGenerator.GenerateSnippetCompileUnit(CodeSnippetCompileUnit e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateSnippetCompileUnitCodeSnippetCompileUnit">
            <summary>Задает stub CodeGenerator.GenerateSnippetCompileUnit(CodeSnippetCompileUnit e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateSnippetExpression(System.CodeDom.CodeSnippetExpression)">
            <summary>Задает заглушка CodeGenerator.GenerateSnippetExpression(CodeSnippetExpression e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateSnippetExpressionCodeSnippetExpression">
            <summary>Задает stub CodeGenerator.GenerateSnippetExpression(CodeSnippetExpression e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateSnippetMember(System.CodeDom.CodeSnippetTypeMember)">
            <summary>Задает заглушка CodeGenerator.GenerateSnippetMember(CodeSnippetTypeMember e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateSnippetMemberCodeSnippetTypeMember">
            <summary>Задает stub CodeGenerator.GenerateSnippetMember(CodeSnippetTypeMember e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateSnippetStatement(System.CodeDom.CodeSnippetStatement)">
            <summary>Задает заглушка CodeGenerator.GenerateSnippetStatement(CodeSnippetStatement e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateSnippetStatementCodeSnippetStatement">
            <summary>Задает stub CodeGenerator.GenerateSnippetStatement(CodeSnippetStatement e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateThisReferenceExpression(System.CodeDom.CodeThisReferenceExpression)">
            <summary>Задает заглушка CodeGenerator.GenerateThisReferenceExpression(CodeThisReferenceExpression e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateThisReferenceExpressionCodeThisReferenceExpression">
            <summary>Задает stub CodeGenerator.GenerateThisReferenceExpression(CodeThisReferenceExpression e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateThrowExceptionStatement(System.CodeDom.CodeThrowExceptionStatement)">
            <summary>Задает заглушка CodeGenerator.GenerateThrowExceptionStatement(CodeThrowExceptionStatement e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateThrowExceptionStatementCodeThrowExceptionStatement">
            <summary>Задает stub CodeGenerator.GenerateThrowExceptionStatement(CodeThrowExceptionStatement e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateTryCatchFinallyStatement(System.CodeDom.CodeTryCatchFinallyStatement)">
            <summary>Задает заглушка CodeGenerator.GenerateTryCatchFinallyStatement(CodeTryCatchFinallyStatement e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateTryCatchFinallyStatementCodeTryCatchFinallyStatement">
            <summary>Задает stub CodeGenerator.GenerateTryCatchFinallyStatement(CodeTryCatchFinallyStatement e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateTypeConstructor(System.CodeDom.CodeTypeConstructor)">
            <summary>Задает заглушка CodeGenerator.GenerateTypeConstructor(CodeTypeConstructor e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateTypeConstructorCodeTypeConstructor">
            <summary>Задает stub CodeGenerator.GenerateTypeConstructor(CodeTypeConstructor e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateTypeEnd(System.CodeDom.CodeTypeDeclaration)">
            <summary>Задает заглушка CodeGenerator.GenerateTypeEnd(CodeTypeDeclaration e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateTypeEndCodeTypeDeclaration">
            <summary>Задает stub CodeGenerator.GenerateTypeEnd(CodeTypeDeclaration e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateTypeOfExpression(System.CodeDom.CodeTypeOfExpression)">
            <summary>Задает заглушка CodeGenerator.GenerateTypeOfExpression(CodeTypeOfExpression e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateTypeOfExpressionCodeTypeOfExpression">
            <summary>Задает stub CodeGenerator.GenerateTypeOfExpression(CodeTypeOfExpression e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateTypeReferenceExpression(System.CodeDom.CodeTypeReferenceExpression)">
            <summary>Задает заглушка CodeGenerator.GenerateTypeReferenceExpression(CodeTypeReferenceExpression e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateTypeReferenceExpressionCodeTypeReferenceExpression">
            <summary>Задает stub CodeGenerator.GenerateTypeReferenceExpression(CodeTypeReferenceExpression e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateTypeStart(System.CodeDom.CodeTypeDeclaration)">
            <summary>Задает заглушка CodeGenerator.GenerateTypeStart(CodeTypeDeclaration e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateTypeStartCodeTypeDeclaration">
            <summary>Задает stub CodeGenerator.GenerateTypeStart(CodeTypeDeclaration e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateVariableDeclarationStatement(System.CodeDom.CodeVariableDeclarationStatement)">
            <summary>Задает заглушка CodeGenerator.GenerateVariableDeclarationStatement(CodeVariableDeclarationStatement e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateVariableDeclarationStatementCodeVariableDeclarationStatement">
            <summary>Задает stub CodeGenerator.GenerateVariableDeclarationStatement(CodeVariableDeclarationStatement e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateVariableReferenceExpression(System.CodeDom.CodeVariableReferenceExpression)">
            <summary>Задает заглушка CodeGenerator.GenerateVariableReferenceExpression(CodeVariableReferenceExpression e)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GenerateVariableReferenceExpressionCodeVariableReferenceExpression">
            <summary>Задает stub CodeGenerator.GenerateVariableReferenceExpression(CodeVariableReferenceExpression e)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GetTypeOutput(System.CodeDom.CodeTypeReference)">
            <summary>Задает заглушка CodeGenerator.GetTypeOutput(CodeTypeReference value)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeGenerator.GetTypeOutputCodeTypeReference">
            <summary>Задает stub CodeGenerator.GetTypeOutput(CodeTypeReference value)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeGenerator.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCodeGenerator</summary>
        </member>
        <member name="P:System.CodeDom.Compiler.Fakes.StubCodeGenerator.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.CodeDom.Compiler.Fakes.StubCodeGenerator.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeGenerator.IsValidIdentifier(System.String)">
            <summary>Задает заглушка CodeGenerator.IsValidIdentifier(String value)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeGenerator.IsValidIdentifierString">
            <summary>Задает stub CodeGenerator.IsValidIdentifier(String value)</summary>
        </member>
        <member name="P:System.CodeDom.Compiler.Fakes.StubCodeGenerator.NullToken">
            <summary>Задает stub CodeGenerator.get_NullToken()</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeGenerator.NullTokenGet">
            <summary>Задает stub CodeGenerator.get_NullToken()</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeGenerator.OutputAttributeArgument(System.CodeDom.CodeAttributeArgument)">
            <summary>Задает заглушка CodeGenerator.OutputAttributeArgument(CodeAttributeArgument arg)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeGenerator.OutputAttributeArgumentCodeAttributeArgument">
            <summary>Задает stub CodeGenerator.OutputAttributeArgument(CodeAttributeArgument arg)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeGenerator.OutputAttributeDeclarations(System.CodeDom.CodeAttributeDeclarationCollection)">
            <summary>Задает заглушка CodeGenerator.OutputAttributeDeclarations(CodeAttributeDeclarationCollection attributes)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeGenerator.OutputAttributeDeclarationsCodeAttributeDeclarationCollection">
            <summary>Задает stub CodeGenerator.OutputAttributeDeclarations(CodeAttributeDeclarationCollection attributes)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeGenerator.OutputDirection(System.CodeDom.FieldDirection)">
            <summary>Задает заглушка CodeGenerator.OutputDirection(FieldDirection dir)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeGenerator.OutputDirectionFieldDirection">
            <summary>Задает stub CodeGenerator.OutputDirection(FieldDirection dir)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeGenerator.OutputExpressionList(System.CodeDom.CodeExpressionCollection)">
            <summary>Задает заглушка CodeGenerator.OutputExpressionList(CodeExpressionCollection expressions)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeGenerator.OutputExpressionList(System.CodeDom.CodeExpressionCollection,System.Boolean)">
            <summary>Задает заглушка CodeGenerator.OutputExpressionList(CodeExpressionCollection expressions, Boolean newlineBetweenItems)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeGenerator.OutputExpressionListCodeExpressionCollection">
            <summary>Задает stub CodeGenerator.OutputExpressionList(CodeExpressionCollection expressions)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeGenerator.OutputExpressionListCodeExpressionCollectionBoolean">
            <summary>Задает stub CodeGenerator.OutputExpressionList(CodeExpressionCollection expressions, Boolean newlineBetweenItems)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeGenerator.OutputFieldScopeModifier(System.CodeDom.MemberAttributes)">
            <summary>Задает заглушка CodeGenerator.OutputFieldScopeModifier(MemberAttributes attributes)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeGenerator.OutputFieldScopeModifierMemberAttributes">
            <summary>Задает stub CodeGenerator.OutputFieldScopeModifier(MemberAttributes attributes)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeGenerator.OutputIdentifier(System.String)">
            <summary>Задает заглушка CodeGenerator.OutputIdentifier(String ident)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeGenerator.OutputIdentifierString">
            <summary>Задает stub CodeGenerator.OutputIdentifier(String ident)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeGenerator.OutputMemberAccessModifier(System.CodeDom.MemberAttributes)">
            <summary>Задает заглушка CodeGenerator.OutputMemberAccessModifier(MemberAttributes attributes)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeGenerator.OutputMemberAccessModifierMemberAttributes">
            <summary>Задает stub CodeGenerator.OutputMemberAccessModifier(MemberAttributes attributes)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeGenerator.OutputMemberScopeModifier(System.CodeDom.MemberAttributes)">
            <summary>Задает заглушка CodeGenerator.OutputMemberScopeModifier(MemberAttributes attributes)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeGenerator.OutputMemberScopeModifierMemberAttributes">
            <summary>Задает stub CodeGenerator.OutputMemberScopeModifier(MemberAttributes attributes)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeGenerator.OutputOperator(System.CodeDom.CodeBinaryOperatorType)">
            <summary>Задает заглушка CodeGenerator.OutputOperator(CodeBinaryOperatorType op)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeGenerator.OutputOperatorCodeBinaryOperatorType">
            <summary>Задает stub CodeGenerator.OutputOperator(CodeBinaryOperatorType op)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeGenerator.OutputParameters(System.CodeDom.CodeParameterDeclarationExpressionCollection)">
            <summary>Задает заглушка CodeGenerator.OutputParameters(CodeParameterDeclarationExpressionCollection parameters)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeGenerator.OutputParametersCodeParameterDeclarationExpressionCollection">
            <summary>Задает stub CodeGenerator.OutputParameters(CodeParameterDeclarationExpressionCollection parameters)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeGenerator.OutputType(System.CodeDom.CodeTypeReference)">
            <summary>Задает заглушка CodeGenerator.OutputType(CodeTypeReference typeRef)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeGenerator.OutputTypeAttributes(System.Reflection.TypeAttributes,System.Boolean,System.Boolean)">
            <summary>Задает заглушка CodeGenerator.OutputTypeAttributes(TypeAttributes attributes, Boolean isStruct, Boolean isEnum)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeGenerator.OutputTypeAttributesTypeAttributesBooleanBoolean">
            <summary>Задает stub CodeGenerator.OutputTypeAttributes(TypeAttributes attributes, Boolean isStruct, Boolean isEnum)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeGenerator.OutputTypeCodeTypeReference">
            <summary>Задает stub CodeGenerator.OutputType(CodeTypeReference typeRef)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeGenerator.OutputTypeNamePair(System.CodeDom.CodeTypeReference,System.String)">
            <summary>Задает заглушка CodeGenerator.OutputTypeNamePair(CodeTypeReference typeRef, String name)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeGenerator.OutputTypeNamePairCodeTypeReferenceString">
            <summary>Задает stub CodeGenerator.OutputTypeNamePair(CodeTypeReference typeRef, String name)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeGenerator.QuoteSnippetString(System.String)">
            <summary>Задает заглушка CodeGenerator.QuoteSnippetString(String value)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeGenerator.QuoteSnippetStringString">
            <summary>Задает stub CodeGenerator.QuoteSnippetString(String value)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeGenerator.Supports(System.CodeDom.Compiler.GeneratorSupport)">
            <summary>Задает заглушка CodeGenerator.Supports(GeneratorSupport support)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeGenerator.SupportsGeneratorSupport">
            <summary>Задает stub CodeGenerator.Supports(GeneratorSupport support)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeGenerator.ValidateIdentifier(System.String)">
            <summary>Задает заглушка CodeGenerator.ValidateIdentifier(String value)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeGenerator.ValidateIdentifierString">
            <summary>Задает stub CodeGenerator.ValidateIdentifier(String value)</summary>
        </member>
        <member name="T:System.CodeDom.Compiler.Fakes.StubCodeGeneratorOptions">
            <summary>Тип заглушки System.CodeDom.Compiler.CodeGeneratorOptions</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeGeneratorOptions.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.CodeDom.Compiler.Fakes.StubCodeGeneratorOptions.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeGeneratorOptions.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCodeGeneratorOptions</summary>
        </member>
        <member name="P:System.CodeDom.Compiler.Fakes.StubCodeGeneratorOptions.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.CodeDom.Compiler.Fakes.StubCodeGeneratorOptions.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.CodeDom.Compiler.Fakes.StubCodeParser">
            <summary>Тип заглушки System.CodeDom.Compiler.CodeParser</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeParser.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.CodeDom.Compiler.Fakes.StubCodeParser.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeParser.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCodeParser</summary>
        </member>
        <member name="P:System.CodeDom.Compiler.Fakes.StubCodeParser.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.CodeDom.Compiler.Fakes.StubCodeParser.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCodeParser.Parse(System.IO.TextReader)">
            <summary>Задает заглушка CodeParser.Parse(TextReader codeStream)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCodeParser.ParseTextReader">
            <summary>Задает stub CodeParser.Parse(TextReader codeStream)</summary>
        </member>
        <member name="T:System.CodeDom.Compiler.Fakes.StubCompilerError">
            <summary>Тип заглушки System.CodeDom.Compiler.CompilerError</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCompilerError.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCompilerError.#ctor(System.String,System.Int32,System.Int32,System.String,System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.CodeDom.Compiler.Fakes.StubCompilerError.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCompilerError.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCompilerError</summary>
        </member>
        <member name="P:System.CodeDom.Compiler.Fakes.StubCompilerError.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.CodeDom.Compiler.Fakes.StubCompilerError.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCompilerError.ToString">
            <summary>Задает заглушка CompilerError.ToString()</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCompilerError.ToString01">
            <summary>Задает stub CompilerError.ToString()</summary>
        </member>
        <member name="T:System.CodeDom.Compiler.Fakes.StubCompilerErrorCollection">
            <summary>Тип заглушки System.CodeDom.Compiler.CompilerErrorCollection</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCompilerErrorCollection.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCompilerErrorCollection.#ctor(System.CodeDom.Compiler.CompilerError[])">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCompilerErrorCollection.#ctor(System.CodeDom.Compiler.CompilerErrorCollection)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.CodeDom.Compiler.Fakes.StubCompilerErrorCollection.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCompilerErrorCollection.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCompilerErrorCollection</summary>
        </member>
        <member name="P:System.CodeDom.Compiler.Fakes.StubCompilerErrorCollection.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.CodeDom.Compiler.Fakes.StubCompilerErrorCollection.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCompilerErrorCollection.OnClear">
            <summary>Задает заглушка CollectionBase.OnClear()</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCompilerErrorCollection.OnClear01">
            <summary>Задает stub CollectionBase.OnClear()</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCompilerErrorCollection.OnClearComplete">
            <summary>Задает заглушка CollectionBase.OnClearComplete()</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCompilerErrorCollection.OnClearComplete01">
            <summary>Задает stub CollectionBase.OnClearComplete()</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCompilerErrorCollection.OnInsert(System.Int32,System.Object)">
            <summary>Задает заглушка CollectionBase.OnInsert(Int32 index, Object value)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCompilerErrorCollection.OnInsertComplete(System.Int32,System.Object)">
            <summary>Задает заглушка CollectionBase.OnInsertComplete(Int32 index, Object value)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCompilerErrorCollection.OnInsertCompleteInt32Object">
            <summary>Задает stub CollectionBase.OnInsertComplete(Int32 index, Object value)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCompilerErrorCollection.OnInsertInt32Object">
            <summary>Задает stub CollectionBase.OnInsert(Int32 index, Object value)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCompilerErrorCollection.OnRemove(System.Int32,System.Object)">
            <summary>Задает заглушка CollectionBase.OnRemove(Int32 index, Object value)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCompilerErrorCollection.OnRemoveComplete(System.Int32,System.Object)">
            <summary>Задает заглушка CollectionBase.OnRemoveComplete(Int32 index, Object value)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCompilerErrorCollection.OnRemoveCompleteInt32Object">
            <summary>Задает stub CollectionBase.OnRemoveComplete(Int32 index, Object value)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCompilerErrorCollection.OnRemoveInt32Object">
            <summary>Задает stub CollectionBase.OnRemove(Int32 index, Object value)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCompilerErrorCollection.OnSet(System.Int32,System.Object,System.Object)">
            <summary>Задает заглушка CollectionBase.OnSet(Int32 index, Object oldValue, Object newValue)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCompilerErrorCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
            <summary>Задает заглушка CollectionBase.OnSetComplete(Int32 index, Object oldValue, Object newValue)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCompilerErrorCollection.OnSetCompleteInt32ObjectObject">
            <summary>Задает stub CollectionBase.OnSetComplete(Int32 index, Object oldValue, Object newValue)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCompilerErrorCollection.OnSetInt32ObjectObject">
            <summary>Задает stub CollectionBase.OnSet(Int32 index, Object oldValue, Object newValue)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCompilerErrorCollection.OnValidate(System.Object)">
            <summary>Задает заглушка CollectionBase.OnValidate(Object value)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubCompilerErrorCollection.OnValidateObject">
            <summary>Задает stub CollectionBase.OnValidate(Object value)</summary>
        </member>
        <member name="T:System.CodeDom.Compiler.Fakes.StubCompilerParameters">
            <summary>Тип заглушки System.CodeDom.Compiler.CompilerParameters</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCompilerParameters.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCompilerParameters.#ctor(System.String[])">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCompilerParameters.#ctor(System.String[],System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCompilerParameters.#ctor(System.String[],System.String,System.Boolean)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.CodeDom.Compiler.Fakes.StubCompilerParameters.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCompilerParameters.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCompilerParameters</summary>
        </member>
        <member name="P:System.CodeDom.Compiler.Fakes.StubCompilerParameters.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.CodeDom.Compiler.Fakes.StubCompilerParameters.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.CodeDom.Compiler.Fakes.StubCompilerResults">
            <summary>Тип заглушки System.CodeDom.Compiler.CompilerResults</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCompilerResults.#ctor(System.CodeDom.Compiler.TempFileCollection)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.CodeDom.Compiler.Fakes.StubCompilerResults.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubCompilerResults.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCompilerResults</summary>
        </member>
        <member name="P:System.CodeDom.Compiler.Fakes.StubCompilerResults.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.CodeDom.Compiler.Fakes.StubCompilerResults.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.CodeDom.Compiler.Fakes.StubICodeCompiler">
            <summary>Тип заглушки System.CodeDom.Compiler.ICodeCompiler</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubICodeCompiler.#ctor">
            <summary>Инициализирует новый экземпляр type StubICodeCompiler</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubICodeCompiler.CompileAssemblyFromDomBatchCompilerParametersCodeCompileUnitArray">
            <summary>Задает stub ICodeCompiler.CompileAssemblyFromDomBatch(CompilerParameters options, CodeCompileUnit[] compilationUnits)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubICodeCompiler.CompileAssemblyFromDomCompilerParametersCodeCompileUnit">
            <summary>Задает stub ICodeCompiler.CompileAssemblyFromDom(CompilerParameters options, CodeCompileUnit compilationUnit)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubICodeCompiler.CompileAssemblyFromFileBatchCompilerParametersStringArray">
            <summary>Задает stub ICodeCompiler.CompileAssemblyFromFileBatch(CompilerParameters options, String[] fileNames)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubICodeCompiler.CompileAssemblyFromFileCompilerParametersString">
            <summary>Задает stub ICodeCompiler.CompileAssemblyFromFile(CompilerParameters options, String fileName)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubICodeCompiler.CompileAssemblyFromSourceBatchCompilerParametersStringArray">
            <summary>Задает stub ICodeCompiler.CompileAssemblyFromSourceBatch(CompilerParameters options, String[] sources)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubICodeCompiler.CompileAssemblyFromSourceCompilerParametersString">
            <summary>Задает stub ICodeCompiler.CompileAssemblyFromSource(CompilerParameters options, String source)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubICodeCompiler.System#CodeDom#Compiler#ICodeCompiler#CompileAssemblyFromDom(System.CodeDom.Compiler.CompilerParameters,System.CodeDom.CodeCompileUnit)">
            <summary>Задает заглушка ICodeCompiler.CompileAssemblyFromDom(CompilerParameters options, CodeCompileUnit compilationUnit)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubICodeCompiler.System#CodeDom#Compiler#ICodeCompiler#CompileAssemblyFromDomBatch(System.CodeDom.Compiler.CompilerParameters,System.CodeDom.CodeCompileUnit[])">
            <summary>Задает заглушка ICodeCompiler.CompileAssemblyFromDomBatch(CompilerParameters options, CodeCompileUnit[] compilationUnits)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubICodeCompiler.System#CodeDom#Compiler#ICodeCompiler#CompileAssemblyFromFile(System.CodeDom.Compiler.CompilerParameters,System.String)">
            <summary>Задает заглушка ICodeCompiler.CompileAssemblyFromFile(CompilerParameters options, String fileName)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubICodeCompiler.System#CodeDom#Compiler#ICodeCompiler#CompileAssemblyFromFileBatch(System.CodeDom.Compiler.CompilerParameters,System.String[])">
            <summary>Задает заглушка ICodeCompiler.CompileAssemblyFromFileBatch(CompilerParameters options, String[] fileNames)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubICodeCompiler.System#CodeDom#Compiler#ICodeCompiler#CompileAssemblyFromSource(System.CodeDom.Compiler.CompilerParameters,System.String)">
            <summary>Задает заглушка ICodeCompiler.CompileAssemblyFromSource(CompilerParameters options, String source)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubICodeCompiler.System#CodeDom#Compiler#ICodeCompiler#CompileAssemblyFromSourceBatch(System.CodeDom.Compiler.CompilerParameters,System.String[])">
            <summary>Задает заглушка ICodeCompiler.CompileAssemblyFromSourceBatch(CompilerParameters options, String[] sources)</summary>
        </member>
        <member name="T:System.CodeDom.Compiler.Fakes.StubICodeGenerator">
            <summary>Тип заглушки System.CodeDom.Compiler.ICodeGenerator</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubICodeGenerator.#ctor">
            <summary>Инициализирует новый экземпляр type StubICodeGenerator</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubICodeGenerator.CreateEscapedIdentifierString">
            <summary>Задает stub ICodeGenerator.CreateEscapedIdentifier(String value)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubICodeGenerator.CreateValidIdentifierString">
            <summary>Задает stub ICodeGenerator.CreateValidIdentifier(String value)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubICodeGenerator.GenerateCodeFromCompileUnitCodeCompileUnitTextWriterCodeGeneratorOptions">
            <summary>Задает stub ICodeGenerator.GenerateCodeFromCompileUnit(CodeCompileUnit e, TextWriter w, CodeGeneratorOptions o)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubICodeGenerator.GenerateCodeFromExpressionCodeExpressionTextWriterCodeGeneratorOptions">
            <summary>Задает stub ICodeGenerator.GenerateCodeFromExpression(CodeExpression e, TextWriter w, CodeGeneratorOptions o)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubICodeGenerator.GenerateCodeFromNamespaceCodeNamespaceTextWriterCodeGeneratorOptions">
            <summary>Задает stub ICodeGenerator.GenerateCodeFromNamespace(CodeNamespace e, TextWriter w, CodeGeneratorOptions o)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubICodeGenerator.GenerateCodeFromStatementCodeStatementTextWriterCodeGeneratorOptions">
            <summary>Задает stub ICodeGenerator.GenerateCodeFromStatement(CodeStatement e, TextWriter w, CodeGeneratorOptions o)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubICodeGenerator.GenerateCodeFromTypeCodeTypeDeclarationTextWriterCodeGeneratorOptions">
            <summary>Задает stub ICodeGenerator.GenerateCodeFromType(CodeTypeDeclaration e, TextWriter w, CodeGeneratorOptions o)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubICodeGenerator.GetTypeOutputCodeTypeReference">
            <summary>Задает stub ICodeGenerator.GetTypeOutput(CodeTypeReference type)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubICodeGenerator.IsValidIdentifierString">
            <summary>Задает stub ICodeGenerator.IsValidIdentifier(String value)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubICodeGenerator.SupportsGeneratorSupport">
            <summary>Задает stub ICodeGenerator.Supports(GeneratorSupport supports)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubICodeGenerator.System#CodeDom#Compiler#ICodeGenerator#CreateEscapedIdentifier(System.String)">
            <summary>Задает заглушка ICodeGenerator.CreateEscapedIdentifier(String value)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubICodeGenerator.System#CodeDom#Compiler#ICodeGenerator#CreateValidIdentifier(System.String)">
            <summary>Задает заглушка ICodeGenerator.CreateValidIdentifier(String value)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubICodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromCompileUnit(System.CodeDom.CodeCompileUnit,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
            <summary>Задает заглушка ICodeGenerator.GenerateCodeFromCompileUnit(CodeCompileUnit e, TextWriter w, CodeGeneratorOptions o)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubICodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromExpression(System.CodeDom.CodeExpression,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
            <summary>Задает заглушка ICodeGenerator.GenerateCodeFromExpression(CodeExpression e, TextWriter w, CodeGeneratorOptions o)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubICodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromNamespace(System.CodeDom.CodeNamespace,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
            <summary>Задает заглушка ICodeGenerator.GenerateCodeFromNamespace(CodeNamespace e, TextWriter w, CodeGeneratorOptions o)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubICodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromStatement(System.CodeDom.CodeStatement,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
            <summary>Задает заглушка ICodeGenerator.GenerateCodeFromStatement(CodeStatement e, TextWriter w, CodeGeneratorOptions o)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubICodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromType(System.CodeDom.CodeTypeDeclaration,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
            <summary>Задает заглушка ICodeGenerator.GenerateCodeFromType(CodeTypeDeclaration e, TextWriter w, CodeGeneratorOptions o)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubICodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GetTypeOutput(System.CodeDom.CodeTypeReference)">
            <summary>Задает заглушка ICodeGenerator.GetTypeOutput(CodeTypeReference type)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubICodeGenerator.System#CodeDom#Compiler#ICodeGenerator#IsValidIdentifier(System.String)">
            <summary>Задает заглушка ICodeGenerator.IsValidIdentifier(String value)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubICodeGenerator.System#CodeDom#Compiler#ICodeGenerator#Supports(System.CodeDom.Compiler.GeneratorSupport)">
            <summary>Задает заглушка ICodeGenerator.Supports(GeneratorSupport supports)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubICodeGenerator.System#CodeDom#Compiler#ICodeGenerator#ValidateIdentifier(System.String)">
            <summary>Задает заглушка ICodeGenerator.ValidateIdentifier(String value)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubICodeGenerator.ValidateIdentifierString">
            <summary>Задает stub ICodeGenerator.ValidateIdentifier(String value)</summary>
        </member>
        <member name="T:System.CodeDom.Compiler.Fakes.StubICodeParser">
            <summary>Тип заглушки System.CodeDom.Compiler.ICodeParser</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubICodeParser.#ctor">
            <summary>Инициализирует новый экземпляр type StubICodeParser</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubICodeParser.ParseTextReader">
            <summary>Задает stub ICodeParser.Parse(TextReader codeStream)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubICodeParser.System#CodeDom#Compiler#ICodeParser#Parse(System.IO.TextReader)">
            <summary>Задает заглушка ICodeParser.Parse(TextReader codeStream)</summary>
        </member>
        <member name="T:System.CodeDom.Compiler.Fakes.StubTempFileCollection">
            <summary>Тип заглушки System.CodeDom.Compiler.TempFileCollection</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubTempFileCollection.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubTempFileCollection.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubTempFileCollection.#ctor(System.String,System.Boolean)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.CodeDom.Compiler.Fakes.StubTempFileCollection.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubTempFileCollection.Dispose(System.Boolean)">
            <summary>Задает заглушка TempFileCollection.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.CodeDom.Compiler.Fakes.StubTempFileCollection.DisposeBoolean">
            <summary>Задает stub TempFileCollection.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:System.CodeDom.Compiler.Fakes.StubTempFileCollection.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubTempFileCollection</summary>
        </member>
        <member name="P:System.CodeDom.Compiler.Fakes.StubTempFileCollection.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.CodeDom.Compiler.Fakes.StubTempFileCollection.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.CodeDom.Fakes.StubCodeArgumentReferenceExpression">
            <summary>Тип заглушки System.CodeDom.CodeArgumentReferenceExpression</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeArgumentReferenceExpression.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeArgumentReferenceExpression.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeArgumentReferenceExpression.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeArgumentReferenceExpression.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCodeArgumentReferenceExpression</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeArgumentReferenceExpression.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeArgumentReferenceExpression.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.CodeDom.Fakes.StubCodeArrayCreateExpression">
            <summary>Тип заглушки System.CodeDom.CodeArrayCreateExpression</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeArrayCreateExpression.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeArrayCreateExpression.#ctor(System.CodeDom.CodeTypeReference,System.CodeDom.CodeExpression)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeArrayCreateExpression.#ctor(System.CodeDom.CodeTypeReference,System.Int32)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeArrayCreateExpression.#ctor(System.CodeDom.CodeTypeReference,System.CodeDom.CodeExpression[])">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeArrayCreateExpression.#ctor(System.String,System.Int32)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeArrayCreateExpression.#ctor(System.String,System.CodeDom.CodeExpression)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeArrayCreateExpression.#ctor(System.String,System.CodeDom.CodeExpression[])">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeArrayCreateExpression.#ctor(System.Type,System.CodeDom.CodeExpression)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeArrayCreateExpression.#ctor(System.Type,System.Int32)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeArrayCreateExpression.#ctor(System.Type,System.CodeDom.CodeExpression[])">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeArrayCreateExpression.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeArrayCreateExpression.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCodeArrayCreateExpression</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeArrayCreateExpression.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeArrayCreateExpression.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.CodeDom.Fakes.StubCodeArrayIndexerExpression">
            <summary>Тип заглушки System.CodeDom.CodeArrayIndexerExpression</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeArrayIndexerExpression.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeArrayIndexerExpression.#ctor(System.CodeDom.CodeExpression,System.CodeDom.CodeExpression[])">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeArrayIndexerExpression.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeArrayIndexerExpression.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCodeArrayIndexerExpression</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeArrayIndexerExpression.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeArrayIndexerExpression.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.CodeDom.Fakes.StubCodeAssignStatement">
            <summary>Тип заглушки System.CodeDom.CodeAssignStatement</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeAssignStatement.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeAssignStatement.#ctor(System.CodeDom.CodeExpression,System.CodeDom.CodeExpression)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeAssignStatement.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeAssignStatement.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCodeAssignStatement</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeAssignStatement.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeAssignStatement.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.CodeDom.Fakes.StubCodeAttachEventStatement">
            <summary>Тип заглушки System.CodeDom.CodeAttachEventStatement</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeAttachEventStatement.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeAttachEventStatement.#ctor(System.CodeDom.CodeEventReferenceExpression,System.CodeDom.CodeExpression)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeAttachEventStatement.#ctor(System.CodeDom.CodeExpression,System.String,System.CodeDom.CodeExpression)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeAttachEventStatement.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeAttachEventStatement.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCodeAttachEventStatement</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeAttachEventStatement.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeAttachEventStatement.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.CodeDom.Fakes.StubCodeAttributeArgument">
            <summary>Тип заглушки System.CodeDom.CodeAttributeArgument</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeAttributeArgument.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeAttributeArgument.#ctor(System.CodeDom.CodeExpression)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeAttributeArgument.#ctor(System.String,System.CodeDom.CodeExpression)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeAttributeArgument.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeAttributeArgument.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCodeAttributeArgument</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeAttributeArgument.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeAttributeArgument.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.CodeDom.Fakes.StubCodeAttributeArgumentCollection">
            <summary>Тип заглушки System.CodeDom.CodeAttributeArgumentCollection</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeAttributeArgumentCollection.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeAttributeArgumentCollection.#ctor(System.CodeDom.CodeAttributeArgument[])">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeAttributeArgumentCollection.#ctor(System.CodeDom.CodeAttributeArgumentCollection)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeAttributeArgumentCollection.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeAttributeArgumentCollection.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCodeAttributeArgumentCollection</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeAttributeArgumentCollection.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeAttributeArgumentCollection.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeAttributeArgumentCollection.OnClear">
            <summary>Задает заглушка CollectionBase.OnClear()</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeAttributeArgumentCollection.OnClear01">
            <summary>Задает stub CollectionBase.OnClear()</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeAttributeArgumentCollection.OnClearComplete">
            <summary>Задает заглушка CollectionBase.OnClearComplete()</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeAttributeArgumentCollection.OnClearComplete01">
            <summary>Задает stub CollectionBase.OnClearComplete()</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeAttributeArgumentCollection.OnInsert(System.Int32,System.Object)">
            <summary>Задает заглушка CollectionBase.OnInsert(Int32 index, Object value)</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeAttributeArgumentCollection.OnInsertComplete(System.Int32,System.Object)">
            <summary>Задает заглушка CollectionBase.OnInsertComplete(Int32 index, Object value)</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeAttributeArgumentCollection.OnInsertCompleteInt32Object">
            <summary>Задает stub CollectionBase.OnInsertComplete(Int32 index, Object value)</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeAttributeArgumentCollection.OnInsertInt32Object">
            <summary>Задает stub CollectionBase.OnInsert(Int32 index, Object value)</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeAttributeArgumentCollection.OnRemove(System.Int32,System.Object)">
            <summary>Задает заглушка CollectionBase.OnRemove(Int32 index, Object value)</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeAttributeArgumentCollection.OnRemoveComplete(System.Int32,System.Object)">
            <summary>Задает заглушка CollectionBase.OnRemoveComplete(Int32 index, Object value)</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeAttributeArgumentCollection.OnRemoveCompleteInt32Object">
            <summary>Задает stub CollectionBase.OnRemoveComplete(Int32 index, Object value)</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeAttributeArgumentCollection.OnRemoveInt32Object">
            <summary>Задает stub CollectionBase.OnRemove(Int32 index, Object value)</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeAttributeArgumentCollection.OnSet(System.Int32,System.Object,System.Object)">
            <summary>Задает заглушка CollectionBase.OnSet(Int32 index, Object oldValue, Object newValue)</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeAttributeArgumentCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
            <summary>Задает заглушка CollectionBase.OnSetComplete(Int32 index, Object oldValue, Object newValue)</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeAttributeArgumentCollection.OnSetCompleteInt32ObjectObject">
            <summary>Задает stub CollectionBase.OnSetComplete(Int32 index, Object oldValue, Object newValue)</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeAttributeArgumentCollection.OnSetInt32ObjectObject">
            <summary>Задает stub CollectionBase.OnSet(Int32 index, Object oldValue, Object newValue)</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeAttributeArgumentCollection.OnValidate(System.Object)">
            <summary>Задает заглушка CollectionBase.OnValidate(Object value)</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeAttributeArgumentCollection.OnValidateObject">
            <summary>Задает stub CollectionBase.OnValidate(Object value)</summary>
        </member>
        <member name="T:System.CodeDom.Fakes.StubCodeAttributeDeclaration">
            <summary>Тип заглушки System.CodeDom.CodeAttributeDeclaration</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeAttributeDeclaration.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeAttributeDeclaration.#ctor(System.CodeDom.CodeTypeReference)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeAttributeDeclaration.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeAttributeDeclaration.#ctor(System.CodeDom.CodeTypeReference,System.CodeDom.CodeAttributeArgument[])">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeAttributeDeclaration.#ctor(System.String,System.CodeDom.CodeAttributeArgument[])">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeAttributeDeclaration.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeAttributeDeclaration.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCodeAttributeDeclaration</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeAttributeDeclaration.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeAttributeDeclaration.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.CodeDom.Fakes.StubCodeAttributeDeclarationCollection">
            <summary>Тип заглушки System.CodeDom.CodeAttributeDeclarationCollection</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeAttributeDeclarationCollection.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeAttributeDeclarationCollection.#ctor(System.CodeDom.CodeAttributeDeclaration[])">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeAttributeDeclarationCollection.#ctor(System.CodeDom.CodeAttributeDeclarationCollection)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeAttributeDeclarationCollection.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeAttributeDeclarationCollection.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCodeAttributeDeclarationCollection</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeAttributeDeclarationCollection.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeAttributeDeclarationCollection.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeAttributeDeclarationCollection.OnClear">
            <summary>Задает заглушка CollectionBase.OnClear()</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeAttributeDeclarationCollection.OnClear01">
            <summary>Задает stub CollectionBase.OnClear()</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeAttributeDeclarationCollection.OnClearComplete">
            <summary>Задает заглушка CollectionBase.OnClearComplete()</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeAttributeDeclarationCollection.OnClearComplete01">
            <summary>Задает stub CollectionBase.OnClearComplete()</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeAttributeDeclarationCollection.OnInsert(System.Int32,System.Object)">
            <summary>Задает заглушка CollectionBase.OnInsert(Int32 index, Object value)</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeAttributeDeclarationCollection.OnInsertComplete(System.Int32,System.Object)">
            <summary>Задает заглушка CollectionBase.OnInsertComplete(Int32 index, Object value)</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeAttributeDeclarationCollection.OnInsertCompleteInt32Object">
            <summary>Задает stub CollectionBase.OnInsertComplete(Int32 index, Object value)</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeAttributeDeclarationCollection.OnInsertInt32Object">
            <summary>Задает stub CollectionBase.OnInsert(Int32 index, Object value)</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeAttributeDeclarationCollection.OnRemove(System.Int32,System.Object)">
            <summary>Задает заглушка CollectionBase.OnRemove(Int32 index, Object value)</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeAttributeDeclarationCollection.OnRemoveComplete(System.Int32,System.Object)">
            <summary>Задает заглушка CollectionBase.OnRemoveComplete(Int32 index, Object value)</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeAttributeDeclarationCollection.OnRemoveCompleteInt32Object">
            <summary>Задает stub CollectionBase.OnRemoveComplete(Int32 index, Object value)</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeAttributeDeclarationCollection.OnRemoveInt32Object">
            <summary>Задает stub CollectionBase.OnRemove(Int32 index, Object value)</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeAttributeDeclarationCollection.OnSet(System.Int32,System.Object,System.Object)">
            <summary>Задает заглушка CollectionBase.OnSet(Int32 index, Object oldValue, Object newValue)</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeAttributeDeclarationCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
            <summary>Задает заглушка CollectionBase.OnSetComplete(Int32 index, Object oldValue, Object newValue)</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeAttributeDeclarationCollection.OnSetCompleteInt32ObjectObject">
            <summary>Задает stub CollectionBase.OnSetComplete(Int32 index, Object oldValue, Object newValue)</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeAttributeDeclarationCollection.OnSetInt32ObjectObject">
            <summary>Задает stub CollectionBase.OnSet(Int32 index, Object oldValue, Object newValue)</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeAttributeDeclarationCollection.OnValidate(System.Object)">
            <summary>Задает заглушка CollectionBase.OnValidate(Object value)</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeAttributeDeclarationCollection.OnValidateObject">
            <summary>Задает stub CollectionBase.OnValidate(Object value)</summary>
        </member>
        <member name="T:System.CodeDom.Fakes.StubCodeBaseReferenceExpression">
            <summary>Тип заглушки System.CodeDom.CodeBaseReferenceExpression</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeBaseReferenceExpression.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeBaseReferenceExpression.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeBaseReferenceExpression.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCodeBaseReferenceExpression</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeBaseReferenceExpression.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeBaseReferenceExpression.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.CodeDom.Fakes.StubCodeBinaryOperatorExpression">
            <summary>Тип заглушки System.CodeDom.CodeBinaryOperatorExpression</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeBinaryOperatorExpression.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeBinaryOperatorExpression.#ctor(System.CodeDom.CodeExpression,System.CodeDom.CodeBinaryOperatorType,System.CodeDom.CodeExpression)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeBinaryOperatorExpression.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeBinaryOperatorExpression.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCodeBinaryOperatorExpression</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeBinaryOperatorExpression.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeBinaryOperatorExpression.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.CodeDom.Fakes.StubCodeCastExpression">
            <summary>Тип заглушки System.CodeDom.CodeCastExpression</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeCastExpression.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeCastExpression.#ctor(System.CodeDom.CodeTypeReference,System.CodeDom.CodeExpression)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeCastExpression.#ctor(System.String,System.CodeDom.CodeExpression)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeCastExpression.#ctor(System.Type,System.CodeDom.CodeExpression)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeCastExpression.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeCastExpression.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCodeCastExpression</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeCastExpression.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeCastExpression.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.CodeDom.Fakes.StubCodeCatchClause">
            <summary>Тип заглушки System.CodeDom.CodeCatchClause</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeCatchClause.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeCatchClause.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeCatchClause.#ctor(System.String,System.CodeDom.CodeTypeReference)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeCatchClause.#ctor(System.String,System.CodeDom.CodeTypeReference,System.CodeDom.CodeStatement[])">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeCatchClause.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeCatchClause.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCodeCatchClause</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeCatchClause.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeCatchClause.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.CodeDom.Fakes.StubCodeCatchClauseCollection">
            <summary>Тип заглушки System.CodeDom.CodeCatchClauseCollection</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeCatchClauseCollection.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeCatchClauseCollection.#ctor(System.CodeDom.CodeCatchClause[])">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeCatchClauseCollection.#ctor(System.CodeDom.CodeCatchClauseCollection)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeCatchClauseCollection.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeCatchClauseCollection.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCodeCatchClauseCollection</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeCatchClauseCollection.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeCatchClauseCollection.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeCatchClauseCollection.OnClear">
            <summary>Задает заглушка CollectionBase.OnClear()</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeCatchClauseCollection.OnClear01">
            <summary>Задает stub CollectionBase.OnClear()</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeCatchClauseCollection.OnClearComplete">
            <summary>Задает заглушка CollectionBase.OnClearComplete()</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeCatchClauseCollection.OnClearComplete01">
            <summary>Задает stub CollectionBase.OnClearComplete()</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeCatchClauseCollection.OnInsert(System.Int32,System.Object)">
            <summary>Задает заглушка CollectionBase.OnInsert(Int32 index, Object value)</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeCatchClauseCollection.OnInsertComplete(System.Int32,System.Object)">
            <summary>Задает заглушка CollectionBase.OnInsertComplete(Int32 index, Object value)</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeCatchClauseCollection.OnInsertCompleteInt32Object">
            <summary>Задает stub CollectionBase.OnInsertComplete(Int32 index, Object value)</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeCatchClauseCollection.OnInsertInt32Object">
            <summary>Задает stub CollectionBase.OnInsert(Int32 index, Object value)</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeCatchClauseCollection.OnRemove(System.Int32,System.Object)">
            <summary>Задает заглушка CollectionBase.OnRemove(Int32 index, Object value)</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeCatchClauseCollection.OnRemoveComplete(System.Int32,System.Object)">
            <summary>Задает заглушка CollectionBase.OnRemoveComplete(Int32 index, Object value)</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeCatchClauseCollection.OnRemoveCompleteInt32Object">
            <summary>Задает stub CollectionBase.OnRemoveComplete(Int32 index, Object value)</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeCatchClauseCollection.OnRemoveInt32Object">
            <summary>Задает stub CollectionBase.OnRemove(Int32 index, Object value)</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeCatchClauseCollection.OnSet(System.Int32,System.Object,System.Object)">
            <summary>Задает заглушка CollectionBase.OnSet(Int32 index, Object oldValue, Object newValue)</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeCatchClauseCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
            <summary>Задает заглушка CollectionBase.OnSetComplete(Int32 index, Object oldValue, Object newValue)</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeCatchClauseCollection.OnSetCompleteInt32ObjectObject">
            <summary>Задает stub CollectionBase.OnSetComplete(Int32 index, Object oldValue, Object newValue)</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeCatchClauseCollection.OnSetInt32ObjectObject">
            <summary>Задает stub CollectionBase.OnSet(Int32 index, Object oldValue, Object newValue)</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeCatchClauseCollection.OnValidate(System.Object)">
            <summary>Задает заглушка CollectionBase.OnValidate(Object value)</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeCatchClauseCollection.OnValidateObject">
            <summary>Задает stub CollectionBase.OnValidate(Object value)</summary>
        </member>
        <member name="T:System.CodeDom.Fakes.StubCodeChecksumPragma">
            <summary>Тип заглушки System.CodeDom.CodeChecksumPragma</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeChecksumPragma.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeChecksumPragma.#ctor(System.String,System.Guid,System.Byte[])">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeChecksumPragma.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeChecksumPragma.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCodeChecksumPragma</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeChecksumPragma.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeChecksumPragma.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.CodeDom.Fakes.StubCodeComment">
            <summary>Тип заглушки System.CodeDom.CodeComment</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeComment.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeComment.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeComment.#ctor(System.String,System.Boolean)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeComment.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeComment.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCodeComment</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeComment.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeComment.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.CodeDom.Fakes.StubCodeCommentStatement">
            <summary>Тип заглушки System.CodeDom.CodeCommentStatement</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeCommentStatement.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeCommentStatement.#ctor(System.CodeDom.CodeComment)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeCommentStatement.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeCommentStatement.#ctor(System.String,System.Boolean)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeCommentStatement.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeCommentStatement.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCodeCommentStatement</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeCommentStatement.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeCommentStatement.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.CodeDom.Fakes.StubCodeCommentStatementCollection">
            <summary>Тип заглушки System.CodeDom.CodeCommentStatementCollection</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeCommentStatementCollection.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeCommentStatementCollection.#ctor(System.CodeDom.CodeCommentStatement[])">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeCommentStatementCollection.#ctor(System.CodeDom.CodeCommentStatementCollection)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeCommentStatementCollection.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeCommentStatementCollection.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCodeCommentStatementCollection</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeCommentStatementCollection.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeCommentStatementCollection.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeCommentStatementCollection.OnClear">
            <summary>Задает заглушка CollectionBase.OnClear()</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeCommentStatementCollection.OnClear01">
            <summary>Задает stub CollectionBase.OnClear()</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeCommentStatementCollection.OnClearComplete">
            <summary>Задает заглушка CollectionBase.OnClearComplete()</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeCommentStatementCollection.OnClearComplete01">
            <summary>Задает stub CollectionBase.OnClearComplete()</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeCommentStatementCollection.OnInsert(System.Int32,System.Object)">
            <summary>Задает заглушка CollectionBase.OnInsert(Int32 index, Object value)</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeCommentStatementCollection.OnInsertComplete(System.Int32,System.Object)">
            <summary>Задает заглушка CollectionBase.OnInsertComplete(Int32 index, Object value)</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeCommentStatementCollection.OnInsertCompleteInt32Object">
            <summary>Задает stub CollectionBase.OnInsertComplete(Int32 index, Object value)</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeCommentStatementCollection.OnInsertInt32Object">
            <summary>Задает stub CollectionBase.OnInsert(Int32 index, Object value)</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeCommentStatementCollection.OnRemove(System.Int32,System.Object)">
            <summary>Задает заглушка CollectionBase.OnRemove(Int32 index, Object value)</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeCommentStatementCollection.OnRemoveComplete(System.Int32,System.Object)">
            <summary>Задает заглушка CollectionBase.OnRemoveComplete(Int32 index, Object value)</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeCommentStatementCollection.OnRemoveCompleteInt32Object">
            <summary>Задает stub CollectionBase.OnRemoveComplete(Int32 index, Object value)</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeCommentStatementCollection.OnRemoveInt32Object">
            <summary>Задает stub CollectionBase.OnRemove(Int32 index, Object value)</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeCommentStatementCollection.OnSet(System.Int32,System.Object,System.Object)">
            <summary>Задает заглушка CollectionBase.OnSet(Int32 index, Object oldValue, Object newValue)</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeCommentStatementCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
            <summary>Задает заглушка CollectionBase.OnSetComplete(Int32 index, Object oldValue, Object newValue)</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeCommentStatementCollection.OnSetCompleteInt32ObjectObject">
            <summary>Задает stub CollectionBase.OnSetComplete(Int32 index, Object oldValue, Object newValue)</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeCommentStatementCollection.OnSetInt32ObjectObject">
            <summary>Задает stub CollectionBase.OnSet(Int32 index, Object oldValue, Object newValue)</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeCommentStatementCollection.OnValidate(System.Object)">
            <summary>Задает заглушка CollectionBase.OnValidate(Object value)</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeCommentStatementCollection.OnValidateObject">
            <summary>Задает stub CollectionBase.OnValidate(Object value)</summary>
        </member>
        <member name="T:System.CodeDom.Fakes.StubCodeCompileUnit">
            <summary>Тип заглушки System.CodeDom.CodeCompileUnit</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeCompileUnit.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeCompileUnit.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeCompileUnit.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCodeCompileUnit</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeCompileUnit.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeCompileUnit.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.CodeDom.Fakes.StubCodeConditionStatement">
            <summary>Тип заглушки System.CodeDom.CodeConditionStatement</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeConditionStatement.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeConditionStatement.#ctor(System.CodeDom.CodeExpression,System.CodeDom.CodeStatement[])">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeConditionStatement.#ctor(System.CodeDom.CodeExpression,System.CodeDom.CodeStatement[],System.CodeDom.CodeStatement[])">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeConditionStatement.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeConditionStatement.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCodeConditionStatement</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeConditionStatement.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeConditionStatement.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.CodeDom.Fakes.StubCodeConstructor">
            <summary>Тип заглушки System.CodeDom.CodeConstructor</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeConstructor.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeConstructor.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeConstructor.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCodeConstructor</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeConstructor.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeConstructor.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.CodeDom.Fakes.StubCodeDefaultValueExpression">
            <summary>Тип заглушки System.CodeDom.CodeDefaultValueExpression</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeDefaultValueExpression.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeDefaultValueExpression.#ctor(System.CodeDom.CodeTypeReference)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeDefaultValueExpression.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeDefaultValueExpression.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCodeDefaultValueExpression</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeDefaultValueExpression.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeDefaultValueExpression.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.CodeDom.Fakes.StubCodeDelegateCreateExpression">
            <summary>Тип заглушки System.CodeDom.CodeDelegateCreateExpression</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeDelegateCreateExpression.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeDelegateCreateExpression.#ctor(System.CodeDom.CodeTypeReference,System.CodeDom.CodeExpression,System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeDelegateCreateExpression.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeDelegateCreateExpression.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCodeDelegateCreateExpression</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeDelegateCreateExpression.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeDelegateCreateExpression.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.CodeDom.Fakes.StubCodeDelegateInvokeExpression">
            <summary>Тип заглушки System.CodeDom.CodeDelegateInvokeExpression</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeDelegateInvokeExpression.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeDelegateInvokeExpression.#ctor(System.CodeDom.CodeExpression)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeDelegateInvokeExpression.#ctor(System.CodeDom.CodeExpression,System.CodeDom.CodeExpression[])">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeDelegateInvokeExpression.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeDelegateInvokeExpression.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCodeDelegateInvokeExpression</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeDelegateInvokeExpression.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeDelegateInvokeExpression.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.CodeDom.Fakes.StubCodeDirectionExpression">
            <summary>Тип заглушки System.CodeDom.CodeDirectionExpression</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeDirectionExpression.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeDirectionExpression.#ctor(System.CodeDom.FieldDirection,System.CodeDom.CodeExpression)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeDirectionExpression.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeDirectionExpression.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCodeDirectionExpression</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeDirectionExpression.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeDirectionExpression.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.CodeDom.Fakes.StubCodeDirective">
            <summary>Тип заглушки System.CodeDom.CodeDirective</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeDirective.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeDirective.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeDirective.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCodeDirective</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeDirective.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeDirective.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.CodeDom.Fakes.StubCodeDirectiveCollection">
            <summary>Тип заглушки System.CodeDom.CodeDirectiveCollection</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeDirectiveCollection.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeDirectiveCollection.#ctor(System.CodeDom.CodeDirective[])">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeDirectiveCollection.#ctor(System.CodeDom.CodeDirectiveCollection)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeDirectiveCollection.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeDirectiveCollection.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCodeDirectiveCollection</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeDirectiveCollection.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeDirectiveCollection.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeDirectiveCollection.OnClear">
            <summary>Задает заглушка CollectionBase.OnClear()</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeDirectiveCollection.OnClear01">
            <summary>Задает stub CollectionBase.OnClear()</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeDirectiveCollection.OnClearComplete">
            <summary>Задает заглушка CollectionBase.OnClearComplete()</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeDirectiveCollection.OnClearComplete01">
            <summary>Задает stub CollectionBase.OnClearComplete()</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeDirectiveCollection.OnInsert(System.Int32,System.Object)">
            <summary>Задает заглушка CollectionBase.OnInsert(Int32 index, Object value)</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeDirectiveCollection.OnInsertComplete(System.Int32,System.Object)">
            <summary>Задает заглушка CollectionBase.OnInsertComplete(Int32 index, Object value)</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeDirectiveCollection.OnInsertCompleteInt32Object">
            <summary>Задает stub CollectionBase.OnInsertComplete(Int32 index, Object value)</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeDirectiveCollection.OnInsertInt32Object">
            <summary>Задает stub CollectionBase.OnInsert(Int32 index, Object value)</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeDirectiveCollection.OnRemove(System.Int32,System.Object)">
            <summary>Задает заглушка CollectionBase.OnRemove(Int32 index, Object value)</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeDirectiveCollection.OnRemoveComplete(System.Int32,System.Object)">
            <summary>Задает заглушка CollectionBase.OnRemoveComplete(Int32 index, Object value)</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeDirectiveCollection.OnRemoveCompleteInt32Object">
            <summary>Задает stub CollectionBase.OnRemoveComplete(Int32 index, Object value)</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeDirectiveCollection.OnRemoveInt32Object">
            <summary>Задает stub CollectionBase.OnRemove(Int32 index, Object value)</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeDirectiveCollection.OnSet(System.Int32,System.Object,System.Object)">
            <summary>Задает заглушка CollectionBase.OnSet(Int32 index, Object oldValue, Object newValue)</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeDirectiveCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
            <summary>Задает заглушка CollectionBase.OnSetComplete(Int32 index, Object oldValue, Object newValue)</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeDirectiveCollection.OnSetCompleteInt32ObjectObject">
            <summary>Задает stub CollectionBase.OnSetComplete(Int32 index, Object oldValue, Object newValue)</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeDirectiveCollection.OnSetInt32ObjectObject">
            <summary>Задает stub CollectionBase.OnSet(Int32 index, Object oldValue, Object newValue)</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeDirectiveCollection.OnValidate(System.Object)">
            <summary>Задает заглушка CollectionBase.OnValidate(Object value)</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeDirectiveCollection.OnValidateObject">
            <summary>Задает stub CollectionBase.OnValidate(Object value)</summary>
        </member>
        <member name="T:System.CodeDom.Fakes.StubCodeEntryPointMethod">
            <summary>Тип заглушки System.CodeDom.CodeEntryPointMethod</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeEntryPointMethod.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeEntryPointMethod.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeEntryPointMethod.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCodeEntryPointMethod</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeEntryPointMethod.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeEntryPointMethod.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.CodeDom.Fakes.StubCodeEventReferenceExpression">
            <summary>Тип заглушки System.CodeDom.CodeEventReferenceExpression</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeEventReferenceExpression.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeEventReferenceExpression.#ctor(System.CodeDom.CodeExpression,System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeEventReferenceExpression.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeEventReferenceExpression.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCodeEventReferenceExpression</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeEventReferenceExpression.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeEventReferenceExpression.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.CodeDom.Fakes.StubCodeExpression">
            <summary>Тип заглушки System.CodeDom.CodeExpression</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeExpression.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeExpression.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeExpression.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCodeExpression</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeExpression.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeExpression.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.CodeDom.Fakes.StubCodeExpressionCollection">
            <summary>Тип заглушки System.CodeDom.CodeExpressionCollection</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeExpressionCollection.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeExpressionCollection.#ctor(System.CodeDom.CodeExpression[])">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeExpressionCollection.#ctor(System.CodeDom.CodeExpressionCollection)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeExpressionCollection.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeExpressionCollection.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCodeExpressionCollection</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeExpressionCollection.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeExpressionCollection.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeExpressionCollection.OnClear">
            <summary>Задает заглушка CollectionBase.OnClear()</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeExpressionCollection.OnClear01">
            <summary>Задает stub CollectionBase.OnClear()</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeExpressionCollection.OnClearComplete">
            <summary>Задает заглушка CollectionBase.OnClearComplete()</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeExpressionCollection.OnClearComplete01">
            <summary>Задает stub CollectionBase.OnClearComplete()</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeExpressionCollection.OnInsert(System.Int32,System.Object)">
            <summary>Задает заглушка CollectionBase.OnInsert(Int32 index, Object value)</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeExpressionCollection.OnInsertComplete(System.Int32,System.Object)">
            <summary>Задает заглушка CollectionBase.OnInsertComplete(Int32 index, Object value)</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeExpressionCollection.OnInsertCompleteInt32Object">
            <summary>Задает stub CollectionBase.OnInsertComplete(Int32 index, Object value)</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeExpressionCollection.OnInsertInt32Object">
            <summary>Задает stub CollectionBase.OnInsert(Int32 index, Object value)</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeExpressionCollection.OnRemove(System.Int32,System.Object)">
            <summary>Задает заглушка CollectionBase.OnRemove(Int32 index, Object value)</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeExpressionCollection.OnRemoveComplete(System.Int32,System.Object)">
            <summary>Задает заглушка CollectionBase.OnRemoveComplete(Int32 index, Object value)</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeExpressionCollection.OnRemoveCompleteInt32Object">
            <summary>Задает stub CollectionBase.OnRemoveComplete(Int32 index, Object value)</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeExpressionCollection.OnRemoveInt32Object">
            <summary>Задает stub CollectionBase.OnRemove(Int32 index, Object value)</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeExpressionCollection.OnSet(System.Int32,System.Object,System.Object)">
            <summary>Задает заглушка CollectionBase.OnSet(Int32 index, Object oldValue, Object newValue)</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeExpressionCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
            <summary>Задает заглушка CollectionBase.OnSetComplete(Int32 index, Object oldValue, Object newValue)</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeExpressionCollection.OnSetCompleteInt32ObjectObject">
            <summary>Задает stub CollectionBase.OnSetComplete(Int32 index, Object oldValue, Object newValue)</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeExpressionCollection.OnSetInt32ObjectObject">
            <summary>Задает stub CollectionBase.OnSet(Int32 index, Object oldValue, Object newValue)</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeExpressionCollection.OnValidate(System.Object)">
            <summary>Задает заглушка CollectionBase.OnValidate(Object value)</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeExpressionCollection.OnValidateObject">
            <summary>Задает stub CollectionBase.OnValidate(Object value)</summary>
        </member>
        <member name="T:System.CodeDom.Fakes.StubCodeExpressionStatement">
            <summary>Тип заглушки System.CodeDom.CodeExpressionStatement</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeExpressionStatement.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeExpressionStatement.#ctor(System.CodeDom.CodeExpression)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeExpressionStatement.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeExpressionStatement.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCodeExpressionStatement</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeExpressionStatement.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeExpressionStatement.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.CodeDom.Fakes.StubCodeFieldReferenceExpression">
            <summary>Тип заглушки System.CodeDom.CodeFieldReferenceExpression</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeFieldReferenceExpression.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeFieldReferenceExpression.#ctor(System.CodeDom.CodeExpression,System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeFieldReferenceExpression.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeFieldReferenceExpression.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCodeFieldReferenceExpression</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeFieldReferenceExpression.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeFieldReferenceExpression.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.CodeDom.Fakes.StubCodeGotoStatement">
            <summary>Тип заглушки System.CodeDom.CodeGotoStatement</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeGotoStatement.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeGotoStatement.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeGotoStatement.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeGotoStatement.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCodeGotoStatement</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeGotoStatement.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeGotoStatement.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.CodeDom.Fakes.StubCodeIndexerExpression">
            <summary>Тип заглушки System.CodeDom.CodeIndexerExpression</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeIndexerExpression.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeIndexerExpression.#ctor(System.CodeDom.CodeExpression,System.CodeDom.CodeExpression[])">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeIndexerExpression.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeIndexerExpression.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCodeIndexerExpression</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeIndexerExpression.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeIndexerExpression.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.CodeDom.Fakes.StubCodeIterationStatement">
            <summary>Тип заглушки System.CodeDom.CodeIterationStatement</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeIterationStatement.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeIterationStatement.#ctor(System.CodeDom.CodeStatement,System.CodeDom.CodeExpression,System.CodeDom.CodeStatement,System.CodeDom.CodeStatement[])">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeIterationStatement.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeIterationStatement.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCodeIterationStatement</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeIterationStatement.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeIterationStatement.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.CodeDom.Fakes.StubCodeLabeledStatement">
            <summary>Тип заглушки System.CodeDom.CodeLabeledStatement</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeLabeledStatement.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeLabeledStatement.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeLabeledStatement.#ctor(System.String,System.CodeDom.CodeStatement)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeLabeledStatement.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeLabeledStatement.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCodeLabeledStatement</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeLabeledStatement.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeLabeledStatement.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.CodeDom.Fakes.StubCodeLinePragma">
            <summary>Тип заглушки System.CodeDom.CodeLinePragma</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeLinePragma.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeLinePragma.#ctor(System.String,System.Int32)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeLinePragma.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeLinePragma.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCodeLinePragma</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeLinePragma.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeLinePragma.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.CodeDom.Fakes.StubCodeMemberEvent">
            <summary>Тип заглушки System.CodeDom.CodeMemberEvent</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeMemberEvent.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeMemberEvent.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeMemberEvent.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCodeMemberEvent</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeMemberEvent.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeMemberEvent.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.CodeDom.Fakes.StubCodeMemberField">
            <summary>Тип заглушки System.CodeDom.CodeMemberField</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeMemberField.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeMemberField.#ctor(System.CodeDom.CodeTypeReference,System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeMemberField.#ctor(System.String,System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeMemberField.#ctor(System.Type,System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeMemberField.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeMemberField.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCodeMemberField</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeMemberField.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeMemberField.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.CodeDom.Fakes.StubCodeMemberMethod">
            <summary>Тип заглушки System.CodeDom.CodeMemberMethod</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeMemberMethod.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeMemberMethod.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeMemberMethod.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCodeMemberMethod</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeMemberMethod.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeMemberMethod.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.CodeDom.Fakes.StubCodeMemberProperty">
            <summary>Тип заглушки System.CodeDom.CodeMemberProperty</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeMemberProperty.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeMemberProperty.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeMemberProperty.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCodeMemberProperty</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeMemberProperty.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeMemberProperty.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.CodeDom.Fakes.StubCodeMethodInvokeExpression">
            <summary>Тип заглушки System.CodeDom.CodeMethodInvokeExpression</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeMethodInvokeExpression.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeMethodInvokeExpression.#ctor(System.CodeDom.CodeMethodReferenceExpression,System.CodeDom.CodeExpression[])">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeMethodInvokeExpression.#ctor(System.CodeDom.CodeExpression,System.String,System.CodeDom.CodeExpression[])">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeMethodInvokeExpression.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeMethodInvokeExpression.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCodeMethodInvokeExpression</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeMethodInvokeExpression.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeMethodInvokeExpression.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.CodeDom.Fakes.StubCodeMethodReferenceExpression">
            <summary>Тип заглушки System.CodeDom.CodeMethodReferenceExpression</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeMethodReferenceExpression.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeMethodReferenceExpression.#ctor(System.CodeDom.CodeExpression,System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeMethodReferenceExpression.#ctor(System.CodeDom.CodeExpression,System.String,System.CodeDom.CodeTypeReference[])">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeMethodReferenceExpression.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeMethodReferenceExpression.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCodeMethodReferenceExpression</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeMethodReferenceExpression.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeMethodReferenceExpression.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.CodeDom.Fakes.StubCodeMethodReturnStatement">
            <summary>Тип заглушки System.CodeDom.CodeMethodReturnStatement</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeMethodReturnStatement.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeMethodReturnStatement.#ctor(System.CodeDom.CodeExpression)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeMethodReturnStatement.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeMethodReturnStatement.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCodeMethodReturnStatement</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeMethodReturnStatement.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeMethodReturnStatement.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.CodeDom.Fakes.StubCodeNamespace">
            <summary>Тип заглушки System.CodeDom.CodeNamespace</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeNamespace.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeNamespace.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeNamespace.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeNamespace.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCodeNamespace</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeNamespace.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeNamespace.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.CodeDom.Fakes.StubCodeNamespaceCollection">
            <summary>Тип заглушки System.CodeDom.CodeNamespaceCollection</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeNamespaceCollection.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeNamespaceCollection.#ctor(System.CodeDom.CodeNamespace[])">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeNamespaceCollection.#ctor(System.CodeDom.CodeNamespaceCollection)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeNamespaceCollection.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeNamespaceCollection.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCodeNamespaceCollection</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeNamespaceCollection.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeNamespaceCollection.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeNamespaceCollection.OnClear">
            <summary>Задает заглушка CollectionBase.OnClear()</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeNamespaceCollection.OnClear01">
            <summary>Задает stub CollectionBase.OnClear()</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeNamespaceCollection.OnClearComplete">
            <summary>Задает заглушка CollectionBase.OnClearComplete()</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeNamespaceCollection.OnClearComplete01">
            <summary>Задает stub CollectionBase.OnClearComplete()</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeNamespaceCollection.OnInsert(System.Int32,System.Object)">
            <summary>Задает заглушка CollectionBase.OnInsert(Int32 index, Object value)</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeNamespaceCollection.OnInsertComplete(System.Int32,System.Object)">
            <summary>Задает заглушка CollectionBase.OnInsertComplete(Int32 index, Object value)</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeNamespaceCollection.OnInsertCompleteInt32Object">
            <summary>Задает stub CollectionBase.OnInsertComplete(Int32 index, Object value)</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeNamespaceCollection.OnInsertInt32Object">
            <summary>Задает stub CollectionBase.OnInsert(Int32 index, Object value)</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeNamespaceCollection.OnRemove(System.Int32,System.Object)">
            <summary>Задает заглушка CollectionBase.OnRemove(Int32 index, Object value)</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeNamespaceCollection.OnRemoveComplete(System.Int32,System.Object)">
            <summary>Задает заглушка CollectionBase.OnRemoveComplete(Int32 index, Object value)</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeNamespaceCollection.OnRemoveCompleteInt32Object">
            <summary>Задает stub CollectionBase.OnRemoveComplete(Int32 index, Object value)</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeNamespaceCollection.OnRemoveInt32Object">
            <summary>Задает stub CollectionBase.OnRemove(Int32 index, Object value)</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeNamespaceCollection.OnSet(System.Int32,System.Object,System.Object)">
            <summary>Задает заглушка CollectionBase.OnSet(Int32 index, Object oldValue, Object newValue)</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeNamespaceCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
            <summary>Задает заглушка CollectionBase.OnSetComplete(Int32 index, Object oldValue, Object newValue)</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeNamespaceCollection.OnSetCompleteInt32ObjectObject">
            <summary>Задает stub CollectionBase.OnSetComplete(Int32 index, Object oldValue, Object newValue)</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeNamespaceCollection.OnSetInt32ObjectObject">
            <summary>Задает stub CollectionBase.OnSet(Int32 index, Object oldValue, Object newValue)</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeNamespaceCollection.OnValidate(System.Object)">
            <summary>Задает заглушка CollectionBase.OnValidate(Object value)</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeNamespaceCollection.OnValidateObject">
            <summary>Задает stub CollectionBase.OnValidate(Object value)</summary>
        </member>
        <member name="T:System.CodeDom.Fakes.StubCodeNamespaceImport">
            <summary>Тип заглушки System.CodeDom.CodeNamespaceImport</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeNamespaceImport.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeNamespaceImport.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeNamespaceImport.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeNamespaceImport.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCodeNamespaceImport</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeNamespaceImport.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeNamespaceImport.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.CodeDom.Fakes.StubCodeNamespaceImportCollection">
            <summary>Тип заглушки System.CodeDom.CodeNamespaceImportCollection</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeNamespaceImportCollection.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeNamespaceImportCollection.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeNamespaceImportCollection.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCodeNamespaceImportCollection</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeNamespaceImportCollection.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeNamespaceImportCollection.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.CodeDom.Fakes.StubCodeObject">
            <summary>Тип заглушки System.CodeDom.CodeObject</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeObject.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeObject.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeObject.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCodeObject</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeObject.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeObject.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.CodeDom.Fakes.StubCodeObjectCreateExpression">
            <summary>Тип заглушки System.CodeDom.CodeObjectCreateExpression</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeObjectCreateExpression.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeObjectCreateExpression.#ctor(System.CodeDom.CodeTypeReference,System.CodeDom.CodeExpression[])">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeObjectCreateExpression.#ctor(System.String,System.CodeDom.CodeExpression[])">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeObjectCreateExpression.#ctor(System.Type,System.CodeDom.CodeExpression[])">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeObjectCreateExpression.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeObjectCreateExpression.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCodeObjectCreateExpression</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeObjectCreateExpression.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeObjectCreateExpression.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.CodeDom.Fakes.StubCodeParameterDeclarationExpression">
            <summary>Тип заглушки System.CodeDom.CodeParameterDeclarationExpression</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeParameterDeclarationExpression.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeParameterDeclarationExpression.#ctor(System.CodeDom.CodeTypeReference,System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeParameterDeclarationExpression.#ctor(System.String,System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeParameterDeclarationExpression.#ctor(System.Type,System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeParameterDeclarationExpression.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeParameterDeclarationExpression.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCodeParameterDeclarationExpression</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeParameterDeclarationExpression.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeParameterDeclarationExpression.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.CodeDom.Fakes.StubCodeParameterDeclarationExpressionCollection">
            <summary>Тип заглушки System.CodeDom.CodeParameterDeclarationExpressionCollection</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeParameterDeclarationExpressionCollection.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeParameterDeclarationExpressionCollection.#ctor(System.CodeDom.CodeParameterDeclarationExpression[])">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeParameterDeclarationExpressionCollection.#ctor(System.CodeDom.CodeParameterDeclarationExpressionCollection)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeParameterDeclarationExpressionCollection.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeParameterDeclarationExpressionCollection.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCodeParameterDeclarationExpressionCollection</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeParameterDeclarationExpressionCollection.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeParameterDeclarationExpressionCollection.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeParameterDeclarationExpressionCollection.OnClear">
            <summary>Задает заглушка CollectionBase.OnClear()</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeParameterDeclarationExpressionCollection.OnClear01">
            <summary>Задает stub CollectionBase.OnClear()</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeParameterDeclarationExpressionCollection.OnClearComplete">
            <summary>Задает заглушка CollectionBase.OnClearComplete()</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeParameterDeclarationExpressionCollection.OnClearComplete01">
            <summary>Задает stub CollectionBase.OnClearComplete()</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeParameterDeclarationExpressionCollection.OnInsert(System.Int32,System.Object)">
            <summary>Задает заглушка CollectionBase.OnInsert(Int32 index, Object value)</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeParameterDeclarationExpressionCollection.OnInsertComplete(System.Int32,System.Object)">
            <summary>Задает заглушка CollectionBase.OnInsertComplete(Int32 index, Object value)</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeParameterDeclarationExpressionCollection.OnInsertCompleteInt32Object">
            <summary>Задает stub CollectionBase.OnInsertComplete(Int32 index, Object value)</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeParameterDeclarationExpressionCollection.OnInsertInt32Object">
            <summary>Задает stub CollectionBase.OnInsert(Int32 index, Object value)</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeParameterDeclarationExpressionCollection.OnRemove(System.Int32,System.Object)">
            <summary>Задает заглушка CollectionBase.OnRemove(Int32 index, Object value)</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeParameterDeclarationExpressionCollection.OnRemoveComplete(System.Int32,System.Object)">
            <summary>Задает заглушка CollectionBase.OnRemoveComplete(Int32 index, Object value)</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeParameterDeclarationExpressionCollection.OnRemoveCompleteInt32Object">
            <summary>Задает stub CollectionBase.OnRemoveComplete(Int32 index, Object value)</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeParameterDeclarationExpressionCollection.OnRemoveInt32Object">
            <summary>Задает stub CollectionBase.OnRemove(Int32 index, Object value)</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeParameterDeclarationExpressionCollection.OnSet(System.Int32,System.Object,System.Object)">
            <summary>Задает заглушка CollectionBase.OnSet(Int32 index, Object oldValue, Object newValue)</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeParameterDeclarationExpressionCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
            <summary>Задает заглушка CollectionBase.OnSetComplete(Int32 index, Object oldValue, Object newValue)</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeParameterDeclarationExpressionCollection.OnSetCompleteInt32ObjectObject">
            <summary>Задает stub CollectionBase.OnSetComplete(Int32 index, Object oldValue, Object newValue)</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeParameterDeclarationExpressionCollection.OnSetInt32ObjectObject">
            <summary>Задает stub CollectionBase.OnSet(Int32 index, Object oldValue, Object newValue)</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeParameterDeclarationExpressionCollection.OnValidate(System.Object)">
            <summary>Задает заглушка CollectionBase.OnValidate(Object value)</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeParameterDeclarationExpressionCollection.OnValidateObject">
            <summary>Задает stub CollectionBase.OnValidate(Object value)</summary>
        </member>
        <member name="T:System.CodeDom.Fakes.StubCodePrimitiveExpression">
            <summary>Тип заглушки System.CodeDom.CodePrimitiveExpression</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodePrimitiveExpression.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodePrimitiveExpression.#ctor(System.Object)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodePrimitiveExpression.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodePrimitiveExpression.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCodePrimitiveExpression</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodePrimitiveExpression.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodePrimitiveExpression.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.CodeDom.Fakes.StubCodePropertyReferenceExpression">
            <summary>Тип заглушки System.CodeDom.CodePropertyReferenceExpression</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodePropertyReferenceExpression.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodePropertyReferenceExpression.#ctor(System.CodeDom.CodeExpression,System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodePropertyReferenceExpression.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodePropertyReferenceExpression.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCodePropertyReferenceExpression</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodePropertyReferenceExpression.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodePropertyReferenceExpression.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.CodeDom.Fakes.StubCodePropertySetValueReferenceExpression">
            <summary>Тип заглушки System.CodeDom.CodePropertySetValueReferenceExpression</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodePropertySetValueReferenceExpression.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodePropertySetValueReferenceExpression.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodePropertySetValueReferenceExpression.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCodePropertySetValueReferenceExpression</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodePropertySetValueReferenceExpression.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodePropertySetValueReferenceExpression.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.CodeDom.Fakes.StubCodeRegionDirective">
            <summary>Тип заглушки System.CodeDom.CodeRegionDirective</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeRegionDirective.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeRegionDirective.#ctor(System.CodeDom.CodeRegionMode,System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeRegionDirective.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeRegionDirective.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCodeRegionDirective</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeRegionDirective.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeRegionDirective.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.CodeDom.Fakes.StubCodeRemoveEventStatement">
            <summary>Тип заглушки System.CodeDom.CodeRemoveEventStatement</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeRemoveEventStatement.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeRemoveEventStatement.#ctor(System.CodeDom.CodeEventReferenceExpression,System.CodeDom.CodeExpression)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeRemoveEventStatement.#ctor(System.CodeDom.CodeExpression,System.String,System.CodeDom.CodeExpression)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeRemoveEventStatement.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeRemoveEventStatement.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCodeRemoveEventStatement</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeRemoveEventStatement.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeRemoveEventStatement.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.CodeDom.Fakes.StubCodeSnippetCompileUnit">
            <summary>Тип заглушки System.CodeDom.CodeSnippetCompileUnit</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeSnippetCompileUnit.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeSnippetCompileUnit.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeSnippetCompileUnit.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeSnippetCompileUnit.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCodeSnippetCompileUnit</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeSnippetCompileUnit.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeSnippetCompileUnit.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.CodeDom.Fakes.StubCodeSnippetExpression">
            <summary>Тип заглушки System.CodeDom.CodeSnippetExpression</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeSnippetExpression.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeSnippetExpression.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeSnippetExpression.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeSnippetExpression.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCodeSnippetExpression</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeSnippetExpression.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeSnippetExpression.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.CodeDom.Fakes.StubCodeSnippetStatement">
            <summary>Тип заглушки System.CodeDom.CodeSnippetStatement</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeSnippetStatement.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeSnippetStatement.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeSnippetStatement.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeSnippetStatement.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCodeSnippetStatement</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeSnippetStatement.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeSnippetStatement.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.CodeDom.Fakes.StubCodeSnippetTypeMember">
            <summary>Тип заглушки System.CodeDom.CodeSnippetTypeMember</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeSnippetTypeMember.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeSnippetTypeMember.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeSnippetTypeMember.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeSnippetTypeMember.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCodeSnippetTypeMember</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeSnippetTypeMember.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeSnippetTypeMember.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.CodeDom.Fakes.StubCodeStatement">
            <summary>Тип заглушки System.CodeDom.CodeStatement</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeStatement.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeStatement.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeStatement.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCodeStatement</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeStatement.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeStatement.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.CodeDom.Fakes.StubCodeStatementCollection">
            <summary>Тип заглушки System.CodeDom.CodeStatementCollection</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeStatementCollection.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeStatementCollection.#ctor(System.CodeDom.CodeStatement[])">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeStatementCollection.#ctor(System.CodeDom.CodeStatementCollection)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeStatementCollection.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeStatementCollection.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCodeStatementCollection</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeStatementCollection.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeStatementCollection.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeStatementCollection.OnClear">
            <summary>Задает заглушка CollectionBase.OnClear()</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeStatementCollection.OnClear01">
            <summary>Задает stub CollectionBase.OnClear()</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeStatementCollection.OnClearComplete">
            <summary>Задает заглушка CollectionBase.OnClearComplete()</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeStatementCollection.OnClearComplete01">
            <summary>Задает stub CollectionBase.OnClearComplete()</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeStatementCollection.OnInsert(System.Int32,System.Object)">
            <summary>Задает заглушка CollectionBase.OnInsert(Int32 index, Object value)</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeStatementCollection.OnInsertComplete(System.Int32,System.Object)">
            <summary>Задает заглушка CollectionBase.OnInsertComplete(Int32 index, Object value)</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeStatementCollection.OnInsertCompleteInt32Object">
            <summary>Задает stub CollectionBase.OnInsertComplete(Int32 index, Object value)</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeStatementCollection.OnInsertInt32Object">
            <summary>Задает stub CollectionBase.OnInsert(Int32 index, Object value)</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeStatementCollection.OnRemove(System.Int32,System.Object)">
            <summary>Задает заглушка CollectionBase.OnRemove(Int32 index, Object value)</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeStatementCollection.OnRemoveComplete(System.Int32,System.Object)">
            <summary>Задает заглушка CollectionBase.OnRemoveComplete(Int32 index, Object value)</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeStatementCollection.OnRemoveCompleteInt32Object">
            <summary>Задает stub CollectionBase.OnRemoveComplete(Int32 index, Object value)</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeStatementCollection.OnRemoveInt32Object">
            <summary>Задает stub CollectionBase.OnRemove(Int32 index, Object value)</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeStatementCollection.OnSet(System.Int32,System.Object,System.Object)">
            <summary>Задает заглушка CollectionBase.OnSet(Int32 index, Object oldValue, Object newValue)</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeStatementCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
            <summary>Задает заглушка CollectionBase.OnSetComplete(Int32 index, Object oldValue, Object newValue)</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeStatementCollection.OnSetCompleteInt32ObjectObject">
            <summary>Задает stub CollectionBase.OnSetComplete(Int32 index, Object oldValue, Object newValue)</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeStatementCollection.OnSetInt32ObjectObject">
            <summary>Задает stub CollectionBase.OnSet(Int32 index, Object oldValue, Object newValue)</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeStatementCollection.OnValidate(System.Object)">
            <summary>Задает заглушка CollectionBase.OnValidate(Object value)</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeStatementCollection.OnValidateObject">
            <summary>Задает stub CollectionBase.OnValidate(Object value)</summary>
        </member>
        <member name="T:System.CodeDom.Fakes.StubCodeThisReferenceExpression">
            <summary>Тип заглушки System.CodeDom.CodeThisReferenceExpression</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeThisReferenceExpression.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeThisReferenceExpression.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeThisReferenceExpression.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCodeThisReferenceExpression</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeThisReferenceExpression.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeThisReferenceExpression.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.CodeDom.Fakes.StubCodeThrowExceptionStatement">
            <summary>Тип заглушки System.CodeDom.CodeThrowExceptionStatement</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeThrowExceptionStatement.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeThrowExceptionStatement.#ctor(System.CodeDom.CodeExpression)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeThrowExceptionStatement.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeThrowExceptionStatement.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCodeThrowExceptionStatement</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeThrowExceptionStatement.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeThrowExceptionStatement.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.CodeDom.Fakes.StubCodeTryCatchFinallyStatement">
            <summary>Тип заглушки System.CodeDom.CodeTryCatchFinallyStatement</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeTryCatchFinallyStatement.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeTryCatchFinallyStatement.#ctor(System.CodeDom.CodeStatement[],System.CodeDom.CodeCatchClause[])">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeTryCatchFinallyStatement.#ctor(System.CodeDom.CodeStatement[],System.CodeDom.CodeCatchClause[],System.CodeDom.CodeStatement[])">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeTryCatchFinallyStatement.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeTryCatchFinallyStatement.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCodeTryCatchFinallyStatement</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeTryCatchFinallyStatement.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeTryCatchFinallyStatement.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.CodeDom.Fakes.StubCodeTypeConstructor">
            <summary>Тип заглушки System.CodeDom.CodeTypeConstructor</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeTypeConstructor.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeTypeConstructor.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeTypeConstructor.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCodeTypeConstructor</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeTypeConstructor.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeTypeConstructor.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.CodeDom.Fakes.StubCodeTypeDeclaration">
            <summary>Тип заглушки System.CodeDom.CodeTypeDeclaration</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeTypeDeclaration.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeTypeDeclaration.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeTypeDeclaration.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeTypeDeclaration.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCodeTypeDeclaration</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeTypeDeclaration.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeTypeDeclaration.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.CodeDom.Fakes.StubCodeTypeDeclarationCollection">
            <summary>Тип заглушки System.CodeDom.CodeTypeDeclarationCollection</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeTypeDeclarationCollection.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeTypeDeclarationCollection.#ctor(System.CodeDom.CodeTypeDeclaration[])">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeTypeDeclarationCollection.#ctor(System.CodeDom.CodeTypeDeclarationCollection)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeTypeDeclarationCollection.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeTypeDeclarationCollection.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCodeTypeDeclarationCollection</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeTypeDeclarationCollection.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeTypeDeclarationCollection.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeTypeDeclarationCollection.OnClear">
            <summary>Задает заглушка CollectionBase.OnClear()</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeTypeDeclarationCollection.OnClear01">
            <summary>Задает stub CollectionBase.OnClear()</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeTypeDeclarationCollection.OnClearComplete">
            <summary>Задает заглушка CollectionBase.OnClearComplete()</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeTypeDeclarationCollection.OnClearComplete01">
            <summary>Задает stub CollectionBase.OnClearComplete()</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeTypeDeclarationCollection.OnInsert(System.Int32,System.Object)">
            <summary>Задает заглушка CollectionBase.OnInsert(Int32 index, Object value)</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeTypeDeclarationCollection.OnInsertComplete(System.Int32,System.Object)">
            <summary>Задает заглушка CollectionBase.OnInsertComplete(Int32 index, Object value)</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeTypeDeclarationCollection.OnInsertCompleteInt32Object">
            <summary>Задает stub CollectionBase.OnInsertComplete(Int32 index, Object value)</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeTypeDeclarationCollection.OnInsertInt32Object">
            <summary>Задает stub CollectionBase.OnInsert(Int32 index, Object value)</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeTypeDeclarationCollection.OnRemove(System.Int32,System.Object)">
            <summary>Задает заглушка CollectionBase.OnRemove(Int32 index, Object value)</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeTypeDeclarationCollection.OnRemoveComplete(System.Int32,System.Object)">
            <summary>Задает заглушка CollectionBase.OnRemoveComplete(Int32 index, Object value)</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeTypeDeclarationCollection.OnRemoveCompleteInt32Object">
            <summary>Задает stub CollectionBase.OnRemoveComplete(Int32 index, Object value)</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeTypeDeclarationCollection.OnRemoveInt32Object">
            <summary>Задает stub CollectionBase.OnRemove(Int32 index, Object value)</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeTypeDeclarationCollection.OnSet(System.Int32,System.Object,System.Object)">
            <summary>Задает заглушка CollectionBase.OnSet(Int32 index, Object oldValue, Object newValue)</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeTypeDeclarationCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
            <summary>Задает заглушка CollectionBase.OnSetComplete(Int32 index, Object oldValue, Object newValue)</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeTypeDeclarationCollection.OnSetCompleteInt32ObjectObject">
            <summary>Задает stub CollectionBase.OnSetComplete(Int32 index, Object oldValue, Object newValue)</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeTypeDeclarationCollection.OnSetInt32ObjectObject">
            <summary>Задает stub CollectionBase.OnSet(Int32 index, Object oldValue, Object newValue)</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeTypeDeclarationCollection.OnValidate(System.Object)">
            <summary>Задает заглушка CollectionBase.OnValidate(Object value)</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeTypeDeclarationCollection.OnValidateObject">
            <summary>Задает stub CollectionBase.OnValidate(Object value)</summary>
        </member>
        <member name="T:System.CodeDom.Fakes.StubCodeTypeDelegate">
            <summary>Тип заглушки System.CodeDom.CodeTypeDelegate</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeTypeDelegate.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeTypeDelegate.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeTypeDelegate.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeTypeDelegate.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCodeTypeDelegate</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeTypeDelegate.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeTypeDelegate.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.CodeDom.Fakes.StubCodeTypeMember">
            <summary>Тип заглушки System.CodeDom.CodeTypeMember</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeTypeMember.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeTypeMember.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeTypeMember.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCodeTypeMember</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeTypeMember.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeTypeMember.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.CodeDom.Fakes.StubCodeTypeMemberCollection">
            <summary>Тип заглушки System.CodeDom.CodeTypeMemberCollection</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeTypeMemberCollection.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeTypeMemberCollection.#ctor(System.CodeDom.CodeTypeMember[])">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeTypeMemberCollection.#ctor(System.CodeDom.CodeTypeMemberCollection)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeTypeMemberCollection.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeTypeMemberCollection.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCodeTypeMemberCollection</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeTypeMemberCollection.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeTypeMemberCollection.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeTypeMemberCollection.OnClear">
            <summary>Задает заглушка CollectionBase.OnClear()</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeTypeMemberCollection.OnClear01">
            <summary>Задает stub CollectionBase.OnClear()</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeTypeMemberCollection.OnClearComplete">
            <summary>Задает заглушка CollectionBase.OnClearComplete()</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeTypeMemberCollection.OnClearComplete01">
            <summary>Задает stub CollectionBase.OnClearComplete()</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeTypeMemberCollection.OnInsert(System.Int32,System.Object)">
            <summary>Задает заглушка CollectionBase.OnInsert(Int32 index, Object value)</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeTypeMemberCollection.OnInsertComplete(System.Int32,System.Object)">
            <summary>Задает заглушка CollectionBase.OnInsertComplete(Int32 index, Object value)</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeTypeMemberCollection.OnInsertCompleteInt32Object">
            <summary>Задает stub CollectionBase.OnInsertComplete(Int32 index, Object value)</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeTypeMemberCollection.OnInsertInt32Object">
            <summary>Задает stub CollectionBase.OnInsert(Int32 index, Object value)</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeTypeMemberCollection.OnRemove(System.Int32,System.Object)">
            <summary>Задает заглушка CollectionBase.OnRemove(Int32 index, Object value)</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeTypeMemberCollection.OnRemoveComplete(System.Int32,System.Object)">
            <summary>Задает заглушка CollectionBase.OnRemoveComplete(Int32 index, Object value)</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeTypeMemberCollection.OnRemoveCompleteInt32Object">
            <summary>Задает stub CollectionBase.OnRemoveComplete(Int32 index, Object value)</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeTypeMemberCollection.OnRemoveInt32Object">
            <summary>Задает stub CollectionBase.OnRemove(Int32 index, Object value)</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeTypeMemberCollection.OnSet(System.Int32,System.Object,System.Object)">
            <summary>Задает заглушка CollectionBase.OnSet(Int32 index, Object oldValue, Object newValue)</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeTypeMemberCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
            <summary>Задает заглушка CollectionBase.OnSetComplete(Int32 index, Object oldValue, Object newValue)</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeTypeMemberCollection.OnSetCompleteInt32ObjectObject">
            <summary>Задает stub CollectionBase.OnSetComplete(Int32 index, Object oldValue, Object newValue)</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeTypeMemberCollection.OnSetInt32ObjectObject">
            <summary>Задает stub CollectionBase.OnSet(Int32 index, Object oldValue, Object newValue)</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeTypeMemberCollection.OnValidate(System.Object)">
            <summary>Задает заглушка CollectionBase.OnValidate(Object value)</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeTypeMemberCollection.OnValidateObject">
            <summary>Задает stub CollectionBase.OnValidate(Object value)</summary>
        </member>
        <member name="T:System.CodeDom.Fakes.StubCodeTypeOfExpression">
            <summary>Тип заглушки System.CodeDom.CodeTypeOfExpression</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeTypeOfExpression.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeTypeOfExpression.#ctor(System.CodeDom.CodeTypeReference)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeTypeOfExpression.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeTypeOfExpression.#ctor(System.Type)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeTypeOfExpression.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeTypeOfExpression.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCodeTypeOfExpression</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeTypeOfExpression.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeTypeOfExpression.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.CodeDom.Fakes.StubCodeTypeParameter">
            <summary>Тип заглушки System.CodeDom.CodeTypeParameter</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeTypeParameter.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeTypeParameter.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeTypeParameter.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeTypeParameter.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCodeTypeParameter</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeTypeParameter.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeTypeParameter.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.CodeDom.Fakes.StubCodeTypeParameterCollection">
            <summary>Тип заглушки System.CodeDom.CodeTypeParameterCollection</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeTypeParameterCollection.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeTypeParameterCollection.#ctor(System.CodeDom.CodeTypeParameter[])">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeTypeParameterCollection.#ctor(System.CodeDom.CodeTypeParameterCollection)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeTypeParameterCollection.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeTypeParameterCollection.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCodeTypeParameterCollection</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeTypeParameterCollection.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeTypeParameterCollection.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeTypeParameterCollection.OnClear">
            <summary>Задает заглушка CollectionBase.OnClear()</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeTypeParameterCollection.OnClear01">
            <summary>Задает stub CollectionBase.OnClear()</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeTypeParameterCollection.OnClearComplete">
            <summary>Задает заглушка CollectionBase.OnClearComplete()</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeTypeParameterCollection.OnClearComplete01">
            <summary>Задает stub CollectionBase.OnClearComplete()</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeTypeParameterCollection.OnInsert(System.Int32,System.Object)">
            <summary>Задает заглушка CollectionBase.OnInsert(Int32 index, Object value)</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeTypeParameterCollection.OnInsertComplete(System.Int32,System.Object)">
            <summary>Задает заглушка CollectionBase.OnInsertComplete(Int32 index, Object value)</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeTypeParameterCollection.OnInsertCompleteInt32Object">
            <summary>Задает stub CollectionBase.OnInsertComplete(Int32 index, Object value)</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeTypeParameterCollection.OnInsertInt32Object">
            <summary>Задает stub CollectionBase.OnInsert(Int32 index, Object value)</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeTypeParameterCollection.OnRemove(System.Int32,System.Object)">
            <summary>Задает заглушка CollectionBase.OnRemove(Int32 index, Object value)</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeTypeParameterCollection.OnRemoveComplete(System.Int32,System.Object)">
            <summary>Задает заглушка CollectionBase.OnRemoveComplete(Int32 index, Object value)</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeTypeParameterCollection.OnRemoveCompleteInt32Object">
            <summary>Задает stub CollectionBase.OnRemoveComplete(Int32 index, Object value)</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeTypeParameterCollection.OnRemoveInt32Object">
            <summary>Задает stub CollectionBase.OnRemove(Int32 index, Object value)</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeTypeParameterCollection.OnSet(System.Int32,System.Object,System.Object)">
            <summary>Задает заглушка CollectionBase.OnSet(Int32 index, Object oldValue, Object newValue)</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeTypeParameterCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
            <summary>Задает заглушка CollectionBase.OnSetComplete(Int32 index, Object oldValue, Object newValue)</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeTypeParameterCollection.OnSetCompleteInt32ObjectObject">
            <summary>Задает stub CollectionBase.OnSetComplete(Int32 index, Object oldValue, Object newValue)</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeTypeParameterCollection.OnSetInt32ObjectObject">
            <summary>Задает stub CollectionBase.OnSet(Int32 index, Object oldValue, Object newValue)</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeTypeParameterCollection.OnValidate(System.Object)">
            <summary>Задает заглушка CollectionBase.OnValidate(Object value)</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeTypeParameterCollection.OnValidateObject">
            <summary>Задает stub CollectionBase.OnValidate(Object value)</summary>
        </member>
        <member name="T:System.CodeDom.Fakes.StubCodeTypeReference">
            <summary>Тип заглушки System.CodeDom.CodeTypeReference</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeTypeReference.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeTypeReference.#ctor(System.CodeDom.CodeTypeParameter)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeTypeReference.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeTypeReference.#ctor(System.Type)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeTypeReference.#ctor(System.CodeDom.CodeTypeReference,System.Int32)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeTypeReference.#ctor(System.String,System.CodeDom.CodeTypeReference[])">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeTypeReference.#ctor(System.String,System.CodeDom.CodeTypeReferenceOptions)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeTypeReference.#ctor(System.String,System.Int32)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeTypeReference.#ctor(System.Type,System.CodeDom.CodeTypeReferenceOptions)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeTypeReference.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeTypeReference.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCodeTypeReference</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeTypeReference.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeTypeReference.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.CodeDom.Fakes.StubCodeTypeReferenceCollection">
            <summary>Тип заглушки System.CodeDom.CodeTypeReferenceCollection</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeTypeReferenceCollection.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeTypeReferenceCollection.#ctor(System.CodeDom.CodeTypeReference[])">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeTypeReferenceCollection.#ctor(System.CodeDom.CodeTypeReferenceCollection)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeTypeReferenceCollection.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeTypeReferenceCollection.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCodeTypeReferenceCollection</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeTypeReferenceCollection.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeTypeReferenceCollection.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeTypeReferenceCollection.OnClear">
            <summary>Задает заглушка CollectionBase.OnClear()</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeTypeReferenceCollection.OnClear01">
            <summary>Задает stub CollectionBase.OnClear()</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeTypeReferenceCollection.OnClearComplete">
            <summary>Задает заглушка CollectionBase.OnClearComplete()</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeTypeReferenceCollection.OnClearComplete01">
            <summary>Задает stub CollectionBase.OnClearComplete()</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeTypeReferenceCollection.OnInsert(System.Int32,System.Object)">
            <summary>Задает заглушка CollectionBase.OnInsert(Int32 index, Object value)</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeTypeReferenceCollection.OnInsertComplete(System.Int32,System.Object)">
            <summary>Задает заглушка CollectionBase.OnInsertComplete(Int32 index, Object value)</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeTypeReferenceCollection.OnInsertCompleteInt32Object">
            <summary>Задает stub CollectionBase.OnInsertComplete(Int32 index, Object value)</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeTypeReferenceCollection.OnInsertInt32Object">
            <summary>Задает stub CollectionBase.OnInsert(Int32 index, Object value)</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeTypeReferenceCollection.OnRemove(System.Int32,System.Object)">
            <summary>Задает заглушка CollectionBase.OnRemove(Int32 index, Object value)</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeTypeReferenceCollection.OnRemoveComplete(System.Int32,System.Object)">
            <summary>Задает заглушка CollectionBase.OnRemoveComplete(Int32 index, Object value)</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeTypeReferenceCollection.OnRemoveCompleteInt32Object">
            <summary>Задает stub CollectionBase.OnRemoveComplete(Int32 index, Object value)</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeTypeReferenceCollection.OnRemoveInt32Object">
            <summary>Задает stub CollectionBase.OnRemove(Int32 index, Object value)</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeTypeReferenceCollection.OnSet(System.Int32,System.Object,System.Object)">
            <summary>Задает заглушка CollectionBase.OnSet(Int32 index, Object oldValue, Object newValue)</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeTypeReferenceCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
            <summary>Задает заглушка CollectionBase.OnSetComplete(Int32 index, Object oldValue, Object newValue)</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeTypeReferenceCollection.OnSetCompleteInt32ObjectObject">
            <summary>Задает stub CollectionBase.OnSetComplete(Int32 index, Object oldValue, Object newValue)</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeTypeReferenceCollection.OnSetInt32ObjectObject">
            <summary>Задает stub CollectionBase.OnSet(Int32 index, Object oldValue, Object newValue)</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeTypeReferenceCollection.OnValidate(System.Object)">
            <summary>Задает заглушка CollectionBase.OnValidate(Object value)</summary>
        </member>
        <member name="F:System.CodeDom.Fakes.StubCodeTypeReferenceCollection.OnValidateObject">
            <summary>Задает stub CollectionBase.OnValidate(Object value)</summary>
        </member>
        <member name="T:System.CodeDom.Fakes.StubCodeTypeReferenceExpression">
            <summary>Тип заглушки System.CodeDom.CodeTypeReferenceExpression</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeTypeReferenceExpression.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeTypeReferenceExpression.#ctor(System.CodeDom.CodeTypeReference)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeTypeReferenceExpression.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeTypeReferenceExpression.#ctor(System.Type)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeTypeReferenceExpression.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeTypeReferenceExpression.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCodeTypeReferenceExpression</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeTypeReferenceExpression.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeTypeReferenceExpression.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.CodeDom.Fakes.StubCodeVariableDeclarationStatement">
            <summary>Тип заглушки System.CodeDom.CodeVariableDeclarationStatement</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeVariableDeclarationStatement.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeVariableDeclarationStatement.#ctor(System.CodeDom.CodeTypeReference,System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeVariableDeclarationStatement.#ctor(System.String,System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeVariableDeclarationStatement.#ctor(System.Type,System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeVariableDeclarationStatement.#ctor(System.CodeDom.CodeTypeReference,System.String,System.CodeDom.CodeExpression)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeVariableDeclarationStatement.#ctor(System.String,System.String,System.CodeDom.CodeExpression)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeVariableDeclarationStatement.#ctor(System.Type,System.String,System.CodeDom.CodeExpression)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeVariableDeclarationStatement.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeVariableDeclarationStatement.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCodeVariableDeclarationStatement</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeVariableDeclarationStatement.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeVariableDeclarationStatement.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.CodeDom.Fakes.StubCodeVariableReferenceExpression">
            <summary>Тип заглушки System.CodeDom.CodeVariableReferenceExpression</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeVariableReferenceExpression.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeVariableReferenceExpression.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeVariableReferenceExpression.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.CodeDom.Fakes.StubCodeVariableReferenceExpression.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCodeVariableReferenceExpression</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeVariableReferenceExpression.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.CodeDom.Fakes.StubCodeVariableReferenceExpression.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Collections.Concurrent.Fakes.StubBlockingCollection`1">
            <summary>Тип заглушки System.Collections.Concurrent.BlockingCollection`1</summary>
        </member>
        <member name="M:System.Collections.Concurrent.Fakes.StubBlockingCollection`1.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Concurrent.Fakes.StubBlockingCollection`1.#ctor(System.Int32)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Concurrent.Fakes.StubBlockingCollection`1.#ctor(System.Collections.Concurrent.IProducerConsumerCollection{`0})">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Concurrent.Fakes.StubBlockingCollection`1.#ctor(System.Collections.Concurrent.IProducerConsumerCollection{`0},System.Int32)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Collections.Concurrent.Fakes.StubBlockingCollection`1.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Collections.Concurrent.Fakes.StubBlockingCollection`1.Dispose(System.Boolean)">
            <summary>Задает заглушка BlockingCollection`1.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.Collections.Concurrent.Fakes.StubBlockingCollection`1.DisposeBoolean">
            <summary>Задает stub BlockingCollection`1.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:System.Collections.Concurrent.Fakes.StubBlockingCollection`1.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubBlockingCollection</summary>
        </member>
        <member name="P:System.Collections.Concurrent.Fakes.StubBlockingCollection`1.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Collections.Concurrent.Fakes.StubBlockingCollection`1.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Collections.Concurrent.Fakes.StubConcurrentBag`1">
            <summary>Тип заглушки System.Collections.Concurrent.ConcurrentBag`1</summary>
        </member>
        <member name="M:System.Collections.Concurrent.Fakes.StubConcurrentBag`1.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Concurrent.Fakes.StubConcurrentBag`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Collections.Concurrent.Fakes.StubConcurrentBag`1.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Collections.Concurrent.Fakes.StubConcurrentBag`1.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubConcurrentBag</summary>
        </member>
        <member name="P:System.Collections.Concurrent.Fakes.StubConcurrentBag`1.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Collections.Concurrent.Fakes.StubConcurrentBag`1.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Collections.Generic.Fakes.StubISet`1">
            <summary>Тип заглушки System.Collections.Generic.ISet`1</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubISet`1.#ctor">
            <summary>Инициализирует новый экземпляр type StubISet</summary>
        </member>
        <member name="F:System.Collections.Generic.Fakes.StubISet`1.AddT0">
            <summary>Задает stub ISet`1.Add(!0 item)</summary>
        </member>
        <member name="F:System.Collections.Generic.Fakes.StubISet`1.AddT001">
            <summary>Задает stub ICollection`1.Add(!0 item)</summary>
        </member>
        <member name="F:System.Collections.Generic.Fakes.StubISet`1.Clear">
            <summary>Задает stub ICollection`1.Clear()</summary>
        </member>
        <member name="F:System.Collections.Generic.Fakes.StubISet`1.ContainsT0">
            <summary>Задает stub ICollection`1.Contains(!0 item)</summary>
        </member>
        <member name="F:System.Collections.Generic.Fakes.StubISet`1.CopyToT0ArrayInt32">
            <summary>Задает stub ICollection`1.CopyTo(!0[] array, Int32 arrayIndex)</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.StubISet`1.System#Collections#Generic#ICollection{T}#Count">
            <summary>Задает stub ICollection`1.get_Count()</summary>
        </member>
        <member name="F:System.Collections.Generic.Fakes.StubISet`1.CountGet">
            <summary>Задает stub ICollection`1.get_Count()</summary>
        </member>
        <member name="F:System.Collections.Generic.Fakes.StubISet`1.ExceptWithIEnumerableOfT0">
            <summary>Задает stub ISet`1.ExceptWith(IEnumerable`1&lt;!0&gt; other)</summary>
        </member>
        <member name="F:System.Collections.Generic.Fakes.StubISet`1.GetEnumerator">
            <summary>Задает stub IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="F:System.Collections.Generic.Fakes.StubISet`1.GetEnumerator01">
            <summary>Задает stub IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="F:System.Collections.Generic.Fakes.StubISet`1.IntersectWithIEnumerableOfT0">
            <summary>Задает stub ISet`1.IntersectWith(IEnumerable`1&lt;!0&gt; other)</summary>
        </member>
        <member name="F:System.Collections.Generic.Fakes.StubISet`1.IsProperSubsetOfIEnumerableOfT0">
            <summary>Задает stub ISet`1.IsProperSubsetOf(IEnumerable`1&lt;!0&gt; other)</summary>
        </member>
        <member name="F:System.Collections.Generic.Fakes.StubISet`1.IsProperSupersetOfIEnumerableOfT0">
            <summary>Задает stub ISet`1.IsProperSupersetOf(IEnumerable`1&lt;!0&gt; other)</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.StubISet`1.System#Collections#Generic#ICollection{T}#IsReadOnly">
            <summary>Задает stub ICollection`1.get_IsReadOnly()</summary>
        </member>
        <member name="F:System.Collections.Generic.Fakes.StubISet`1.IsReadOnlyGet">
            <summary>Задает stub ICollection`1.get_IsReadOnly()</summary>
        </member>
        <member name="F:System.Collections.Generic.Fakes.StubISet`1.IsSubsetOfIEnumerableOfT0">
            <summary>Задает stub ISet`1.IsSubsetOf(IEnumerable`1&lt;!0&gt; other)</summary>
        </member>
        <member name="F:System.Collections.Generic.Fakes.StubISet`1.IsSupersetOfIEnumerableOfT0">
            <summary>Задает stub ISet`1.IsSupersetOf(IEnumerable`1&lt;!0&gt; other)</summary>
        </member>
        <member name="F:System.Collections.Generic.Fakes.StubISet`1.OverlapsIEnumerableOfT0">
            <summary>Задает stub ISet`1.Overlaps(IEnumerable`1&lt;!0&gt; other)</summary>
        </member>
        <member name="F:System.Collections.Generic.Fakes.StubISet`1.RemoveT0">
            <summary>Задает stub ICollection`1.Remove(!0 item)</summary>
        </member>
        <member name="F:System.Collections.Generic.Fakes.StubISet`1.SetEqualsIEnumerableOfT0">
            <summary>Задает stub ISet`1.SetEquals(IEnumerable`1&lt;!0&gt; other)</summary>
        </member>
        <member name="F:System.Collections.Generic.Fakes.StubISet`1.SymmetricExceptWithIEnumerableOfT0">
            <summary>Задает stub ISet`1.SymmetricExceptWith(IEnumerable`1&lt;!0&gt; other)</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubISet`1.System#Collections#Generic#ICollection{T}#Add(`0)">
            <summary>Задает заглушка ICollection`1.Add(!0 item)</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubISet`1.System#Collections#Generic#ICollection{T}#Clear">
            <summary>Задает заглушка ICollection`1.Clear()</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubISet`1.System#Collections#Generic#ICollection{T}#Contains(`0)">
            <summary>Задает заглушка ICollection`1.Contains(!0 item)</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubISet`1.System#Collections#Generic#ICollection{T}#CopyTo(`0[],System.Int32)">
            <summary>Задает заглушка ICollection`1.CopyTo(!0[] array, Int32 arrayIndex)</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubISet`1.System#Collections#Generic#ICollection{T}#Remove(`0)">
            <summary>Задает заглушка ICollection`1.Remove(!0 item)</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubISet`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
            <summary>Задает заглушка IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubISet`1.System#Collections#Generic#ISet{T}#Add(`0)">
            <summary>Задает заглушка ISet`1.Add(!0 item)</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubISet`1.System#Collections#Generic#ISet{T}#ExceptWith(System.Collections.Generic.IEnumerable{`0})">
            <summary>Задает заглушка ISet`1.ExceptWith(IEnumerable`1&lt;!0&gt; other)</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubISet`1.System#Collections#Generic#ISet{T}#IntersectWith(System.Collections.Generic.IEnumerable{`0})">
            <summary>Задает заглушка ISet`1.IntersectWith(IEnumerable`1&lt;!0&gt; other)</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubISet`1.System#Collections#Generic#ISet{T}#IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})">
            <summary>Задает заглушка ISet`1.IsProperSubsetOf(IEnumerable`1&lt;!0&gt; other)</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubISet`1.System#Collections#Generic#ISet{T}#IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})">
            <summary>Задает заглушка ISet`1.IsProperSupersetOf(IEnumerable`1&lt;!0&gt; other)</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubISet`1.System#Collections#Generic#ISet{T}#IsSubsetOf(System.Collections.Generic.IEnumerable{`0})">
            <summary>Задает заглушка ISet`1.IsSubsetOf(IEnumerable`1&lt;!0&gt; other)</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubISet`1.System#Collections#Generic#ISet{T}#IsSupersetOf(System.Collections.Generic.IEnumerable{`0})">
            <summary>Задает заглушка ISet`1.IsSupersetOf(IEnumerable`1&lt;!0&gt; other)</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubISet`1.System#Collections#Generic#ISet{T}#Overlaps(System.Collections.Generic.IEnumerable{`0})">
            <summary>Задает заглушка ISet`1.Overlaps(IEnumerable`1&lt;!0&gt; other)</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubISet`1.System#Collections#Generic#ISet{T}#SetEquals(System.Collections.Generic.IEnumerable{`0})">
            <summary>Задает заглушка ISet`1.SetEquals(IEnumerable`1&lt;!0&gt; other)</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubISet`1.System#Collections#Generic#ISet{T}#SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})">
            <summary>Задает заглушка ISet`1.SymmetricExceptWith(IEnumerable`1&lt;!0&gt; other)</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubISet`1.System#Collections#Generic#ISet{T}#UnionWith(System.Collections.Generic.IEnumerable{`0})">
            <summary>Задает заглушка ISet`1.UnionWith(IEnumerable`1&lt;!0&gt; other)</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubISet`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>Задает заглушка IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="F:System.Collections.Generic.Fakes.StubISet`1.UnionWithIEnumerableOfT0">
            <summary>Задает stub ISet`1.UnionWith(IEnumerable`1&lt;!0&gt; other)</summary>
        </member>
        <member name="T:System.Collections.Generic.Fakes.StubLinkedList`1">
            <summary>Тип заглушки System.Collections.Generic.LinkedList`1</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubLinkedList`1.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubLinkedList`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubLinkedList`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.StubLinkedList`1.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubLinkedList`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка LinkedList`1.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Collections.Generic.Fakes.StubLinkedList`1.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub LinkedList`1.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubLinkedList`1.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubLinkedList</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.StubLinkedList`1.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.StubLinkedList`1.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubLinkedList`1.OnDeserialization(System.Object)">
            <summary>Задает заглушка LinkedList`1.OnDeserialization(Object sender)</summary>
        </member>
        <member name="F:System.Collections.Generic.Fakes.StubLinkedList`1.OnDeserializationObject">
            <summary>Задает stub LinkedList`1.OnDeserialization(Object sender)</summary>
        </member>
        <member name="T:System.Collections.Generic.Fakes.StubQueue`1">
            <summary>Тип заглушки System.Collections.Generic.Queue`1</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubQueue`1.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubQueue`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubQueue`1.#ctor(System.Int32)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.StubQueue`1.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubQueue`1.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubQueue</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.StubQueue`1.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.StubQueue`1.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Collections.Generic.Fakes.StubSortedDictionary`2">
            <summary>Тип заглушки System.Collections.Generic.SortedDictionary`2</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubSortedDictionary`2.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubSortedDictionary`2.#ctor(System.Collections.Generic.IComparer{`0})">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubSortedDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubSortedDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IComparer{`0})">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.StubSortedDictionary`2.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubSortedDictionary`2.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubSortedDictionary</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.StubSortedDictionary`2.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.StubSortedDictionary`2.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Collections.Generic.Fakes.StubSortedList`2">
            <summary>Тип заглушки System.Collections.Generic.SortedList`2</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubSortedList`2.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubSortedList`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubSortedList`2.#ctor(System.Int32)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubSortedList`2.#ctor(System.Collections.Generic.IComparer{`0})">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubSortedList`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IComparer{`0})">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubSortedList`2.#ctor(System.Int32,System.Collections.Generic.IComparer{`0})">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.StubSortedList`2.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubSortedList`2.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubSortedList</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.StubSortedList`2.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.StubSortedList`2.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Collections.Generic.Fakes.StubSortedSet`1">
            <summary>Тип заглушки System.Collections.Generic.SortedSet`1</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubSortedSet`1.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubSortedSet`1.#ctor(System.Collections.Generic.IComparer{`0})">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubSortedSet`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubSortedSet`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IComparer{`0})">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubSortedSet`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.StubSortedSet`1.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubSortedSet`1.Clear">
            <summary>Задает заглушка SortedSet`1.Clear()</summary>
        </member>
        <member name="F:System.Collections.Generic.Fakes.StubSortedSet`1.Clear01">
            <summary>Задает stub SortedSet`1.Clear()</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubSortedSet`1.Contains(`0)">
            <summary>Задает заглушка SortedSet`1.Contains(!0 item)</summary>
        </member>
        <member name="F:System.Collections.Generic.Fakes.StubSortedSet`1.ContainsT0">
            <summary>Задает stub SortedSet`1.Contains(!0 item)</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubSortedSet`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка SortedSet`1.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Collections.Generic.Fakes.StubSortedSet`1.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub SortedSet`1.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubSortedSet`1.GetViewBetween(`0,`0)">
            <summary>Задает заглушка SortedSet`1.GetViewBetween(!0 lowerValue, !0 upperValue)</summary>
        </member>
        <member name="F:System.Collections.Generic.Fakes.StubSortedSet`1.GetViewBetweenT0T0">
            <summary>Задает stub SortedSet`1.GetViewBetween(!0 lowerValue, !0 upperValue)</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubSortedSet`1.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubSortedSet</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.StubSortedSet`1.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.StubSortedSet`1.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubSortedSet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})">
            <summary>Задает заглушка SortedSet`1.IntersectWith(IEnumerable`1&lt;!0&gt; other)</summary>
        </member>
        <member name="F:System.Collections.Generic.Fakes.StubSortedSet`1.IntersectWithIEnumerableOfT0">
            <summary>Задает stub SortedSet`1.IntersectWith(IEnumerable`1&lt;!0&gt; other)</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubSortedSet`1.OnDeserialization(System.Object)">
            <summary>Задает заглушка SortedSet`1.OnDeserialization(Object sender)</summary>
        </member>
        <member name="F:System.Collections.Generic.Fakes.StubSortedSet`1.OnDeserializationObject">
            <summary>Задает stub SortedSet`1.OnDeserialization(Object sender)</summary>
        </member>
        <member name="T:System.Collections.Generic.Fakes.StubStack`1">
            <summary>Тип заглушки System.Collections.Generic.Stack`1</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubStack`1.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubStack`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubStack`1.#ctor(System.Int32)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.StubStack`1.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubStack`1.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubStack</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.StubStack`1.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.StubStack`1.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Collections.ObjectModel.Fakes.ShimObservableCollection`1">
            <summary>Тип оболочки совместимости для System.Collections.ObjectModel.ObservableCollection`1</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.ShimObservableCollection`1.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.ShimObservableCollection`1.#ctor(System.Collections.ObjectModel.ObservableCollection{`0})">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="T:System.Collections.ObjectModel.Fakes.ShimObservableCollection`1.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimObservableCollection`1.AllInstances.BlockReentrancy">
            <summary>Задает оболочка совместимости ObservableCollection`1.BlockReentrancy()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimObservableCollection`1.AllInstances.CheckReentrancy">
            <summary>Задает оболочка совместимости ObservableCollection`1.CheckReentrancy()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimObservableCollection`1.AllInstances.ClearItems">
            <summary>Задает оболочка совместимости ObservableCollection`1.ClearItems()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimObservableCollection`1.AllInstances.CollectionChangedAddNotifyCollectionChangedEventHandler">
            <summary>Задает оболочка совместимости ObservableCollection`1.add_CollectionChanged(NotifyCollectionChangedEventHandler value)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimObservableCollection`1.AllInstances.CollectionChangedRemoveNotifyCollectionChangedEventHandler">
            <summary>Задает оболочка совместимости ObservableCollection`1.remove_CollectionChanged(NotifyCollectionChangedEventHandler value)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimObservableCollection`1.AllInstances.InsertItemInt32T0">
            <summary>Задает оболочка совместимости ObservableCollection`1.InsertItem(Int32 index, !0 item)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimObservableCollection`1.AllInstances.MoveInt32Int32">
            <summary>Задает оболочка совместимости ObservableCollection`1.Move(Int32 oldIndex, Int32 newIndex)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimObservableCollection`1.AllInstances.MoveItemInt32Int32">
            <summary>Задает оболочка совместимости ObservableCollection`1.MoveItem(Int32 oldIndex, Int32 newIndex)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimObservableCollection`1.AllInstances.OnCollectionChangedNotifyCollectionChangedEventArgs">
            <summary>Задает оболочка совместимости ObservableCollection`1.OnCollectionChanged(NotifyCollectionChangedEventArgs e)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimObservableCollection`1.AllInstances.OnPropertyChangedPropertyChangedEventArgs">
            <summary>Задает оболочка совместимости ObservableCollection`1.OnPropertyChanged(PropertyChangedEventArgs e)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimObservableCollection`1.AllInstances.PropertyChangedAddPropertyChangedEventHandler">
            <summary>Задает оболочка совместимости ObservableCollection`1.add_PropertyChanged(PropertyChangedEventHandler value)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimObservableCollection`1.AllInstances.PropertyChangedRemovePropertyChangedEventHandler">
            <summary>Задает оболочка совместимости ObservableCollection`1.remove_PropertyChanged(PropertyChangedEventHandler value)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimObservableCollection`1.AllInstances.PropertyChangedSystemComponentModelINotifyPropertyChangedaddPropertyChangedEventHandler">
            <summary>Задает оболочка совместимости ObservableCollection`1.System.ComponentModel.INotifyPropertyChanged.add_PropertyChanged(PropertyChangedEventHandler value)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimObservableCollection`1.AllInstances.PropertyChangedSystemComponentModelINotifyPropertyChangedremovePropertyChangedEventHandler">
            <summary>Задает оболочка совместимости ObservableCollection`1.System.ComponentModel.INotifyPropertyChanged.remove_PropertyChanged(PropertyChangedEventHandler value)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimObservableCollection`1.AllInstances.RemoveItemInt32">
            <summary>Задает оболочка совместимости ObservableCollection`1.RemoveItem(Int32 index)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimObservableCollection`1.AllInstances.SetItemInt32T0">
            <summary>Задает оболочка совместимости ObservableCollection`1.SetItem(Int32 index, !0 item)</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.ShimObservableCollection`1.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.ShimObservableCollection`1.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimObservableCollection`1.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.ShimObservableCollection`1.Bind(System.Collections.Specialized.INotifyCollectionChanged)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.ShimObservableCollection`1.Bind(System.ComponentModel.INotifyPropertyChanged)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.ShimObservableCollection`1.Bind(System.Collections.ICollection)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.ShimObservableCollection`1.Bind(System.Collections.IEnumerable)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.ShimObservableCollection`1.Bind(System.Collections.IList)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.ShimObservableCollection`1.Bind(System.Collections.Generic.ICollection{`0})">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.ShimObservableCollection`1.Bind(System.Collections.Generic.IEnumerable{`0})">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.ShimObservableCollection`1.Bind(System.Collections.Generic.IList{`0})">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.ShimObservableCollection`1.Bind(System.Collections.Generic.IReadOnlyCollection{`0})">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.ShimObservableCollection`1.Bind(System.Collections.Generic.IReadOnlyList{`0})">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimObservableCollection`1.BlockReentrancy">
            <summary>Задает оболочка совместимости ObservableCollection`1.BlockReentrancy()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimObservableCollection`1.CheckReentrancy">
            <summary>Задает оболочка совместимости ObservableCollection`1.CheckReentrancy()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimObservableCollection`1.ClearItems">
            <summary>Задает оболочка совместимости ObservableCollection`1.ClearItems()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimObservableCollection`1.CollectionChangedAddNotifyCollectionChangedEventHandler">
            <summary>Задает оболочка совместимости ObservableCollection`1.add_CollectionChanged(NotifyCollectionChangedEventHandler value)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimObservableCollection`1.CollectionChangedRemoveNotifyCollectionChangedEventHandler">
            <summary>Задает оболочка совместимости ObservableCollection`1.remove_CollectionChanged(NotifyCollectionChangedEventHandler value)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimObservableCollection`1.Constructor">
            <summary>Задает оболочка совместимости ObservableCollection`1.ObservableCollection`1()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimObservableCollection`1.ConstructorIEnumerableOfT0">
            <summary>Задает оболочка совместимости ObservableCollection`1.ObservableCollection`1(IEnumerable`1&lt;!0&gt; collection)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimObservableCollection`1.ConstructorListOfT0">
            <summary>Задает оболочка совместимости ObservableCollection`1.ObservableCollection`1(List`1&lt;!0&gt; list)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimObservableCollection`1.InsertItemInt32T0">
            <summary>Задает оболочка совместимости ObservableCollection`1.InsertItem(Int32 index, !0 item)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimObservableCollection`1.MoveInt32Int32">
            <summary>Задает оболочка совместимости ObservableCollection`1.Move(Int32 oldIndex, Int32 newIndex)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimObservableCollection`1.MoveItemInt32Int32">
            <summary>Задает оболочка совместимости ObservableCollection`1.MoveItem(Int32 oldIndex, Int32 newIndex)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimObservableCollection`1.OnCollectionChangedNotifyCollectionChangedEventArgs">
            <summary>Задает оболочка совместимости ObservableCollection`1.OnCollectionChanged(NotifyCollectionChangedEventArgs e)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimObservableCollection`1.OnPropertyChangedPropertyChangedEventArgs">
            <summary>Задает оболочка совместимости ObservableCollection`1.OnPropertyChanged(PropertyChangedEventArgs e)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimObservableCollection`1.PropertyChangedAddPropertyChangedEventHandler">
            <summary>Задает оболочка совместимости ObservableCollection`1.add_PropertyChanged(PropertyChangedEventHandler value)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimObservableCollection`1.PropertyChangedRemovePropertyChangedEventHandler">
            <summary>Задает оболочка совместимости ObservableCollection`1.remove_PropertyChanged(PropertyChangedEventHandler value)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimObservableCollection`1.PropertyChangedSystemComponentModelINotifyPropertyChangedaddPropertyChangedEventHandler">
            <summary>Задает оболочка совместимости ObservableCollection`1.System.ComponentModel.INotifyPropertyChanged.add_PropertyChanged(PropertyChangedEventHandler value)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimObservableCollection`1.PropertyChangedSystemComponentModelINotifyPropertyChangedremovePropertyChangedEventHandler">
            <summary>Задает оболочка совместимости ObservableCollection`1.System.ComponentModel.INotifyPropertyChanged.remove_PropertyChanged(PropertyChangedEventHandler value)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimObservableCollection`1.RemoveItemInt32">
            <summary>Задает оболочка совместимости ObservableCollection`1.RemoveItem(Int32 index)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimObservableCollection`1.SetItemInt32T0">
            <summary>Задает оболочка совместимости ObservableCollection`1.SetItem(Int32 index, !0 item)</summary>
        </member>
        <member name="T:System.Collections.ObjectModel.Fakes.ShimReadOnlyObservableCollection`1">
            <summary>Тип оболочки совместимости для System.Collections.ObjectModel.ReadOnlyObservableCollection`1</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.ShimReadOnlyObservableCollection`1.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.ShimReadOnlyObservableCollection`1.#ctor(System.Collections.ObjectModel.ReadOnlyObservableCollection{`0})">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="T:System.Collections.ObjectModel.Fakes.ShimReadOnlyObservableCollection`1.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyObservableCollection`1.AllInstances.CollectionChangedAddNotifyCollectionChangedEventHandler">
            <summary>Задает оболочка совместимости ReadOnlyObservableCollection`1.add_CollectionChanged(NotifyCollectionChangedEventHandler value)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyObservableCollection`1.AllInstances.CollectionChangedRemoveNotifyCollectionChangedEventHandler">
            <summary>Задает оболочка совместимости ReadOnlyObservableCollection`1.remove_CollectionChanged(NotifyCollectionChangedEventHandler value)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyObservableCollection`1.AllInstances.CollectionChangedSystemCollectionsSpecializedINotifyCollectionChangedaddNotifyCollectionChangedEventHandler">
            <summary>Задает оболочка совместимости ReadOnlyObservableCollection`1.System.Collections.Specialized.INotifyCollectionChanged.add_CollectionChanged(NotifyCollectionChangedEventHandler value)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyObservableCollection`1.AllInstances.CollectionChangedSystemCollectionsSpecializedINotifyCollectionChangedremoveNotifyCollectionChangedEventHandler">
            <summary>Задает оболочка совместимости ReadOnlyObservableCollection`1.System.Collections.Specialized.INotifyCollectionChanged.remove_CollectionChanged(NotifyCollectionChangedEventHandler value)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyObservableCollection`1.AllInstances.OnCollectionChangedNotifyCollectionChangedEventArgs">
            <summary>Задает оболочка совместимости ReadOnlyObservableCollection`1.OnCollectionChanged(NotifyCollectionChangedEventArgs args)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyObservableCollection`1.AllInstances.OnPropertyChangedPropertyChangedEventArgs">
            <summary>Задает оболочка совместимости ReadOnlyObservableCollection`1.OnPropertyChanged(PropertyChangedEventArgs args)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyObservableCollection`1.AllInstances.PropertyChangedAddPropertyChangedEventHandler">
            <summary>Задает оболочка совместимости ReadOnlyObservableCollection`1.add_PropertyChanged(PropertyChangedEventHandler value)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyObservableCollection`1.AllInstances.PropertyChangedRemovePropertyChangedEventHandler">
            <summary>Задает оболочка совместимости ReadOnlyObservableCollection`1.remove_PropertyChanged(PropertyChangedEventHandler value)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyObservableCollection`1.AllInstances.PropertyChangedSystemComponentModelINotifyPropertyChangedaddPropertyChangedEventHandler">
            <summary>Задает оболочка совместимости ReadOnlyObservableCollection`1.System.ComponentModel.INotifyPropertyChanged.add_PropertyChanged(PropertyChangedEventHandler value)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyObservableCollection`1.AllInstances.PropertyChangedSystemComponentModelINotifyPropertyChangedremovePropertyChangedEventHandler">
            <summary>Задает оболочка совместимости ReadOnlyObservableCollection`1.System.ComponentModel.INotifyPropertyChanged.remove_PropertyChanged(PropertyChangedEventHandler value)</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.ShimReadOnlyObservableCollection`1.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.ShimReadOnlyObservableCollection`1.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyObservableCollection`1.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.ShimReadOnlyObservableCollection`1.Bind(System.Collections.Specialized.INotifyCollectionChanged)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.ShimReadOnlyObservableCollection`1.Bind(System.ComponentModel.INotifyPropertyChanged)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.ShimReadOnlyObservableCollection`1.Bind(System.Collections.ICollection)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.ShimReadOnlyObservableCollection`1.Bind(System.Collections.IEnumerable)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.ShimReadOnlyObservableCollection`1.Bind(System.Collections.IList)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.ShimReadOnlyObservableCollection`1.Bind(System.Collections.Generic.ICollection{`0})">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.ShimReadOnlyObservableCollection`1.Bind(System.Collections.Generic.IEnumerable{`0})">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.ShimReadOnlyObservableCollection`1.Bind(System.Collections.Generic.IList{`0})">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.ShimReadOnlyObservableCollection`1.Bind(System.Collections.Generic.IReadOnlyCollection{`0})">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.ShimReadOnlyObservableCollection`1.Bind(System.Collections.Generic.IReadOnlyList{`0})">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyObservableCollection`1.CollectionChangedAddNotifyCollectionChangedEventHandler">
            <summary>Задает оболочка совместимости ReadOnlyObservableCollection`1.add_CollectionChanged(NotifyCollectionChangedEventHandler value)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyObservableCollection`1.CollectionChangedRemoveNotifyCollectionChangedEventHandler">
            <summary>Задает оболочка совместимости ReadOnlyObservableCollection`1.remove_CollectionChanged(NotifyCollectionChangedEventHandler value)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyObservableCollection`1.CollectionChangedSystemCollectionsSpecializedINotifyCollectionChangedaddNotifyCollectionChangedEventHandler">
            <summary>Задает оболочка совместимости ReadOnlyObservableCollection`1.System.Collections.Specialized.INotifyCollectionChanged.add_CollectionChanged(NotifyCollectionChangedEventHandler value)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyObservableCollection`1.CollectionChangedSystemCollectionsSpecializedINotifyCollectionChangedremoveNotifyCollectionChangedEventHandler">
            <summary>Задает оболочка совместимости ReadOnlyObservableCollection`1.System.Collections.Specialized.INotifyCollectionChanged.remove_CollectionChanged(NotifyCollectionChangedEventHandler value)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyObservableCollection`1.ConstructorObservableCollectionOfT0">
            <summary>Задает оболочка совместимости ReadOnlyObservableCollection`1.ReadOnlyObservableCollection`1(ObservableCollection`1&lt;!0&gt; list)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyObservableCollection`1.OnCollectionChangedNotifyCollectionChangedEventArgs">
            <summary>Задает оболочка совместимости ReadOnlyObservableCollection`1.OnCollectionChanged(NotifyCollectionChangedEventArgs args)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyObservableCollection`1.OnPropertyChangedPropertyChangedEventArgs">
            <summary>Задает оболочка совместимости ReadOnlyObservableCollection`1.OnPropertyChanged(PropertyChangedEventArgs args)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyObservableCollection`1.PropertyChangedAddPropertyChangedEventHandler">
            <summary>Задает оболочка совместимости ReadOnlyObservableCollection`1.add_PropertyChanged(PropertyChangedEventHandler value)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyObservableCollection`1.PropertyChangedRemovePropertyChangedEventHandler">
            <summary>Задает оболочка совместимости ReadOnlyObservableCollection`1.remove_PropertyChanged(PropertyChangedEventHandler value)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyObservableCollection`1.PropertyChangedSystemComponentModelINotifyPropertyChangedaddPropertyChangedEventHandler">
            <summary>Задает оболочка совместимости ReadOnlyObservableCollection`1.System.ComponentModel.INotifyPropertyChanged.add_PropertyChanged(PropertyChangedEventHandler value)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyObservableCollection`1.PropertyChangedSystemComponentModelINotifyPropertyChangedremovePropertyChangedEventHandler">
            <summary>Задает оболочка совместимости ReadOnlyObservableCollection`1.System.ComponentModel.INotifyPropertyChanged.remove_PropertyChanged(PropertyChangedEventHandler value)</summary>
        </member>
        <member name="T:System.Collections.ObjectModel.Fakes.StubObservableCollection`1">
            <summary>Тип заглушки System.Collections.ObjectModel.ObservableCollection`1</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.StubObservableCollection`1.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.StubObservableCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.StubObservableCollection`1.#ctor(System.Collections.Generic.List{`0})">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.StubObservableCollection`1.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.StubObservableCollection`1.ClearItems">
            <summary>Задает заглушка ObservableCollection`1.ClearItems()</summary>
        </member>
        <member name="F:System.Collections.ObjectModel.Fakes.StubObservableCollection`1.ClearItems01">
            <summary>Задает stub ObservableCollection`1.ClearItems()</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.StubObservableCollection`1.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubObservableCollection</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.StubObservableCollection`1.InsertItem(System.Int32,`0)">
            <summary>Задает заглушка ObservableCollection`1.InsertItem(Int32 index, !0 item)</summary>
        </member>
        <member name="F:System.Collections.ObjectModel.Fakes.StubObservableCollection`1.InsertItemInt32T0">
            <summary>Задает stub ObservableCollection`1.InsertItem(Int32 index, !0 item)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.StubObservableCollection`1.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.StubObservableCollection`1.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.StubObservableCollection`1.MoveItem(System.Int32,System.Int32)">
            <summary>Задает заглушка ObservableCollection`1.MoveItem(Int32 oldIndex, Int32 newIndex)</summary>
        </member>
        <member name="F:System.Collections.ObjectModel.Fakes.StubObservableCollection`1.MoveItemInt32Int32">
            <summary>Задает stub ObservableCollection`1.MoveItem(Int32 oldIndex, Int32 newIndex)</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.StubObservableCollection`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>Задает заглушка ObservableCollection`1.OnCollectionChanged(NotifyCollectionChangedEventArgs e)</summary>
        </member>
        <member name="F:System.Collections.ObjectModel.Fakes.StubObservableCollection`1.OnCollectionChangedNotifyCollectionChangedEventArgs">
            <summary>Задает stub ObservableCollection`1.OnCollectionChanged(NotifyCollectionChangedEventArgs e)</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.StubObservableCollection`1.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>Задает заглушка ObservableCollection`1.OnPropertyChanged(PropertyChangedEventArgs e)</summary>
        </member>
        <member name="F:System.Collections.ObjectModel.Fakes.StubObservableCollection`1.OnPropertyChangedPropertyChangedEventArgs">
            <summary>Задает stub ObservableCollection`1.OnPropertyChanged(PropertyChangedEventArgs e)</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.StubObservableCollection`1.RemoveItem(System.Int32)">
            <summary>Задает заглушка ObservableCollection`1.RemoveItem(Int32 index)</summary>
        </member>
        <member name="F:System.Collections.ObjectModel.Fakes.StubObservableCollection`1.RemoveItemInt32">
            <summary>Задает stub ObservableCollection`1.RemoveItem(Int32 index)</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.StubObservableCollection`1.SetItem(System.Int32,`0)">
            <summary>Задает заглушка ObservableCollection`1.SetItem(Int32 index, !0 item)</summary>
        </member>
        <member name="F:System.Collections.ObjectModel.Fakes.StubObservableCollection`1.SetItemInt32T0">
            <summary>Задает stub ObservableCollection`1.SetItem(Int32 index, !0 item)</summary>
        </member>
        <member name="T:System.Collections.ObjectModel.Fakes.StubReadOnlyObservableCollection`1">
            <summary>Тип заглушки System.Collections.ObjectModel.ReadOnlyObservableCollection`1</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.StubReadOnlyObservableCollection`1.#ctor(System.Collections.ObjectModel.ObservableCollection{`0})">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.StubReadOnlyObservableCollection`1.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.StubReadOnlyObservableCollection`1.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubReadOnlyObservableCollection</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.StubReadOnlyObservableCollection`1.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.StubReadOnlyObservableCollection`1.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.StubReadOnlyObservableCollection`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>Задает заглушка ReadOnlyObservableCollection`1.OnCollectionChanged(NotifyCollectionChangedEventArgs args)</summary>
        </member>
        <member name="F:System.Collections.ObjectModel.Fakes.StubReadOnlyObservableCollection`1.OnCollectionChangedNotifyCollectionChangedEventArgs">
            <summary>Задает stub ReadOnlyObservableCollection`1.OnCollectionChanged(NotifyCollectionChangedEventArgs args)</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.StubReadOnlyObservableCollection`1.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>Задает заглушка ReadOnlyObservableCollection`1.OnPropertyChanged(PropertyChangedEventArgs args)</summary>
        </member>
        <member name="F:System.Collections.ObjectModel.Fakes.StubReadOnlyObservableCollection`1.OnPropertyChangedPropertyChangedEventArgs">
            <summary>Задает stub ReadOnlyObservableCollection`1.OnPropertyChanged(PropertyChangedEventArgs args)</summary>
        </member>
        <member name="T:System.Collections.Specialized.Fakes.ShimNameObjectCollectionBase">
            <summary>Тип оболочки совместимости для System.Collections.Specialized.NameObjectCollectionBase</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.ShimNameObjectCollectionBase.#ctor(System.Collections.Specialized.NameObjectCollectionBase)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="T:System.Collections.Specialized.Fakes.ShimNameObjectCollectionBase.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameObjectCollectionBase.AllInstances.BaseAddStringObject">
            <summary>Задает оболочка совместимости NameObjectCollectionBase.BaseAdd(String name, Object value)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameObjectCollectionBase.AllInstances.BaseClear">
            <summary>Задает оболочка совместимости NameObjectCollectionBase.BaseClear()</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameObjectCollectionBase.AllInstances.BaseGetAllKeys">
            <summary>Задает оболочка совместимости NameObjectCollectionBase.BaseGetAllKeys()</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameObjectCollectionBase.AllInstances.BaseGetAllValues">
            <summary>Задает оболочка совместимости NameObjectCollectionBase.BaseGetAllValues()</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameObjectCollectionBase.AllInstances.BaseGetAllValuesType">
            <summary>Задает оболочка совместимости NameObjectCollectionBase.BaseGetAllValues(Type type)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameObjectCollectionBase.AllInstances.BaseGetInt32">
            <summary>Задает оболочка совместимости NameObjectCollectionBase.BaseGet(Int32 index)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameObjectCollectionBase.AllInstances.BaseGetKeyInt32">
            <summary>Задает оболочка совместимости NameObjectCollectionBase.BaseGetKey(Int32 index)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameObjectCollectionBase.AllInstances.BaseGetString">
            <summary>Задает оболочка совместимости NameObjectCollectionBase.BaseGet(String name)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameObjectCollectionBase.AllInstances.BaseHasKeys">
            <summary>Задает оболочка совместимости NameObjectCollectionBase.BaseHasKeys()</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameObjectCollectionBase.AllInstances.BaseRemoveAtInt32">
            <summary>Задает оболочка совместимости NameObjectCollectionBase.BaseRemoveAt(Int32 index)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameObjectCollectionBase.AllInstances.BaseRemoveString">
            <summary>Задает оболочка совместимости NameObjectCollectionBase.BaseRemove(String name)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameObjectCollectionBase.AllInstances.BaseSetInt32Object">
            <summary>Задает оболочка совместимости NameObjectCollectionBase.BaseSet(Int32 index, Object value)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameObjectCollectionBase.AllInstances.BaseSetStringObject">
            <summary>Задает оболочка совместимости NameObjectCollectionBase.BaseSet(String name, Object value)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameObjectCollectionBase.AllInstances.ComparerGet">
            <summary>Задает оболочка совместимости NameObjectCollectionBase.get_Comparer()</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameObjectCollectionBase.AllInstances.ComparerSetIEqualityComparer">
            <summary>Задает оболочка совместимости NameObjectCollectionBase.set_Comparer(IEqualityComparer value)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameObjectCollectionBase.AllInstances.CountGet">
            <summary>Задает оболочка совместимости NameObjectCollectionBase.get_Count()</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameObjectCollectionBase.AllInstances.GetEnumerator">
            <summary>Задает оболочка совместимости NameObjectCollectionBase.GetEnumerator()</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameObjectCollectionBase.AllInstances.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает оболочка совместимости NameObjectCollectionBase.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameObjectCollectionBase.AllInstances.IsReadOnlyGet">
            <summary>Задает оболочка совместимости NameObjectCollectionBase.get_IsReadOnly()</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameObjectCollectionBase.AllInstances.IsReadOnlySetBoolean">
            <summary>Задает оболочка совместимости NameObjectCollectionBase.set_IsReadOnly(Boolean value)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameObjectCollectionBase.AllInstances.IsSynchronizedSystemCollectionsICollectionget">
            <summary>Задает оболочка совместимости NameObjectCollectionBase.System.Collections.ICollection.get_IsSynchronized()</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameObjectCollectionBase.AllInstances.KeysGet">
            <summary>Задает оболочка совместимости NameObjectCollectionBase.get_Keys()</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameObjectCollectionBase.AllInstances.OnDeserializationObject">
            <summary>Задает оболочка совместимости NameObjectCollectionBase.OnDeserialization(Object sender)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameObjectCollectionBase.AllInstances.SyncRootSystemCollectionsICollectionget">
            <summary>Задает оболочка совместимости NameObjectCollectionBase.System.Collections.ICollection.get_SyncRoot()</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameObjectCollectionBase.AllInstances.SystemCollectionsICollectionCopyToArrayInt32">
            <summary>Задает оболочка совместимости NameObjectCollectionBase.System.Collections.ICollection.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameObjectCollectionBase.BaseAddStringObject">
            <summary>Задает оболочка совместимости NameObjectCollectionBase.BaseAdd(String name, Object value)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameObjectCollectionBase.BaseClear">
            <summary>Задает оболочка совместимости NameObjectCollectionBase.BaseClear()</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameObjectCollectionBase.BaseGetAllKeys">
            <summary>Задает оболочка совместимости NameObjectCollectionBase.BaseGetAllKeys()</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameObjectCollectionBase.BaseGetAllValues">
            <summary>Задает оболочка совместимости NameObjectCollectionBase.BaseGetAllValues()</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameObjectCollectionBase.BaseGetAllValuesType">
            <summary>Задает оболочка совместимости NameObjectCollectionBase.BaseGetAllValues(Type type)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameObjectCollectionBase.BaseGetInt32">
            <summary>Задает оболочка совместимости NameObjectCollectionBase.BaseGet(Int32 index)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameObjectCollectionBase.BaseGetKeyInt32">
            <summary>Задает оболочка совместимости NameObjectCollectionBase.BaseGetKey(Int32 index)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameObjectCollectionBase.BaseGetString">
            <summary>Задает оболочка совместимости NameObjectCollectionBase.BaseGet(String name)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameObjectCollectionBase.BaseHasKeys">
            <summary>Задает оболочка совместимости NameObjectCollectionBase.BaseHasKeys()</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameObjectCollectionBase.BaseRemoveAtInt32">
            <summary>Задает оболочка совместимости NameObjectCollectionBase.BaseRemoveAt(Int32 index)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameObjectCollectionBase.BaseRemoveString">
            <summary>Задает оболочка совместимости NameObjectCollectionBase.BaseRemove(String name)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameObjectCollectionBase.BaseSetInt32Object">
            <summary>Задает оболочка совместимости NameObjectCollectionBase.BaseSet(Int32 index, Object value)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameObjectCollectionBase.BaseSetStringObject">
            <summary>Задает оболочка совместимости NameObjectCollectionBase.BaseSet(String name, Object value)</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.ShimNameObjectCollectionBase.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.ShimNameObjectCollectionBase.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameObjectCollectionBase.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.ShimNameObjectCollectionBase.Bind(System.Collections.ICollection)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.ShimNameObjectCollectionBase.Bind(System.Collections.IEnumerable)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.ShimNameObjectCollectionBase.Bind(System.Runtime.Serialization.IDeserializationCallback)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.ShimNameObjectCollectionBase.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameObjectCollectionBase.ComparerGet">
            <summary>Задает оболочка совместимости NameObjectCollectionBase.get_Comparer()</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameObjectCollectionBase.ComparerSetIEqualityComparer">
            <summary>Задает оболочка совместимости NameObjectCollectionBase.set_Comparer(IEqualityComparer value)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameObjectCollectionBase.Constructor">
            <summary>Задает оболочка совместимости NameObjectCollectionBase.NameObjectCollectionBase()</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameObjectCollectionBase.ConstructorDBNull">
            <summary>Задает оболочка совместимости NameObjectCollectionBase.NameObjectCollectionBase(DBNull dummy)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameObjectCollectionBase.ConstructorIEqualityComparer">
            <summary>Задает оболочка совместимости NameObjectCollectionBase.NameObjectCollectionBase(IEqualityComparer equalityComparer)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameObjectCollectionBase.ConstructorIHashCodeProviderIComparer">
            <summary>Задает оболочка совместимости NameObjectCollectionBase.NameObjectCollectionBase(IHashCodeProvider hashProvider, IComparer comparer)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameObjectCollectionBase.ConstructorInt32">
            <summary>Задает оболочка совместимости NameObjectCollectionBase.NameObjectCollectionBase(Int32 capacity)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameObjectCollectionBase.ConstructorInt32IEqualityComparer">
            <summary>Задает оболочка совместимости NameObjectCollectionBase.NameObjectCollectionBase(Int32 capacity, IEqualityComparer equalityComparer)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameObjectCollectionBase.ConstructorInt32IHashCodeProviderIComparer">
            <summary>Задает оболочка совместимости NameObjectCollectionBase.NameObjectCollectionBase(Int32 capacity, IHashCodeProvider hashProvider, IComparer comparer)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameObjectCollectionBase.ConstructorSerializationInfoStreamingContext">
            <summary>Задает оболочка совместимости NameObjectCollectionBase.NameObjectCollectionBase(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameObjectCollectionBase.CountGet">
            <summary>Задает оболочка совместимости NameObjectCollectionBase.get_Count()</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameObjectCollectionBase.GetEnumerator">
            <summary>Задает оболочка совместимости NameObjectCollectionBase.GetEnumerator()</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameObjectCollectionBase.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает оболочка совместимости NameObjectCollectionBase.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameObjectCollectionBase.IsReadOnlyGet">
            <summary>Задает оболочка совместимости NameObjectCollectionBase.get_IsReadOnly()</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameObjectCollectionBase.IsReadOnlySetBoolean">
            <summary>Задает оболочка совместимости NameObjectCollectionBase.set_IsReadOnly(Boolean value)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameObjectCollectionBase.IsSynchronizedSystemCollectionsICollectionget">
            <summary>Задает оболочка совместимости NameObjectCollectionBase.System.Collections.ICollection.get_IsSynchronized()</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameObjectCollectionBase.KeysGet">
            <summary>Задает оболочка совместимости NameObjectCollectionBase.get_Keys()</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameObjectCollectionBase.OnDeserializationObject">
            <summary>Задает оболочка совместимости NameObjectCollectionBase.OnDeserialization(Object sender)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameObjectCollectionBase.StaticConstructor">
            <summary>Задает оболочка совместимости NameObjectCollectionBase.NameObjectCollectionBase()</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameObjectCollectionBase.SyncRootSystemCollectionsICollectionget">
            <summary>Задает оболочка совместимости NameObjectCollectionBase.System.Collections.ICollection.get_SyncRoot()</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameObjectCollectionBase.SystemCollectionsICollectionCopyToArrayInt32">
            <summary>Задает оболочка совместимости NameObjectCollectionBase.System.Collections.ICollection.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="T:System.Collections.Specialized.Fakes.ShimNameValueCollection">
            <summary>Тип оболочки совместимости для System.Collections.Specialized.NameValueCollection</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.ShimNameValueCollection.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.ShimNameValueCollection.#ctor(System.Collections.Specialized.NameValueCollection)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameValueCollection.AddNameValueCollection">
            <summary>Задает оболочка совместимости NameValueCollection.Add(NameValueCollection c)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameValueCollection.AddStringString">
            <summary>Задает оболочка совместимости NameValueCollection.Add(String name, String value)</summary>
        </member>
        <member name="T:System.Collections.Specialized.Fakes.ShimNameValueCollection.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameValueCollection.AllInstances.AddNameValueCollection">
            <summary>Задает оболочка совместимости NameValueCollection.Add(NameValueCollection c)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameValueCollection.AllInstances.AddStringString">
            <summary>Задает оболочка совместимости NameValueCollection.Add(String name, String value)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameValueCollection.AllInstances.AllKeysGet">
            <summary>Задает оболочка совместимости NameValueCollection.get_AllKeys()</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameValueCollection.AllInstances.Clear">
            <summary>Задает оболочка совместимости NameValueCollection.Clear()</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameValueCollection.AllInstances.CopyToArrayInt32">
            <summary>Задает оболочка совместимости NameValueCollection.CopyTo(Array dest, Int32 index)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameValueCollection.AllInstances.GetInt32">
            <summary>Задает оболочка совместимости NameValueCollection.Get(Int32 index)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameValueCollection.AllInstances.GetKeyInt32">
            <summary>Задает оболочка совместимости NameValueCollection.GetKey(Int32 index)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameValueCollection.AllInstances.GetString">
            <summary>Задает оболочка совместимости NameValueCollection.Get(String name)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameValueCollection.AllInstances.GetValuesInt32">
            <summary>Задает оболочка совместимости NameValueCollection.GetValues(Int32 index)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameValueCollection.AllInstances.GetValuesString">
            <summary>Задает оболочка совместимости NameValueCollection.GetValues(String name)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameValueCollection.AllInstances.HasKeys">
            <summary>Задает оболочка совместимости NameValueCollection.HasKeys()</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameValueCollection.AllInstances.InternalHasKeys">
            <summary>Задает оболочка совместимости NameValueCollection.InternalHasKeys()</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameValueCollection.AllInstances.InvalidateCachedArrays">
            <summary>Задает оболочка совместимости NameValueCollection.InvalidateCachedArrays()</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameValueCollection.AllInstances.ItemGetInt32">
            <summary>Задает оболочка совместимости NameValueCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameValueCollection.AllInstances.ItemGetString">
            <summary>Задает оболочка совместимости NameValueCollection.get_Item(String name)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameValueCollection.AllInstances.ItemSetStringString">
            <summary>Задает оболочка совместимости NameValueCollection.set_Item(String name, String value)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameValueCollection.AllInstances.RemoveString">
            <summary>Задает оболочка совместимости NameValueCollection.Remove(String name)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameValueCollection.AllInstances.SetStringString">
            <summary>Задает оболочка совместимости NameValueCollection.Set(String name, String value)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameValueCollection.AllKeysGet">
            <summary>Задает оболочка совместимости NameValueCollection.get_AllKeys()</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.ShimNameValueCollection.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.ShimNameValueCollection.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameValueCollection.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.ShimNameValueCollection.Bind(System.Collections.ICollection)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.ShimNameValueCollection.Bind(System.Collections.IEnumerable)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.ShimNameValueCollection.Bind(System.Runtime.Serialization.IDeserializationCallback)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.ShimNameValueCollection.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameValueCollection.Clear">
            <summary>Задает оболочка совместимости NameValueCollection.Clear()</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameValueCollection.Constructor">
            <summary>Задает оболочка совместимости NameValueCollection.NameValueCollection()</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameValueCollection.ConstructorDBNull">
            <summary>Задает оболочка совместимости NameValueCollection.NameValueCollection(DBNull dummy)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameValueCollection.ConstructorIEqualityComparer">
            <summary>Задает оболочка совместимости NameValueCollection.NameValueCollection(IEqualityComparer equalityComparer)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameValueCollection.ConstructorIHashCodeProviderIComparer">
            <summary>Задает оболочка совместимости NameValueCollection.NameValueCollection(IHashCodeProvider hashProvider, IComparer comparer)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameValueCollection.ConstructorInt32">
            <summary>Задает оболочка совместимости NameValueCollection.NameValueCollection(Int32 capacity)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameValueCollection.ConstructorInt32IEqualityComparer">
            <summary>Задает оболочка совместимости NameValueCollection.NameValueCollection(Int32 capacity, IEqualityComparer equalityComparer)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameValueCollection.ConstructorInt32IHashCodeProviderIComparer">
            <summary>Задает оболочка совместимости NameValueCollection.NameValueCollection(Int32 capacity, IHashCodeProvider hashProvider, IComparer comparer)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameValueCollection.ConstructorInt32NameValueCollection">
            <summary>Задает оболочка совместимости NameValueCollection.NameValueCollection(Int32 capacity, NameValueCollection col)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameValueCollection.ConstructorNameValueCollection">
            <summary>Задает оболочка совместимости NameValueCollection.NameValueCollection(NameValueCollection col)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameValueCollection.ConstructorSerializationInfoStreamingContext">
            <summary>Задает оболочка совместимости NameValueCollection.NameValueCollection(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameValueCollection.CopyToArrayInt32">
            <summary>Задает оболочка совместимости NameValueCollection.CopyTo(Array dest, Int32 index)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameValueCollection.GetInt32">
            <summary>Задает оболочка совместимости NameValueCollection.Get(Int32 index)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameValueCollection.GetKeyInt32">
            <summary>Задает оболочка совместимости NameValueCollection.GetKey(Int32 index)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameValueCollection.GetString">
            <summary>Задает оболочка совместимости NameValueCollection.Get(String name)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameValueCollection.GetValuesInt32">
            <summary>Задает оболочка совместимости NameValueCollection.GetValues(Int32 index)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameValueCollection.GetValuesString">
            <summary>Задает оболочка совместимости NameValueCollection.GetValues(String name)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameValueCollection.HasKeys">
            <summary>Задает оболочка совместимости NameValueCollection.HasKeys()</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameValueCollection.InternalHasKeys">
            <summary>Задает оболочка совместимости NameValueCollection.InternalHasKeys()</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameValueCollection.InvalidateCachedArrays">
            <summary>Задает оболочка совместимости NameValueCollection.InvalidateCachedArrays()</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameValueCollection.ItemGetInt32">
            <summary>Задает оболочка совместимости NameValueCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameValueCollection.ItemGetString">
            <summary>Задает оболочка совместимости NameValueCollection.get_Item(String name)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameValueCollection.ItemSetStringString">
            <summary>Задает оболочка совместимости NameValueCollection.set_Item(String name, String value)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameValueCollection.RemoveString">
            <summary>Задает оболочка совместимости NameValueCollection.Remove(String name)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimNameValueCollection.SetStringString">
            <summary>Задает оболочка совместимости NameValueCollection.Set(String name, String value)</summary>
        </member>
        <member name="T:System.Collections.Specialized.Fakes.ShimStringCollection">
            <summary>Тип оболочки совместимости для System.Collections.Specialized.StringCollection</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.ShimStringCollection.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.ShimStringCollection.#ctor(System.Collections.Specialized.StringCollection)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimStringCollection.AddRangeStringArray">
            <summary>Задает оболочка совместимости StringCollection.AddRange(String[] value)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimStringCollection.AddString">
            <summary>Задает оболочка совместимости StringCollection.Add(String value)</summary>
        </member>
        <member name="T:System.Collections.Specialized.Fakes.ShimStringCollection.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimStringCollection.AllInstances.AddRangeStringArray">
            <summary>Задает оболочка совместимости StringCollection.AddRange(String[] value)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimStringCollection.AllInstances.AddString">
            <summary>Задает оболочка совместимости StringCollection.Add(String value)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimStringCollection.AllInstances.Clear">
            <summary>Задает оболочка совместимости StringCollection.Clear()</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimStringCollection.AllInstances.ContainsString">
            <summary>Задает оболочка совместимости StringCollection.Contains(String value)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimStringCollection.AllInstances.CopyToStringArrayInt32">
            <summary>Задает оболочка совместимости StringCollection.CopyTo(String[] array, Int32 index)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimStringCollection.AllInstances.CountGet">
            <summary>Задает оболочка совместимости StringCollection.get_Count()</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimStringCollection.AllInstances.GetEnumerator">
            <summary>Задает оболочка совместимости StringCollection.GetEnumerator()</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimStringCollection.AllInstances.IndexOfString">
            <summary>Задает оболочка совместимости StringCollection.IndexOf(String value)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimStringCollection.AllInstances.InsertInt32String">
            <summary>Задает оболочка совместимости StringCollection.Insert(Int32 index, String value)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimStringCollection.AllInstances.IsFixedSizeSystemCollectionsIListget">
            <summary>Задает оболочка совместимости StringCollection.System.Collections.IList.get_IsFixedSize()</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimStringCollection.AllInstances.IsReadOnlyGet">
            <summary>Задает оболочка совместимости StringCollection.get_IsReadOnly()</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimStringCollection.AllInstances.IsReadOnlySystemCollectionsIListget">
            <summary>Задает оболочка совместимости StringCollection.System.Collections.IList.get_IsReadOnly()</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimStringCollection.AllInstances.IsSynchronizedGet">
            <summary>Задает оболочка совместимости StringCollection.get_IsSynchronized()</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimStringCollection.AllInstances.ItemGetInt32">
            <summary>Задает оболочка совместимости StringCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimStringCollection.AllInstances.ItemSetInt32String">
            <summary>Задает оболочка совместимости StringCollection.set_Item(Int32 index, String value)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimStringCollection.AllInstances.ItemSystemCollectionsIListgetInt32">
            <summary>Задает оболочка совместимости StringCollection.System.Collections.IList.get_Item(Int32 index)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimStringCollection.AllInstances.ItemSystemCollectionsIListsetInt32Object">
            <summary>Задает оболочка совместимости StringCollection.System.Collections.IList.set_Item(Int32 index, Object value)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimStringCollection.AllInstances.RemoveAtInt32">
            <summary>Задает оболочка совместимости StringCollection.RemoveAt(Int32 index)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimStringCollection.AllInstances.RemoveString">
            <summary>Задает оболочка совместимости StringCollection.Remove(String value)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimStringCollection.AllInstances.SyncRootGet">
            <summary>Задает оболочка совместимости StringCollection.get_SyncRoot()</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimStringCollection.AllInstances.SystemCollectionsICollectionCopyToArrayInt32">
            <summary>Задает оболочка совместимости StringCollection.System.Collections.ICollection.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimStringCollection.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Задает оболочка совместимости StringCollection.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimStringCollection.AllInstances.SystemCollectionsIListAddObject">
            <summary>Задает оболочка совместимости StringCollection.System.Collections.IList.Add(Object value)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimStringCollection.AllInstances.SystemCollectionsIListContainsObject">
            <summary>Задает оболочка совместимости StringCollection.System.Collections.IList.Contains(Object value)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimStringCollection.AllInstances.SystemCollectionsIListIndexOfObject">
            <summary>Задает оболочка совместимости StringCollection.System.Collections.IList.IndexOf(Object value)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimStringCollection.AllInstances.SystemCollectionsIListInsertInt32Object">
            <summary>Задает оболочка совместимости StringCollection.System.Collections.IList.Insert(Int32 index, Object value)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimStringCollection.AllInstances.SystemCollectionsIListRemoveObject">
            <summary>Задает оболочка совместимости StringCollection.System.Collections.IList.Remove(Object value)</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.ShimStringCollection.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.ShimStringCollection.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimStringCollection.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.ShimStringCollection.Bind(System.Collections.ICollection)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.ShimStringCollection.Bind(System.Collections.IEnumerable)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.ShimStringCollection.Bind(System.Collections.IList)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimStringCollection.Clear">
            <summary>Задает оболочка совместимости StringCollection.Clear()</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimStringCollection.Constructor">
            <summary>Задает оболочка совместимости StringCollection.StringCollection()</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimStringCollection.ContainsString">
            <summary>Задает оболочка совместимости StringCollection.Contains(String value)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimStringCollection.CopyToStringArrayInt32">
            <summary>Задает оболочка совместимости StringCollection.CopyTo(String[] array, Int32 index)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimStringCollection.CountGet">
            <summary>Задает оболочка совместимости StringCollection.get_Count()</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimStringCollection.GetEnumerator">
            <summary>Задает оболочка совместимости StringCollection.GetEnumerator()</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimStringCollection.IndexOfString">
            <summary>Задает оболочка совместимости StringCollection.IndexOf(String value)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimStringCollection.InsertInt32String">
            <summary>Задает оболочка совместимости StringCollection.Insert(Int32 index, String value)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimStringCollection.IsFixedSizeSystemCollectionsIListget">
            <summary>Задает оболочка совместимости StringCollection.System.Collections.IList.get_IsFixedSize()</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimStringCollection.IsReadOnlyGet">
            <summary>Задает оболочка совместимости StringCollection.get_IsReadOnly()</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimStringCollection.IsReadOnlySystemCollectionsIListget">
            <summary>Задает оболочка совместимости StringCollection.System.Collections.IList.get_IsReadOnly()</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimStringCollection.IsSynchronizedGet">
            <summary>Задает оболочка совместимости StringCollection.get_IsSynchronized()</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimStringCollection.ItemGetInt32">
            <summary>Задает оболочка совместимости StringCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimStringCollection.ItemSetInt32String">
            <summary>Задает оболочка совместимости StringCollection.set_Item(Int32 index, String value)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimStringCollection.ItemSystemCollectionsIListgetInt32">
            <summary>Задает оболочка совместимости StringCollection.System.Collections.IList.get_Item(Int32 index)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimStringCollection.ItemSystemCollectionsIListsetInt32Object">
            <summary>Задает оболочка совместимости StringCollection.System.Collections.IList.set_Item(Int32 index, Object value)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimStringCollection.RemoveAtInt32">
            <summary>Задает оболочка совместимости StringCollection.RemoveAt(Int32 index)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimStringCollection.RemoveString">
            <summary>Задает оболочка совместимости StringCollection.Remove(String value)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimStringCollection.SyncRootGet">
            <summary>Задает оболочка совместимости StringCollection.get_SyncRoot()</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimStringCollection.SystemCollectionsICollectionCopyToArrayInt32">
            <summary>Задает оболочка совместимости StringCollection.System.Collections.ICollection.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimStringCollection.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Задает оболочка совместимости StringCollection.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimStringCollection.SystemCollectionsIListAddObject">
            <summary>Задает оболочка совместимости StringCollection.System.Collections.IList.Add(Object value)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimStringCollection.SystemCollectionsIListContainsObject">
            <summary>Задает оболочка совместимости StringCollection.System.Collections.IList.Contains(Object value)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimStringCollection.SystemCollectionsIListIndexOfObject">
            <summary>Задает оболочка совместимости StringCollection.System.Collections.IList.IndexOf(Object value)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimStringCollection.SystemCollectionsIListInsertInt32Object">
            <summary>Задает оболочка совместимости StringCollection.System.Collections.IList.Insert(Int32 index, Object value)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimStringCollection.SystemCollectionsIListRemoveObject">
            <summary>Задает оболочка совместимости StringCollection.System.Collections.IList.Remove(Object value)</summary>
        </member>
        <member name="T:System.Collections.Specialized.Fakes.ShimStringDictionary">
            <summary>Тип оболочки совместимости для System.Collections.Specialized.StringDictionary</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.ShimStringDictionary.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.ShimStringDictionary.#ctor(System.Collections.Specialized.StringDictionary)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimStringDictionary.AddStringString">
            <summary>Задает оболочка совместимости StringDictionary.Add(String key, String value)</summary>
        </member>
        <member name="T:System.Collections.Specialized.Fakes.ShimStringDictionary.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimStringDictionary.AllInstances.AddStringString">
            <summary>Задает оболочка совместимости StringDictionary.Add(String key, String value)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimStringDictionary.AllInstances.Clear">
            <summary>Задает оболочка совместимости StringDictionary.Clear()</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimStringDictionary.AllInstances.ContainsKeyString">
            <summary>Задает оболочка совместимости StringDictionary.ContainsKey(String key)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimStringDictionary.AllInstances.ContainsValueString">
            <summary>Задает оболочка совместимости StringDictionary.ContainsValue(String value)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimStringDictionary.AllInstances.CopyToArrayInt32">
            <summary>Задает оболочка совместимости StringDictionary.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimStringDictionary.AllInstances.CountGet">
            <summary>Задает оболочка совместимости StringDictionary.get_Count()</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimStringDictionary.AllInstances.GetEnumerator">
            <summary>Задает оболочка совместимости StringDictionary.GetEnumerator()</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimStringDictionary.AllInstances.IsSynchronizedGet">
            <summary>Задает оболочка совместимости StringDictionary.get_IsSynchronized()</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimStringDictionary.AllInstances.ItemGetString">
            <summary>Задает оболочка совместимости StringDictionary.get_Item(String key)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimStringDictionary.AllInstances.ItemSetStringString">
            <summary>Задает оболочка совместимости StringDictionary.set_Item(String key, String value)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimStringDictionary.AllInstances.KeysGet">
            <summary>Задает оболочка совместимости StringDictionary.get_Keys()</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimStringDictionary.AllInstances.RemoveString">
            <summary>Задает оболочка совместимости StringDictionary.Remove(String key)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimStringDictionary.AllInstances.ReplaceHashtableHashtable">
            <summary>Задает оболочка совместимости StringDictionary.ReplaceHashtable(Hashtable useThisHashtableInstead)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimStringDictionary.AllInstances.SyncRootGet">
            <summary>Задает оболочка совместимости StringDictionary.get_SyncRoot()</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimStringDictionary.AllInstances.ValuesGet">
            <summary>Задает оболочка совместимости StringDictionary.get_Values()</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.ShimStringDictionary.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.ShimStringDictionary.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimStringDictionary.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.ShimStringDictionary.Bind(System.Collections.IEnumerable)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimStringDictionary.Clear">
            <summary>Задает оболочка совместимости StringDictionary.Clear()</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimStringDictionary.Constructor">
            <summary>Задает оболочка совместимости StringDictionary.StringDictionary()</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimStringDictionary.ContainsKeyString">
            <summary>Задает оболочка совместимости StringDictionary.ContainsKey(String key)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimStringDictionary.ContainsValueString">
            <summary>Задает оболочка совместимости StringDictionary.ContainsValue(String value)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimStringDictionary.CopyToArrayInt32">
            <summary>Задает оболочка совместимости StringDictionary.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimStringDictionary.CountGet">
            <summary>Задает оболочка совместимости StringDictionary.get_Count()</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimStringDictionary.GetEnumerator">
            <summary>Задает оболочка совместимости StringDictionary.GetEnumerator()</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimStringDictionary.IsSynchronizedGet">
            <summary>Задает оболочка совместимости StringDictionary.get_IsSynchronized()</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimStringDictionary.ItemGetString">
            <summary>Задает оболочка совместимости StringDictionary.get_Item(String key)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimStringDictionary.ItemSetStringString">
            <summary>Задает оболочка совместимости StringDictionary.set_Item(String key, String value)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimStringDictionary.KeysGet">
            <summary>Задает оболочка совместимости StringDictionary.get_Keys()</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimStringDictionary.RemoveString">
            <summary>Задает оболочка совместимости StringDictionary.Remove(String key)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimStringDictionary.ReplaceHashtableHashtable">
            <summary>Задает оболочка совместимости StringDictionary.ReplaceHashtable(Hashtable useThisHashtableInstead)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimStringDictionary.SyncRootGet">
            <summary>Задает оболочка совместимости StringDictionary.get_SyncRoot()</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimStringDictionary.ValuesGet">
            <summary>Задает оболочка совместимости StringDictionary.get_Values()</summary>
        </member>
        <member name="T:System.Collections.Specialized.Fakes.ShimStringEnumerator">
            <summary>Тип оболочки совместимости для System.Collections.Specialized.StringEnumerator</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.ShimStringEnumerator.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.ShimStringEnumerator.#ctor(System.Collections.Specialized.StringEnumerator)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="T:System.Collections.Specialized.Fakes.ShimStringEnumerator.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimStringEnumerator.AllInstances.CurrentGet">
            <summary>Задает оболочка совместимости StringEnumerator.get_Current()</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimStringEnumerator.AllInstances.MoveNext">
            <summary>Задает оболочка совместимости StringEnumerator.MoveNext()</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimStringEnumerator.AllInstances.Reset">
            <summary>Задает оболочка совместимости StringEnumerator.Reset()</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.ShimStringEnumerator.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.ShimStringEnumerator.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimStringEnumerator.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimStringEnumerator.ConstructorStringCollection">
            <summary>Задает оболочка совместимости StringEnumerator.StringEnumerator(StringCollection mappings)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimStringEnumerator.CurrentGet">
            <summary>Задает оболочка совместимости StringEnumerator.get_Current()</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimStringEnumerator.MoveNext">
            <summary>Задает оболочка совместимости StringEnumerator.MoveNext()</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimStringEnumerator.Reset">
            <summary>Задает оболочка совместимости StringEnumerator.Reset()</summary>
        </member>
        <member name="T:System.Collections.Specialized.Fakes.StubCollectionsUtil">
            <summary>Тип заглушки System.Collections.Specialized.CollectionsUtil</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.StubCollectionsUtil.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.StubCollectionsUtil.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.StubCollectionsUtil.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCollectionsUtil</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.StubCollectionsUtil.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.StubCollectionsUtil.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Collections.Specialized.Fakes.StubHybridDictionary">
            <summary>Тип заглушки System.Collections.Specialized.HybridDictionary</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.StubHybridDictionary.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.StubHybridDictionary.#ctor(System.Boolean)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.StubHybridDictionary.#ctor(System.Int32)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.StubHybridDictionary.#ctor(System.Int32,System.Boolean)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.StubHybridDictionary.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.StubHybridDictionary.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubHybridDictionary</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.StubHybridDictionary.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.StubHybridDictionary.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Collections.Specialized.Fakes.StubINotifyCollectionChanged">
            <summary>Тип заглушки System.Collections.Specialized.INotifyCollectionChanged</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.StubINotifyCollectionChanged.#ctor">
            <summary>Инициализирует новый экземпляр type StubINotifyCollectionChanged</summary>
        </member>
        <member name="T:System.Collections.Specialized.Fakes.StubIOrderedDictionary">
            <summary>Тип заглушки System.Collections.Specialized.IOrderedDictionary</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.StubIOrderedDictionary.#ctor">
            <summary>Инициализирует новый экземпляр type StubIOrderedDictionary</summary>
        </member>
        <member name="F:System.Collections.Specialized.Fakes.StubIOrderedDictionary.AddObjectObject">
            <summary>Задает stub IDictionary.Add(Object key, Object value)</summary>
        </member>
        <member name="F:System.Collections.Specialized.Fakes.StubIOrderedDictionary.Clear">
            <summary>Задает stub IDictionary.Clear()</summary>
        </member>
        <member name="F:System.Collections.Specialized.Fakes.StubIOrderedDictionary.ContainsObject">
            <summary>Задает stub IDictionary.Contains(Object key)</summary>
        </member>
        <member name="F:System.Collections.Specialized.Fakes.StubIOrderedDictionary.CopyToArrayInt32">
            <summary>Задает stub ICollection.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.StubIOrderedDictionary.System#Collections#ICollection#Count">
            <summary>Задает stub ICollection.get_Count()</summary>
        </member>
        <member name="F:System.Collections.Specialized.Fakes.StubIOrderedDictionary.CountGet">
            <summary>Задает stub ICollection.get_Count()</summary>
        </member>
        <member name="F:System.Collections.Specialized.Fakes.StubIOrderedDictionary.GetEnumerator">
            <summary>Задает stub IOrderedDictionary.GetEnumerator()</summary>
        </member>
        <member name="F:System.Collections.Specialized.Fakes.StubIOrderedDictionary.GetEnumerator01">
            <summary>Задает stub IDictionary.GetEnumerator()</summary>
        </member>
        <member name="F:System.Collections.Specialized.Fakes.StubIOrderedDictionary.GetEnumerator02">
            <summary>Задает stub IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="F:System.Collections.Specialized.Fakes.StubIOrderedDictionary.InsertInt32ObjectObject">
            <summary>Задает stub IOrderedDictionary.Insert(Int32 index, Object key, Object value)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.StubIOrderedDictionary.System#Collections#IDictionary#IsFixedSize">
            <summary>Задает stub IDictionary.get_IsFixedSize()</summary>
        </member>
        <member name="F:System.Collections.Specialized.Fakes.StubIOrderedDictionary.IsFixedSizeGet">
            <summary>Задает stub IDictionary.get_IsFixedSize()</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.StubIOrderedDictionary.System#Collections#IDictionary#IsReadOnly">
            <summary>Задает stub IDictionary.get_IsReadOnly()</summary>
        </member>
        <member name="F:System.Collections.Specialized.Fakes.StubIOrderedDictionary.IsReadOnlyGet">
            <summary>Задает stub IDictionary.get_IsReadOnly()</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.StubIOrderedDictionary.System#Collections#ICollection#IsSynchronized">
            <summary>Задает stub ICollection.get_IsSynchronized()</summary>
        </member>
        <member name="F:System.Collections.Specialized.Fakes.StubIOrderedDictionary.IsSynchronizedGet">
            <summary>Задает stub ICollection.get_IsSynchronized()</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.StubIOrderedDictionary.System#Collections#Specialized#IOrderedDictionary#Item(System.Int32)">
            <summary>Задает stub IOrderedDictionary.get_Item(Int32 index)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.StubIOrderedDictionary.System#Collections#IDictionary#Item(System.Object)">
            <summary>Задает stub IDictionary.get_Item(Object key)</summary>
        </member>
        <member name="F:System.Collections.Specialized.Fakes.StubIOrderedDictionary.ItemGetInt32">
            <summary>Задает stub IOrderedDictionary.get_Item(Int32 index)</summary>
        </member>
        <member name="F:System.Collections.Specialized.Fakes.StubIOrderedDictionary.ItemGetObject">
            <summary>Задает stub IDictionary.get_Item(Object key)</summary>
        </member>
        <member name="F:System.Collections.Specialized.Fakes.StubIOrderedDictionary.ItemSetInt32Object">
            <summary>Задает stub IOrderedDictionary.set_Item(Int32 index, Object value)</summary>
        </member>
        <member name="F:System.Collections.Specialized.Fakes.StubIOrderedDictionary.ItemSetObjectObject">
            <summary>Задает stub IDictionary.set_Item(Object key, Object value)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.StubIOrderedDictionary.System#Collections#IDictionary#Keys">
            <summary>Задает stub IDictionary.get_Keys()</summary>
        </member>
        <member name="F:System.Collections.Specialized.Fakes.StubIOrderedDictionary.KeysGet">
            <summary>Задает stub IDictionary.get_Keys()</summary>
        </member>
        <member name="F:System.Collections.Specialized.Fakes.StubIOrderedDictionary.RemoveAtInt32">
            <summary>Задает stub IOrderedDictionary.RemoveAt(Int32 index)</summary>
        </member>
        <member name="F:System.Collections.Specialized.Fakes.StubIOrderedDictionary.RemoveObject">
            <summary>Задает stub IDictionary.Remove(Object key)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.StubIOrderedDictionary.System#Collections#ICollection#SyncRoot">
            <summary>Задает stub ICollection.get_SyncRoot()</summary>
        </member>
        <member name="F:System.Collections.Specialized.Fakes.StubIOrderedDictionary.SyncRootGet">
            <summary>Задает stub ICollection.get_SyncRoot()</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.StubIOrderedDictionary.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>Задает заглушка ICollection.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.StubIOrderedDictionary.System#Collections#IDictionary#Add(System.Object,System.Object)">
            <summary>Задает заглушка IDictionary.Add(Object key, Object value)</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.StubIOrderedDictionary.System#Collections#IDictionary#Clear">
            <summary>Задает заглушка IDictionary.Clear()</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.StubIOrderedDictionary.System#Collections#IDictionary#Contains(System.Object)">
            <summary>Задает заглушка IDictionary.Contains(Object key)</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.StubIOrderedDictionary.System#Collections#IDictionary#GetEnumerator">
            <summary>Задает заглушка IDictionary.GetEnumerator()</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.StubIOrderedDictionary.System#Collections#IDictionary#Remove(System.Object)">
            <summary>Задает заглушка IDictionary.Remove(Object key)</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.StubIOrderedDictionary.System#Collections#IEnumerable#GetEnumerator">
            <summary>Задает заглушка IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.StubIOrderedDictionary.System#Collections#Specialized#IOrderedDictionary#GetEnumerator">
            <summary>Задает заглушка IOrderedDictionary.GetEnumerator()</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.StubIOrderedDictionary.System#Collections#Specialized#IOrderedDictionary#Insert(System.Int32,System.Object,System.Object)">
            <summary>Задает заглушка IOrderedDictionary.Insert(Int32 index, Object key, Object value)</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.StubIOrderedDictionary.System#Collections#Specialized#IOrderedDictionary#RemoveAt(System.Int32)">
            <summary>Задает заглушка IOrderedDictionary.RemoveAt(Int32 index)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.StubIOrderedDictionary.System#Collections#IDictionary#Values">
            <summary>Задает stub IDictionary.get_Values()</summary>
        </member>
        <member name="F:System.Collections.Specialized.Fakes.StubIOrderedDictionary.ValuesGet">
            <summary>Задает stub IDictionary.get_Values()</summary>
        </member>
        <member name="T:System.Collections.Specialized.Fakes.StubListDictionary">
            <summary>Тип заглушки System.Collections.Specialized.ListDictionary</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.StubListDictionary.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.StubListDictionary.#ctor(System.Collections.IComparer)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.StubListDictionary.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.StubListDictionary.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubListDictionary</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.StubListDictionary.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.StubListDictionary.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Collections.Specialized.Fakes.StubNameObjectCollectionBase">
            <summary>Тип заглушки System.Collections.Specialized.NameObjectCollectionBase</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.StubNameObjectCollectionBase.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.StubNameObjectCollectionBase.#ctor(System.Collections.IEqualityComparer)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.StubNameObjectCollectionBase.#ctor(System.Int32)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.StubNameObjectCollectionBase.#ctor(System.Int32,System.Collections.IEqualityComparer)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.StubNameObjectCollectionBase.#ctor(System.Collections.IHashCodeProvider,System.Collections.IComparer)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.StubNameObjectCollectionBase.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.StubNameObjectCollectionBase.#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.StubNameObjectCollectionBase.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.StubNameObjectCollectionBase.Count">
            <summary>Задает stub NameObjectCollectionBase.get_Count()</summary>
        </member>
        <member name="F:System.Collections.Specialized.Fakes.StubNameObjectCollectionBase.CountGet">
            <summary>Задает stub NameObjectCollectionBase.get_Count()</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.StubNameObjectCollectionBase.GetEnumerator">
            <summary>Задает заглушка NameObjectCollectionBase.GetEnumerator()</summary>
        </member>
        <member name="F:System.Collections.Specialized.Fakes.StubNameObjectCollectionBase.GetEnumerator01">
            <summary>Задает stub NameObjectCollectionBase.GetEnumerator()</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.StubNameObjectCollectionBase.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка NameObjectCollectionBase.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Collections.Specialized.Fakes.StubNameObjectCollectionBase.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub NameObjectCollectionBase.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.StubNameObjectCollectionBase.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubNameObjectCollectionBase</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.StubNameObjectCollectionBase.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.StubNameObjectCollectionBase.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.StubNameObjectCollectionBase.Keys">
            <summary>Задает stub NameObjectCollectionBase.get_Keys()</summary>
        </member>
        <member name="F:System.Collections.Specialized.Fakes.StubNameObjectCollectionBase.KeysGet">
            <summary>Задает stub NameObjectCollectionBase.get_Keys()</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.StubNameObjectCollectionBase.OnDeserialization(System.Object)">
            <summary>Задает заглушка NameObjectCollectionBase.OnDeserialization(Object sender)</summary>
        </member>
        <member name="F:System.Collections.Specialized.Fakes.StubNameObjectCollectionBase.OnDeserializationObject">
            <summary>Задает stub NameObjectCollectionBase.OnDeserialization(Object sender)</summary>
        </member>
        <member name="T:System.Collections.Specialized.Fakes.StubNameValueCollection">
            <summary>Тип заглушки System.Collections.Specialized.NameValueCollection</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.StubNameValueCollection.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.StubNameValueCollection.#ctor(System.Collections.Specialized.NameValueCollection)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.StubNameValueCollection.#ctor(System.Collections.IEqualityComparer)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.StubNameValueCollection.#ctor(System.Int32)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.StubNameValueCollection.#ctor(System.Int32,System.Collections.Specialized.NameValueCollection)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.StubNameValueCollection.#ctor(System.Int32,System.Collections.IEqualityComparer)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.StubNameValueCollection.#ctor(System.Collections.IHashCodeProvider,System.Collections.IComparer)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.StubNameValueCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.StubNameValueCollection.#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.StubNameValueCollection.Add(System.String,System.String)">
            <summary>Задает заглушка NameValueCollection.Add(String name, String value)</summary>
        </member>
        <member name="F:System.Collections.Specialized.Fakes.StubNameValueCollection.AddStringString">
            <summary>Задает stub NameValueCollection.Add(String name, String value)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.StubNameValueCollection.AllKeys">
            <summary>Задает stub NameValueCollection.get_AllKeys()</summary>
        </member>
        <member name="F:System.Collections.Specialized.Fakes.StubNameValueCollection.AllKeysGet">
            <summary>Задает stub NameValueCollection.get_AllKeys()</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.StubNameValueCollection.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.StubNameValueCollection.Clear">
            <summary>Задает заглушка NameValueCollection.Clear()</summary>
        </member>
        <member name="F:System.Collections.Specialized.Fakes.StubNameValueCollection.Clear01">
            <summary>Задает stub NameValueCollection.Clear()</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.StubNameValueCollection.Count">
            <summary>Задает stub NameObjectCollectionBase.get_Count()</summary>
        </member>
        <member name="F:System.Collections.Specialized.Fakes.StubNameValueCollection.CountGet">
            <summary>Задает stub NameObjectCollectionBase.get_Count()</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.StubNameValueCollection.Get(System.Int32)">
            <summary>Задает заглушка NameValueCollection.Get(Int32 index)</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.StubNameValueCollection.Get(System.String)">
            <summary>Задает заглушка NameValueCollection.Get(String name)</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.StubNameValueCollection.GetEnumerator">
            <summary>Задает заглушка NameObjectCollectionBase.GetEnumerator()</summary>
        </member>
        <member name="F:System.Collections.Specialized.Fakes.StubNameValueCollection.GetEnumerator01">
            <summary>Задает stub NameObjectCollectionBase.GetEnumerator()</summary>
        </member>
        <member name="F:System.Collections.Specialized.Fakes.StubNameValueCollection.GetInt32">
            <summary>Задает stub NameValueCollection.Get(Int32 index)</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.StubNameValueCollection.GetKey(System.Int32)">
            <summary>Задает заглушка NameValueCollection.GetKey(Int32 index)</summary>
        </member>
        <member name="F:System.Collections.Specialized.Fakes.StubNameValueCollection.GetKeyInt32">
            <summary>Задает stub NameValueCollection.GetKey(Int32 index)</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.StubNameValueCollection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка NameObjectCollectionBase.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Collections.Specialized.Fakes.StubNameValueCollection.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub NameObjectCollectionBase.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Collections.Specialized.Fakes.StubNameValueCollection.GetString">
            <summary>Задает stub NameValueCollection.Get(String name)</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.StubNameValueCollection.GetValues(System.String)">
            <summary>Задает заглушка NameValueCollection.GetValues(String name)</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.StubNameValueCollection.GetValues(System.Int32)">
            <summary>Задает заглушка NameValueCollection.GetValues(Int32 index)</summary>
        </member>
        <member name="F:System.Collections.Specialized.Fakes.StubNameValueCollection.GetValuesInt32">
            <summary>Задает stub NameValueCollection.GetValues(Int32 index)</summary>
        </member>
        <member name="F:System.Collections.Specialized.Fakes.StubNameValueCollection.GetValuesString">
            <summary>Задает stub NameValueCollection.GetValues(String name)</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.StubNameValueCollection.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubNameValueCollection</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.StubNameValueCollection.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.StubNameValueCollection.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.StubNameValueCollection.Keys">
            <summary>Задает stub NameObjectCollectionBase.get_Keys()</summary>
        </member>
        <member name="F:System.Collections.Specialized.Fakes.StubNameValueCollection.KeysGet">
            <summary>Задает stub NameObjectCollectionBase.get_Keys()</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.StubNameValueCollection.OnDeserialization(System.Object)">
            <summary>Задает заглушка NameObjectCollectionBase.OnDeserialization(Object sender)</summary>
        </member>
        <member name="F:System.Collections.Specialized.Fakes.StubNameValueCollection.OnDeserializationObject">
            <summary>Задает stub NameObjectCollectionBase.OnDeserialization(Object sender)</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.StubNameValueCollection.Remove(System.String)">
            <summary>Задает заглушка NameValueCollection.Remove(String name)</summary>
        </member>
        <member name="F:System.Collections.Specialized.Fakes.StubNameValueCollection.RemoveString">
            <summary>Задает stub NameValueCollection.Remove(String name)</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.StubNameValueCollection.Set(System.String,System.String)">
            <summary>Задает заглушка NameValueCollection.Set(String name, String value)</summary>
        </member>
        <member name="F:System.Collections.Specialized.Fakes.StubNameValueCollection.SetStringString">
            <summary>Задает stub NameValueCollection.Set(String name, String value)</summary>
        </member>
        <member name="T:System.Collections.Specialized.Fakes.StubNotifyCollectionChangedEventArgs">
            <summary>Тип заглушки System.Collections.Specialized.NotifyCollectionChangedEventArgs</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.StubNotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.StubNotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Object)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.StubNotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Collections.IList)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.StubNotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Object,System.Int32)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.StubNotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Object,System.Object)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.StubNotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Collections.IList,System.Int32)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.StubNotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Collections.IList,System.Collections.IList)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.StubNotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Object,System.Int32,System.Int32)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.StubNotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Object,System.Object,System.Int32)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.StubNotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Collections.IList,System.Int32,System.Int32)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.StubNotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Collections.IList,System.Collections.IList,System.Int32)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.StubNotifyCollectionChangedEventArgs.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.StubNotifyCollectionChangedEventArgs.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubNotifyCollectionChangedEventArgs</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.StubNotifyCollectionChangedEventArgs.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.StubNotifyCollectionChangedEventArgs.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Collections.Specialized.Fakes.StubOrderedDictionary">
            <summary>Тип заглушки System.Collections.Specialized.OrderedDictionary</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.StubOrderedDictionary.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.StubOrderedDictionary.#ctor(System.Collections.IEqualityComparer)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.StubOrderedDictionary.#ctor(System.Int32)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.StubOrderedDictionary.#ctor(System.Int32,System.Collections.IEqualityComparer)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.StubOrderedDictionary.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.StubOrderedDictionary.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.StubOrderedDictionary.GetEnumerator">
            <summary>Задает заглушка OrderedDictionary.GetEnumerator()</summary>
        </member>
        <member name="F:System.Collections.Specialized.Fakes.StubOrderedDictionary.GetEnumerator01">
            <summary>Задает stub OrderedDictionary.GetEnumerator()</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.StubOrderedDictionary.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка OrderedDictionary.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Collections.Specialized.Fakes.StubOrderedDictionary.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub OrderedDictionary.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.StubOrderedDictionary.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubOrderedDictionary</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.StubOrderedDictionary.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.StubOrderedDictionary.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.StubOrderedDictionary.OnDeserialization(System.Object)">
            <summary>Задает заглушка OrderedDictionary.OnDeserialization(Object sender)</summary>
        </member>
        <member name="F:System.Collections.Specialized.Fakes.StubOrderedDictionary.OnDeserializationObject">
            <summary>Задает stub OrderedDictionary.OnDeserialization(Object sender)</summary>
        </member>
        <member name="T:System.Collections.Specialized.Fakes.StubStringCollection">
            <summary>Тип заглушки System.Collections.Specialized.StringCollection</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.StubStringCollection.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.StubStringCollection.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.StubStringCollection.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubStringCollection</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.StubStringCollection.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.StubStringCollection.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Collections.Specialized.Fakes.StubStringDictionary">
            <summary>Тип заглушки System.Collections.Specialized.StringDictionary</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.StubStringDictionary.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.StubStringDictionary.Add(System.String,System.String)">
            <summary>Задает заглушка StringDictionary.Add(String key, String value)</summary>
        </member>
        <member name="F:System.Collections.Specialized.Fakes.StubStringDictionary.AddStringString">
            <summary>Задает stub StringDictionary.Add(String key, String value)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.StubStringDictionary.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.StubStringDictionary.Clear">
            <summary>Задает заглушка StringDictionary.Clear()</summary>
        </member>
        <member name="F:System.Collections.Specialized.Fakes.StubStringDictionary.Clear01">
            <summary>Задает stub StringDictionary.Clear()</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.StubStringDictionary.ContainsKey(System.String)">
            <summary>Задает заглушка StringDictionary.ContainsKey(String key)</summary>
        </member>
        <member name="F:System.Collections.Specialized.Fakes.StubStringDictionary.ContainsKeyString">
            <summary>Задает stub StringDictionary.ContainsKey(String key)</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.StubStringDictionary.ContainsValue(System.String)">
            <summary>Задает заглушка StringDictionary.ContainsValue(String value)</summary>
        </member>
        <member name="F:System.Collections.Specialized.Fakes.StubStringDictionary.ContainsValueString">
            <summary>Задает stub StringDictionary.ContainsValue(String value)</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.StubStringDictionary.CopyTo(System.Array,System.Int32)">
            <summary>Задает заглушка StringDictionary.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="F:System.Collections.Specialized.Fakes.StubStringDictionary.CopyToArrayInt32">
            <summary>Задает stub StringDictionary.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.StubStringDictionary.Count">
            <summary>Задает stub StringDictionary.get_Count()</summary>
        </member>
        <member name="F:System.Collections.Specialized.Fakes.StubStringDictionary.CountGet">
            <summary>Задает stub StringDictionary.get_Count()</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.StubStringDictionary.GetEnumerator">
            <summary>Задает заглушка StringDictionary.GetEnumerator()</summary>
        </member>
        <member name="F:System.Collections.Specialized.Fakes.StubStringDictionary.GetEnumerator01">
            <summary>Задает stub StringDictionary.GetEnumerator()</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.StubStringDictionary.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubStringDictionary</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.StubStringDictionary.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.StubStringDictionary.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.StubStringDictionary.IsSynchronized">
            <summary>Задает stub StringDictionary.get_IsSynchronized()</summary>
        </member>
        <member name="F:System.Collections.Specialized.Fakes.StubStringDictionary.IsSynchronizedGet">
            <summary>Задает stub StringDictionary.get_IsSynchronized()</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.StubStringDictionary.Item(System.String)">
            <summary>Задает stub StringDictionary.get_Item(String key)</summary>
        </member>
        <member name="F:System.Collections.Specialized.Fakes.StubStringDictionary.ItemGetString">
            <summary>Задает stub StringDictionary.get_Item(String key)</summary>
        </member>
        <member name="F:System.Collections.Specialized.Fakes.StubStringDictionary.ItemSetStringString">
            <summary>Задает stub StringDictionary.set_Item(String key, String value)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.StubStringDictionary.Keys">
            <summary>Задает stub StringDictionary.get_Keys()</summary>
        </member>
        <member name="F:System.Collections.Specialized.Fakes.StubStringDictionary.KeysGet">
            <summary>Задает stub StringDictionary.get_Keys()</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.StubStringDictionary.Remove(System.String)">
            <summary>Задает заглушка StringDictionary.Remove(String key)</summary>
        </member>
        <member name="F:System.Collections.Specialized.Fakes.StubStringDictionary.RemoveString">
            <summary>Задает stub StringDictionary.Remove(String key)</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.StubStringDictionary.SyncRoot">
            <summary>Задает stub StringDictionary.get_SyncRoot()</summary>
        </member>
        <member name="F:System.Collections.Specialized.Fakes.StubStringDictionary.SyncRootGet">
            <summary>Задает stub StringDictionary.get_SyncRoot()</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.StubStringDictionary.Values">
            <summary>Задает stub StringDictionary.get_Values()</summary>
        </member>
        <member name="F:System.Collections.Specialized.Fakes.StubStringDictionary.ValuesGet">
            <summary>Задает stub StringDictionary.get_Values()</summary>
        </member>
        <member name="T:System.ComponentModel.Design.Fakes.StubActiveDesignerEventArgs">
            <summary>Тип заглушки System.ComponentModel.Design.ActiveDesignerEventArgs</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubActiveDesignerEventArgs.#ctor(System.ComponentModel.Design.IDesignerHost,System.ComponentModel.Design.IDesignerHost)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Fakes.StubActiveDesignerEventArgs.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubActiveDesignerEventArgs.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubActiveDesignerEventArgs</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Fakes.StubActiveDesignerEventArgs.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Fakes.StubActiveDesignerEventArgs.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.ComponentModel.Design.Fakes.StubCheckoutException">
            <summary>Тип заглушки System.ComponentModel.Design.CheckoutException</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubCheckoutException.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubCheckoutException.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubCheckoutException.#ctor(System.String,System.Int32)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubCheckoutException.#ctor(System.String,System.Exception)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubCheckoutException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubCheckoutException.AttachBackingFieldToHelpLink">
            <summary>Присоединение делегатов для эмуляции StubCheckoutException.HelpLink как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubCheckoutException.AttachBackingFieldToSource">
            <summary>Присоединение делегатов для эмуляции StubCheckoutException.Source как свойства с резервным полем.</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Fakes.StubCheckoutException.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Fakes.StubCheckoutException.Data">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubCheckoutException.DataGet">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Fakes.StubCheckoutException.ErrorCode">
            <summary>Задает stub ExternalException.get_ErrorCode()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubCheckoutException.ErrorCodeGet">
            <summary>Задает stub ExternalException.get_ErrorCode()</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubCheckoutException.GetBaseException">
            <summary>Задает заглушка Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubCheckoutException.GetBaseException01">
            <summary>Задает stub Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubCheckoutException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubCheckoutException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Fakes.StubCheckoutException.HelpLink">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubCheckoutException.HelpLinkGet">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubCheckoutException.HelpLinkSetString">
            <summary>Задает stub Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubCheckoutException.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCheckoutException</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Fakes.StubCheckoutException.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Fakes.StubCheckoutException.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Fakes.StubCheckoutException.Message">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubCheckoutException.MessageGet">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Fakes.StubCheckoutException.Source">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubCheckoutException.SourceGet">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubCheckoutException.SourceSetString">
            <summary>Задает stub Exception.set_Source(String value)</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Fakes.StubCheckoutException.StackTrace">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubCheckoutException.StackTraceGet">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubCheckoutException.ToString">
            <summary>Задает заглушка ExternalException.ToString()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubCheckoutException.ToString01">
            <summary>Задает stub ExternalException.ToString()</summary>
        </member>
        <member name="T:System.ComponentModel.Design.Fakes.StubCommandID">
            <summary>Тип заглушки System.ComponentModel.Design.CommandID</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubCommandID.#ctor(System.Guid,System.Int32)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Fakes.StubCommandID.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubCommandID.Equals(System.Object)">
            <summary>Задает заглушка CommandID.Equals(Object obj)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubCommandID.EqualsObject">
            <summary>Задает stub CommandID.Equals(Object obj)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubCommandID.GetHashCode">
            <summary>Задает заглушка CommandID.GetHashCode()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubCommandID.GetHashCode01">
            <summary>Задает stub CommandID.GetHashCode()</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Fakes.StubCommandID.Guid">
            <summary>Задает stub CommandID.get_Guid()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubCommandID.GuidGet">
            <summary>Задает stub CommandID.get_Guid()</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Fakes.StubCommandID.ID">
            <summary>Задает stub CommandID.get_ID()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubCommandID.IDGet">
            <summary>Задает stub CommandID.get_ID()</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubCommandID.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCommandID</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Fakes.StubCommandID.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Fakes.StubCommandID.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubCommandID.ToString">
            <summary>Задает заглушка CommandID.ToString()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubCommandID.ToString01">
            <summary>Задает stub CommandID.ToString()</summary>
        </member>
        <member name="T:System.ComponentModel.Design.Fakes.StubComponentEventArgs">
            <summary>Тип заглушки System.ComponentModel.Design.ComponentEventArgs</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubComponentEventArgs.#ctor(System.ComponentModel.IComponent)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Fakes.StubComponentEventArgs.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Fakes.StubComponentEventArgs.Component">
            <summary>Задает stub ComponentEventArgs.get_Component()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubComponentEventArgs.ComponentGet">
            <summary>Задает stub ComponentEventArgs.get_Component()</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubComponentEventArgs.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubComponentEventArgs</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Fakes.StubComponentEventArgs.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Fakes.StubComponentEventArgs.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.ComponentModel.Design.Fakes.StubComponentRenameEventArgs">
            <summary>Тип заглушки System.ComponentModel.Design.ComponentRenameEventArgs</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubComponentRenameEventArgs.#ctor(System.Object,System.String,System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Fakes.StubComponentRenameEventArgs.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubComponentRenameEventArgs.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubComponentRenameEventArgs</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Fakes.StubComponentRenameEventArgs.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Fakes.StubComponentRenameEventArgs.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Fakes.StubComponentRenameEventArgs.NewName">
            <summary>Задает stub ComponentRenameEventArgs.get_NewName()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubComponentRenameEventArgs.NewNameGet">
            <summary>Задает stub ComponentRenameEventArgs.get_NewName()</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Fakes.StubComponentRenameEventArgs.OldName">
            <summary>Задает stub ComponentRenameEventArgs.get_OldName()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubComponentRenameEventArgs.OldNameGet">
            <summary>Задает stub ComponentRenameEventArgs.get_OldName()</summary>
        </member>
        <member name="T:System.ComponentModel.Design.Fakes.StubDesignerCollection">
            <summary>Тип заглушки System.ComponentModel.Design.DesignerCollection</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubDesignerCollection.#ctor(System.Collections.IList)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubDesignerCollection.#ctor(System.ComponentModel.Design.IDesignerHost[])">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Fakes.StubDesignerCollection.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubDesignerCollection.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubDesignerCollection</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Fakes.StubDesignerCollection.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Fakes.StubDesignerCollection.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Fakes.StubDesignerCollection.Item(System.Int32)">
            <summary>Задает stub DesignerCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubDesignerCollection.ItemGetInt32">
            <summary>Задает stub DesignerCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="T:System.ComponentModel.Design.Fakes.StubDesignerEventArgs">
            <summary>Тип заглушки System.ComponentModel.Design.DesignerEventArgs</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubDesignerEventArgs.#ctor(System.ComponentModel.Design.IDesignerHost)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Fakes.StubDesignerEventArgs.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubDesignerEventArgs.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubDesignerEventArgs</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Fakes.StubDesignerEventArgs.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Fakes.StubDesignerEventArgs.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.ComponentModel.Design.Fakes.StubDesignerOptionService">
            <summary>Тип заглушки System.ComponentModel.Design.DesignerOptionService</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubDesignerOptionService.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Fakes.StubDesignerOptionService.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubDesignerOptionService.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubDesignerOptionService</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Fakes.StubDesignerOptionService.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Fakes.StubDesignerOptionService.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubDesignerOptionService.PopulateOptionCollection(System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection)">
            <summary>Задает заглушка DesignerOptionService.PopulateOptionCollection(DesignerOptionCollection options)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubDesignerOptionService.PopulateOptionCollectionDesignerOptionServiceDesignerOptionCollection">
            <summary>Задает stub DesignerOptionService.PopulateOptionCollection(DesignerOptionCollection options)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubDesignerOptionService.ShowDialog(System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection,System.Object)">
            <summary>Задает заглушка DesignerOptionService.ShowDialog(DesignerOptionCollection options, Object optionObject)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubDesignerOptionService.ShowDialogDesignerOptionServiceDesignerOptionCollectionObject">
            <summary>Задает stub DesignerOptionService.ShowDialog(DesignerOptionCollection options, Object optionObject)</summary>
        </member>
        <member name="T:System.ComponentModel.Design.Fakes.StubDesignerTransaction">
            <summary>Тип заглушки System.ComponentModel.Design.DesignerTransaction</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubDesignerTransaction.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubDesignerTransaction.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Fakes.StubDesignerTransaction.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubDesignerTransaction.Dispose(System.Boolean)">
            <summary>Задает заглушка DesignerTransaction.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubDesignerTransaction.DisposeBoolean">
            <summary>Задает stub DesignerTransaction.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubDesignerTransaction.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubDesignerTransaction</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Fakes.StubDesignerTransaction.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Fakes.StubDesignerTransaction.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubDesignerTransaction.OnCancel">
            <summary>Задает заглушка DesignerTransaction.OnCancel()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubDesignerTransaction.OnCancel01">
            <summary>Задает stub DesignerTransaction.OnCancel()</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubDesignerTransaction.OnCommit">
            <summary>Задает заглушка DesignerTransaction.OnCommit()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubDesignerTransaction.OnCommit01">
            <summary>Задает stub DesignerTransaction.OnCommit()</summary>
        </member>
        <member name="T:System.ComponentModel.Design.Fakes.StubDesignerTransactionCloseEventArgs">
            <summary>Тип заглушки System.ComponentModel.Design.DesignerTransactionCloseEventArgs</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubDesignerTransactionCloseEventArgs.#ctor(System.Boolean)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubDesignerTransactionCloseEventArgs.#ctor(System.Boolean,System.Boolean)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Fakes.StubDesignerTransactionCloseEventArgs.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubDesignerTransactionCloseEventArgs.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubDesignerTransactionCloseEventArgs</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Fakes.StubDesignerTransactionCloseEventArgs.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Fakes.StubDesignerTransactionCloseEventArgs.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.ComponentModel.Design.Fakes.StubDesignerVerb">
            <summary>Тип заглушки System.ComponentModel.Design.DesignerVerb</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubDesignerVerb.#ctor(System.String,System.EventHandler)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubDesignerVerb.#ctor(System.String,System.EventHandler,System.ComponentModel.Design.CommandID)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubDesignerVerb.AttachBackingFieldToChecked">
            <summary>Присоединение делегатов для эмуляции StubDesignerVerb.Checked как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubDesignerVerb.AttachBackingFieldToEnabled">
            <summary>Присоединение делегатов для эмуляции StubDesignerVerb.Enabled как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubDesignerVerb.AttachBackingFieldToSupported">
            <summary>Присоединение делегатов для эмуляции StubDesignerVerb.Supported как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubDesignerVerb.AttachBackingFieldToVisible">
            <summary>Присоединение делегатов для эмуляции StubDesignerVerb.Visible как свойства с резервным полем.</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Fakes.StubDesignerVerb.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Fakes.StubDesignerVerb.Checked">
            <summary>Задает stub MenuCommand.get_Checked()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubDesignerVerb.CheckedGet">
            <summary>Задает stub MenuCommand.get_Checked()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubDesignerVerb.CheckedSetBoolean">
            <summary>Задает stub MenuCommand.set_Checked(Boolean value)</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Fakes.StubDesignerVerb.CommandID">
            <summary>Задает stub MenuCommand.get_CommandID()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubDesignerVerb.CommandIDGet">
            <summary>Задает stub MenuCommand.get_CommandID()</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Fakes.StubDesignerVerb.Enabled">
            <summary>Задает stub MenuCommand.get_Enabled()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubDesignerVerb.EnabledGet">
            <summary>Задает stub MenuCommand.get_Enabled()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubDesignerVerb.EnabledSetBoolean">
            <summary>Задает stub MenuCommand.set_Enabled(Boolean value)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubDesignerVerb.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubDesignerVerb</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Fakes.StubDesignerVerb.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Fakes.StubDesignerVerb.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubDesignerVerb.Invoke">
            <summary>Задает заглушка MenuCommand.Invoke()</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubDesignerVerb.Invoke(System.Object)">
            <summary>Задает заглушка MenuCommand.Invoke(Object arg)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubDesignerVerb.Invoke01">
            <summary>Задает stub MenuCommand.Invoke()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubDesignerVerb.InvokeObject">
            <summary>Задает stub MenuCommand.Invoke(Object arg)</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Fakes.StubDesignerVerb.OleStatus">
            <summary>Задает stub MenuCommand.get_OleStatus()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubDesignerVerb.OleStatusGet">
            <summary>Задает stub MenuCommand.get_OleStatus()</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubDesignerVerb.OnCommandChanged(System.EventArgs)">
            <summary>Задает заглушка MenuCommand.OnCommandChanged(EventArgs e)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubDesignerVerb.OnCommandChangedEventArgs">
            <summary>Задает stub MenuCommand.OnCommandChanged(EventArgs e)</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Fakes.StubDesignerVerb.Properties">
            <summary>Задает stub MenuCommand.get_Properties()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubDesignerVerb.PropertiesGet">
            <summary>Задает stub MenuCommand.get_Properties()</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Fakes.StubDesignerVerb.Supported">
            <summary>Задает stub MenuCommand.get_Supported()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubDesignerVerb.SupportedGet">
            <summary>Задает stub MenuCommand.get_Supported()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubDesignerVerb.SupportedSetBoolean">
            <summary>Задает stub MenuCommand.set_Supported(Boolean value)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubDesignerVerb.ToString">
            <summary>Задает заглушка DesignerVerb.ToString()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubDesignerVerb.ToString01">
            <summary>Задает stub DesignerVerb.ToString()</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Fakes.StubDesignerVerb.Visible">
            <summary>Задает stub MenuCommand.get_Visible()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubDesignerVerb.VisibleGet">
            <summary>Задает stub MenuCommand.get_Visible()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubDesignerVerb.VisibleSetBoolean">
            <summary>Задает stub MenuCommand.set_Visible(Boolean value)</summary>
        </member>
        <member name="T:System.ComponentModel.Design.Fakes.StubDesignerVerbCollection">
            <summary>Тип заглушки System.ComponentModel.Design.DesignerVerbCollection</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubDesignerVerbCollection.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubDesignerVerbCollection.#ctor(System.ComponentModel.Design.DesignerVerb[])">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Fakes.StubDesignerVerbCollection.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubDesignerVerbCollection.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubDesignerVerbCollection</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Fakes.StubDesignerVerbCollection.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Fakes.StubDesignerVerbCollection.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubDesignerVerbCollection.OnClear">
            <summary>Задает заглушка DesignerVerbCollection.OnClear()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubDesignerVerbCollection.OnClear01">
            <summary>Задает stub DesignerVerbCollection.OnClear()</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubDesignerVerbCollection.OnClearComplete">
            <summary>Задает заглушка CollectionBase.OnClearComplete()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubDesignerVerbCollection.OnClearComplete01">
            <summary>Задает stub CollectionBase.OnClearComplete()</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubDesignerVerbCollection.OnInsert(System.Int32,System.Object)">
            <summary>Задает заглушка DesignerVerbCollection.OnInsert(Int32 index, Object value)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubDesignerVerbCollection.OnInsertComplete(System.Int32,System.Object)">
            <summary>Задает заглушка CollectionBase.OnInsertComplete(Int32 index, Object value)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubDesignerVerbCollection.OnInsertCompleteInt32Object">
            <summary>Задает stub CollectionBase.OnInsertComplete(Int32 index, Object value)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubDesignerVerbCollection.OnInsertInt32Object">
            <summary>Задает stub DesignerVerbCollection.OnInsert(Int32 index, Object value)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubDesignerVerbCollection.OnRemove(System.Int32,System.Object)">
            <summary>Задает заглушка DesignerVerbCollection.OnRemove(Int32 index, Object value)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubDesignerVerbCollection.OnRemoveComplete(System.Int32,System.Object)">
            <summary>Задает заглушка CollectionBase.OnRemoveComplete(Int32 index, Object value)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubDesignerVerbCollection.OnRemoveCompleteInt32Object">
            <summary>Задает stub CollectionBase.OnRemoveComplete(Int32 index, Object value)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubDesignerVerbCollection.OnRemoveInt32Object">
            <summary>Задает stub DesignerVerbCollection.OnRemove(Int32 index, Object value)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubDesignerVerbCollection.OnSet(System.Int32,System.Object,System.Object)">
            <summary>Задает заглушка DesignerVerbCollection.OnSet(Int32 index, Object oldValue, Object newValue)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubDesignerVerbCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
            <summary>Задает заглушка CollectionBase.OnSetComplete(Int32 index, Object oldValue, Object newValue)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubDesignerVerbCollection.OnSetCompleteInt32ObjectObject">
            <summary>Задает stub CollectionBase.OnSetComplete(Int32 index, Object oldValue, Object newValue)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubDesignerVerbCollection.OnSetInt32ObjectObject">
            <summary>Задает stub DesignerVerbCollection.OnSet(Int32 index, Object oldValue, Object newValue)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubDesignerVerbCollection.OnValidate(System.Object)">
            <summary>Задает заглушка DesignerVerbCollection.OnValidate(Object value)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubDesignerVerbCollection.OnValidateObject">
            <summary>Задает stub DesignerVerbCollection.OnValidate(Object value)</summary>
        </member>
        <member name="T:System.ComponentModel.Design.Fakes.StubDesigntimeLicenseContext">
            <summary>Тип заглушки System.ComponentModel.Design.DesigntimeLicenseContext</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubDesigntimeLicenseContext.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Fakes.StubDesigntimeLicenseContext.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubDesigntimeLicenseContext.GetSavedLicenseKey(System.Type,System.Reflection.Assembly)">
            <summary>Задает заглушка DesigntimeLicenseContext.GetSavedLicenseKey(Type type, Assembly resourceAssembly)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubDesigntimeLicenseContext.GetSavedLicenseKeyTypeAssembly">
            <summary>Задает stub DesigntimeLicenseContext.GetSavedLicenseKey(Type type, Assembly resourceAssembly)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubDesigntimeLicenseContext.GetService(System.Type)">
            <summary>Задает заглушка LicenseContext.GetService(Type type)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubDesigntimeLicenseContext.GetServiceType">
            <summary>Задает stub LicenseContext.GetService(Type type)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubDesigntimeLicenseContext.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubDesigntimeLicenseContext</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Fakes.StubDesigntimeLicenseContext.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Fakes.StubDesigntimeLicenseContext.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubDesigntimeLicenseContext.SetSavedLicenseKey(System.Type,System.String)">
            <summary>Задает заглушка DesigntimeLicenseContext.SetSavedLicenseKey(Type type, String key)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubDesigntimeLicenseContext.SetSavedLicenseKeyTypeString">
            <summary>Задает stub DesigntimeLicenseContext.SetSavedLicenseKey(Type type, String key)</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Fakes.StubDesigntimeLicenseContext.UsageMode">
            <summary>Задает stub DesigntimeLicenseContext.get_UsageMode()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubDesigntimeLicenseContext.UsageModeGet">
            <summary>Задает stub DesigntimeLicenseContext.get_UsageMode()</summary>
        </member>
        <member name="T:System.ComponentModel.Design.Fakes.StubIComponentChangeService">
            <summary>Тип заглушки System.ComponentModel.Design.IComponentChangeService</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubIComponentChangeService.#ctor">
            <summary>Инициализирует новый экземпляр type StubIComponentChangeService</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubIComponentChangeService.OnComponentChangedObjectMemberDescriptorObjectObject">
            <summary>Задает stub IComponentChangeService.OnComponentChanged(Object component, MemberDescriptor member, Object oldValue, Object newValue)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubIComponentChangeService.OnComponentChangingObjectMemberDescriptor">
            <summary>Задает stub IComponentChangeService.OnComponentChanging(Object component, MemberDescriptor member)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubIComponentChangeService.System#ComponentModel#Design#IComponentChangeService#OnComponentChanged(System.Object,System.ComponentModel.MemberDescriptor,System.Object,System.Object)">
            <summary>Задает заглушка IComponentChangeService.OnComponentChanged(Object component, MemberDescriptor member, Object oldValue, Object newValue)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubIComponentChangeService.System#ComponentModel#Design#IComponentChangeService#OnComponentChanging(System.Object,System.ComponentModel.MemberDescriptor)">
            <summary>Задает заглушка IComponentChangeService.OnComponentChanging(Object component, MemberDescriptor member)</summary>
        </member>
        <member name="T:System.ComponentModel.Design.Fakes.StubIComponentDiscoveryService">
            <summary>Тип заглушки System.ComponentModel.Design.IComponentDiscoveryService</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubIComponentDiscoveryService.#ctor">
            <summary>Инициализирует новый экземпляр type StubIComponentDiscoveryService</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubIComponentDiscoveryService.GetComponentTypesIDesignerHostType">
            <summary>Задает stub IComponentDiscoveryService.GetComponentTypes(IDesignerHost designerHost, Type baseType)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubIComponentDiscoveryService.System#ComponentModel#Design#IComponentDiscoveryService#GetComponentTypes(System.ComponentModel.Design.IDesignerHost,System.Type)">
            <summary>Задает заглушка IComponentDiscoveryService.GetComponentTypes(IDesignerHost designerHost, Type baseType)</summary>
        </member>
        <member name="T:System.ComponentModel.Design.Fakes.StubIComponentInitializer">
            <summary>Тип заглушки System.ComponentModel.Design.IComponentInitializer</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubIComponentInitializer.#ctor">
            <summary>Инициализирует новый экземпляр type StubIComponentInitializer</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubIComponentInitializer.InitializeExistingComponentIDictionary">
            <summary>Задает stub IComponentInitializer.InitializeExistingComponent(IDictionary defaultValues)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubIComponentInitializer.InitializeNewComponentIDictionary">
            <summary>Задает stub IComponentInitializer.InitializeNewComponent(IDictionary defaultValues)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubIComponentInitializer.System#ComponentModel#Design#IComponentInitializer#InitializeExistingComponent(System.Collections.IDictionary)">
            <summary>Задает заглушка IComponentInitializer.InitializeExistingComponent(IDictionary defaultValues)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubIComponentInitializer.System#ComponentModel#Design#IComponentInitializer#InitializeNewComponent(System.Collections.IDictionary)">
            <summary>Задает заглушка IComponentInitializer.InitializeNewComponent(IDictionary defaultValues)</summary>
        </member>
        <member name="T:System.ComponentModel.Design.Fakes.StubIDesigner">
            <summary>Тип заглушки System.ComponentModel.Design.IDesigner</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubIDesigner.#ctor">
            <summary>Инициализирует новый экземпляр type StubIDesigner</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Fakes.StubIDesigner.System#ComponentModel#Design#IDesigner#Component">
            <summary>Задает stub IDesigner.get_Component()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubIDesigner.ComponentGet">
            <summary>Задает stub IDesigner.get_Component()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubIDesigner.Dispose">
            <summary>Задает stub IDisposable.Dispose()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubIDesigner.DoDefaultAction">
            <summary>Задает stub IDesigner.DoDefaultAction()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubIDesigner.InitializeIComponent">
            <summary>Задает stub IDesigner.Initialize(IComponent component)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubIDesigner.System#ComponentModel#Design#IDesigner#DoDefaultAction">
            <summary>Задает заглушка IDesigner.DoDefaultAction()</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubIDesigner.System#ComponentModel#Design#IDesigner#Initialize(System.ComponentModel.IComponent)">
            <summary>Задает заглушка IDesigner.Initialize(IComponent component)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubIDesigner.System#IDisposable#Dispose">
            <summary>Задает заглушка IDisposable.Dispose()</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Fakes.StubIDesigner.System#ComponentModel#Design#IDesigner#Verbs">
            <summary>Задает stub IDesigner.get_Verbs()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubIDesigner.VerbsGet">
            <summary>Задает stub IDesigner.get_Verbs()</summary>
        </member>
        <member name="T:System.ComponentModel.Design.Fakes.StubIDesignerEventService">
            <summary>Тип заглушки System.ComponentModel.Design.IDesignerEventService</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubIDesignerEventService.#ctor">
            <summary>Инициализирует новый экземпляр type StubIDesignerEventService</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Fakes.StubIDesignerEventService.System#ComponentModel#Design#IDesignerEventService#ActiveDesigner">
            <summary>Задает stub IDesignerEventService.get_ActiveDesigner()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubIDesignerEventService.ActiveDesignerGet">
            <summary>Задает stub IDesignerEventService.get_ActiveDesigner()</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Fakes.StubIDesignerEventService.System#ComponentModel#Design#IDesignerEventService#Designers">
            <summary>Задает stub IDesignerEventService.get_Designers()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubIDesignerEventService.DesignersGet">
            <summary>Задает stub IDesignerEventService.get_Designers()</summary>
        </member>
        <member name="T:System.ComponentModel.Design.Fakes.StubIDesignerFilter">
            <summary>Тип заглушки System.ComponentModel.Design.IDesignerFilter</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubIDesignerFilter.#ctor">
            <summary>Инициализирует новый экземпляр type StubIDesignerFilter</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubIDesignerFilter.PostFilterAttributesIDictionary">
            <summary>Задает stub IDesignerFilter.PostFilterAttributes(IDictionary attributes)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubIDesignerFilter.PostFilterEventsIDictionary">
            <summary>Задает stub IDesignerFilter.PostFilterEvents(IDictionary events)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubIDesignerFilter.PostFilterPropertiesIDictionary">
            <summary>Задает stub IDesignerFilter.PostFilterProperties(IDictionary properties)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubIDesignerFilter.PreFilterAttributesIDictionary">
            <summary>Задает stub IDesignerFilter.PreFilterAttributes(IDictionary attributes)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubIDesignerFilter.PreFilterEventsIDictionary">
            <summary>Задает stub IDesignerFilter.PreFilterEvents(IDictionary events)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubIDesignerFilter.PreFilterPropertiesIDictionary">
            <summary>Задает stub IDesignerFilter.PreFilterProperties(IDictionary properties)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubIDesignerFilter.System#ComponentModel#Design#IDesignerFilter#PostFilterAttributes(System.Collections.IDictionary)">
            <summary>Задает заглушка IDesignerFilter.PostFilterAttributes(IDictionary attributes)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubIDesignerFilter.System#ComponentModel#Design#IDesignerFilter#PostFilterEvents(System.Collections.IDictionary)">
            <summary>Задает заглушка IDesignerFilter.PostFilterEvents(IDictionary events)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubIDesignerFilter.System#ComponentModel#Design#IDesignerFilter#PostFilterProperties(System.Collections.IDictionary)">
            <summary>Задает заглушка IDesignerFilter.PostFilterProperties(IDictionary properties)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubIDesignerFilter.System#ComponentModel#Design#IDesignerFilter#PreFilterAttributes(System.Collections.IDictionary)">
            <summary>Задает заглушка IDesignerFilter.PreFilterAttributes(IDictionary attributes)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubIDesignerFilter.System#ComponentModel#Design#IDesignerFilter#PreFilterEvents(System.Collections.IDictionary)">
            <summary>Задает заглушка IDesignerFilter.PreFilterEvents(IDictionary events)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubIDesignerFilter.System#ComponentModel#Design#IDesignerFilter#PreFilterProperties(System.Collections.IDictionary)">
            <summary>Задает заглушка IDesignerFilter.PreFilterProperties(IDictionary properties)</summary>
        </member>
        <member name="T:System.ComponentModel.Design.Fakes.StubIDesignerHost">
            <summary>Тип заглушки System.ComponentModel.Design.IDesignerHost</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubIDesignerHost.#ctor">
            <summary>Инициализирует новый экземпляр type StubIDesignerHost</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubIDesignerHost.Activate">
            <summary>Задает stub IDesignerHost.Activate()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubIDesignerHost.AddServiceTypeObject">
            <summary>Задает stub IServiceContainer.AddService(Type serviceType, Object serviceInstance)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubIDesignerHost.AddServiceTypeObjectBoolean">
            <summary>Задает stub IServiceContainer.AddService(Type serviceType, Object serviceInstance, Boolean promote)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubIDesignerHost.AddServiceTypeServiceCreatorCallback">
            <summary>Задает stub IServiceContainer.AddService(Type serviceType, ServiceCreatorCallback callback)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubIDesignerHost.AddServiceTypeServiceCreatorCallbackBoolean">
            <summary>Задает stub IServiceContainer.AddService(Type serviceType, ServiceCreatorCallback callback, Boolean promote)</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Fakes.StubIDesignerHost.System#ComponentModel#Design#IDesignerHost#Container">
            <summary>Задает stub IDesignerHost.get_Container()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubIDesignerHost.ContainerGet">
            <summary>Задает stub IDesignerHost.get_Container()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubIDesignerHost.CreateComponentType">
            <summary>Задает stub IDesignerHost.CreateComponent(Type componentClass)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubIDesignerHost.CreateComponentTypeString">
            <summary>Задает stub IDesignerHost.CreateComponent(Type componentClass, String name)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubIDesignerHost.CreateTransaction">
            <summary>Задает stub IDesignerHost.CreateTransaction()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubIDesignerHost.CreateTransactionString">
            <summary>Задает stub IDesignerHost.CreateTransaction(String description)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubIDesignerHost.DestroyComponentIComponent">
            <summary>Задает stub IDesignerHost.DestroyComponent(IComponent component)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubIDesignerHost.GetDesignerIComponent">
            <summary>Задает stub IDesignerHost.GetDesigner(IComponent component)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubIDesignerHost.GetServiceType">
            <summary>Задает stub IServiceProvider.GetService(Type serviceType)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubIDesignerHost.GetTypeString">
            <summary>Задает stub IDesignerHost.GetType(String typeName)</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Fakes.StubIDesignerHost.System#ComponentModel#Design#IDesignerHost#InTransaction">
            <summary>Задает stub IDesignerHost.get_InTransaction()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubIDesignerHost.InTransactionGet">
            <summary>Задает stub IDesignerHost.get_InTransaction()</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Fakes.StubIDesignerHost.System#ComponentModel#Design#IDesignerHost#Loading">
            <summary>Задает stub IDesignerHost.get_Loading()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubIDesignerHost.LoadingGet">
            <summary>Задает stub IDesignerHost.get_Loading()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubIDesignerHost.RemoveServiceType">
            <summary>Задает stub IServiceContainer.RemoveService(Type serviceType)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubIDesignerHost.RemoveServiceTypeBoolean">
            <summary>Задает stub IServiceContainer.RemoveService(Type serviceType, Boolean promote)</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Fakes.StubIDesignerHost.System#ComponentModel#Design#IDesignerHost#RootComponent">
            <summary>Задает stub IDesignerHost.get_RootComponent()</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Fakes.StubIDesignerHost.System#ComponentModel#Design#IDesignerHost#RootComponentClassName">
            <summary>Задает stub IDesignerHost.get_RootComponentClassName()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubIDesignerHost.RootComponentClassNameGet">
            <summary>Задает stub IDesignerHost.get_RootComponentClassName()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubIDesignerHost.RootComponentGet">
            <summary>Задает stub IDesignerHost.get_RootComponent()</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubIDesignerHost.System#ComponentModel#Design#IDesignerHost#Activate">
            <summary>Задает заглушка IDesignerHost.Activate()</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubIDesignerHost.System#ComponentModel#Design#IDesignerHost#CreateComponent(System.Type)">
            <summary>Задает заглушка IDesignerHost.CreateComponent(Type componentClass)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubIDesignerHost.System#ComponentModel#Design#IDesignerHost#CreateComponent(System.Type,System.String)">
            <summary>Задает заглушка IDesignerHost.CreateComponent(Type componentClass, String name)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubIDesignerHost.System#ComponentModel#Design#IDesignerHost#CreateTransaction">
            <summary>Задает заглушка IDesignerHost.CreateTransaction()</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubIDesignerHost.System#ComponentModel#Design#IDesignerHost#CreateTransaction(System.String)">
            <summary>Задает заглушка IDesignerHost.CreateTransaction(String description)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubIDesignerHost.System#ComponentModel#Design#IDesignerHost#DestroyComponent(System.ComponentModel.IComponent)">
            <summary>Задает заглушка IDesignerHost.DestroyComponent(IComponent component)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubIDesignerHost.System#ComponentModel#Design#IDesignerHost#GetDesigner(System.ComponentModel.IComponent)">
            <summary>Задает заглушка IDesignerHost.GetDesigner(IComponent component)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubIDesignerHost.System#ComponentModel#Design#IDesignerHost#GetType(System.String)">
            <summary>Задает заглушка IDesignerHost.GetType(String typeName)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubIDesignerHost.System#ComponentModel#Design#IServiceContainer#AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback)">
            <summary>Задает заглушка IServiceContainer.AddService(Type serviceType, ServiceCreatorCallback callback)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubIDesignerHost.System#ComponentModel#Design#IServiceContainer#AddService(System.Type,System.Object)">
            <summary>Задает заглушка IServiceContainer.AddService(Type serviceType, Object serviceInstance)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubIDesignerHost.System#ComponentModel#Design#IServiceContainer#AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback,System.Boolean)">
            <summary>Задает заглушка IServiceContainer.AddService(Type serviceType, ServiceCreatorCallback callback, Boolean promote)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubIDesignerHost.System#ComponentModel#Design#IServiceContainer#AddService(System.Type,System.Object,System.Boolean)">
            <summary>Задает заглушка IServiceContainer.AddService(Type serviceType, Object serviceInstance, Boolean promote)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubIDesignerHost.System#ComponentModel#Design#IServiceContainer#RemoveService(System.Type)">
            <summary>Задает заглушка IServiceContainer.RemoveService(Type serviceType)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubIDesignerHost.System#ComponentModel#Design#IServiceContainer#RemoveService(System.Type,System.Boolean)">
            <summary>Задает заглушка IServiceContainer.RemoveService(Type serviceType, Boolean promote)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubIDesignerHost.System#IServiceProvider#GetService(System.Type)">
            <summary>Задает заглушка IServiceProvider.GetService(Type serviceType)</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Fakes.StubIDesignerHost.System#ComponentModel#Design#IDesignerHost#TransactionDescription">
            <summary>Задает stub IDesignerHost.get_TransactionDescription()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubIDesignerHost.TransactionDescriptionGet">
            <summary>Задает stub IDesignerHost.get_TransactionDescription()</summary>
        </member>
        <member name="T:System.ComponentModel.Design.Fakes.StubIDesignerHostTransactionState">
            <summary>Тип заглушки System.ComponentModel.Design.IDesignerHostTransactionState</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubIDesignerHostTransactionState.#ctor">
            <summary>Инициализирует новый экземпляр type StubIDesignerHostTransactionState</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Fakes.StubIDesignerHostTransactionState.System#ComponentModel#Design#IDesignerHostTransactionState#IsClosingTransaction">
            <summary>Задает stub IDesignerHostTransactionState.get_IsClosingTransaction()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubIDesignerHostTransactionState.IsClosingTransactionGet">
            <summary>Задает stub IDesignerHostTransactionState.get_IsClosingTransaction()</summary>
        </member>
        <member name="T:System.ComponentModel.Design.Fakes.StubIDesignerOptionService">
            <summary>Тип заглушки System.ComponentModel.Design.IDesignerOptionService</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubIDesignerOptionService.#ctor">
            <summary>Инициализирует новый экземпляр type StubIDesignerOptionService</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubIDesignerOptionService.GetOptionValueStringString">
            <summary>Задает stub IDesignerOptionService.GetOptionValue(String pageName, String valueName)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubIDesignerOptionService.SetOptionValueStringStringObject">
            <summary>Задает stub IDesignerOptionService.SetOptionValue(String pageName, String valueName, Object value)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubIDesignerOptionService.System#ComponentModel#Design#IDesignerOptionService#GetOptionValue(System.String,System.String)">
            <summary>Задает заглушка IDesignerOptionService.GetOptionValue(String pageName, String valueName)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubIDesignerOptionService.System#ComponentModel#Design#IDesignerOptionService#SetOptionValue(System.String,System.String,System.Object)">
            <summary>Задает заглушка IDesignerOptionService.SetOptionValue(String pageName, String valueName, Object value)</summary>
        </member>
        <member name="T:System.ComponentModel.Design.Fakes.StubIDictionaryService">
            <summary>Тип заглушки System.ComponentModel.Design.IDictionaryService</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubIDictionaryService.#ctor">
            <summary>Инициализирует новый экземпляр type StubIDictionaryService</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubIDictionaryService.GetKeyObject">
            <summary>Задает stub IDictionaryService.GetKey(Object value)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubIDictionaryService.GetValueObject">
            <summary>Задает stub IDictionaryService.GetValue(Object key)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubIDictionaryService.SetValueObjectObject">
            <summary>Задает stub IDictionaryService.SetValue(Object key, Object value)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubIDictionaryService.System#ComponentModel#Design#IDictionaryService#GetKey(System.Object)">
            <summary>Задает заглушка IDictionaryService.GetKey(Object value)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubIDictionaryService.System#ComponentModel#Design#IDictionaryService#GetValue(System.Object)">
            <summary>Задает заглушка IDictionaryService.GetValue(Object key)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubIDictionaryService.System#ComponentModel#Design#IDictionaryService#SetValue(System.Object,System.Object)">
            <summary>Задает заглушка IDictionaryService.SetValue(Object key, Object value)</summary>
        </member>
        <member name="T:System.ComponentModel.Design.Fakes.StubIEventBindingService">
            <summary>Тип заглушки System.ComponentModel.Design.IEventBindingService</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubIEventBindingService.#ctor">
            <summary>Инициализирует новый экземпляр type StubIEventBindingService</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubIEventBindingService.CreateUniqueMethodNameIComponentEventDescriptor">
            <summary>Задает stub IEventBindingService.CreateUniqueMethodName(IComponent component, EventDescriptor e)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubIEventBindingService.GetCompatibleMethodsEventDescriptor">
            <summary>Задает stub IEventBindingService.GetCompatibleMethods(EventDescriptor e)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubIEventBindingService.GetEventPropertiesEventDescriptorCollection">
            <summary>Задает stub IEventBindingService.GetEventProperties(EventDescriptorCollection events)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubIEventBindingService.GetEventPropertyDescriptor">
            <summary>Задает stub IEventBindingService.GetEvent(PropertyDescriptor property)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubIEventBindingService.GetEventPropertyEventDescriptor">
            <summary>Задает stub IEventBindingService.GetEventProperty(EventDescriptor e)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubIEventBindingService.ShowCode">
            <summary>Задает stub IEventBindingService.ShowCode()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubIEventBindingService.ShowCodeIComponentEventDescriptor">
            <summary>Задает stub IEventBindingService.ShowCode(IComponent component, EventDescriptor e)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubIEventBindingService.ShowCodeInt32">
            <summary>Задает stub IEventBindingService.ShowCode(Int32 lineNumber)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubIEventBindingService.System#ComponentModel#Design#IEventBindingService#CreateUniqueMethodName(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor)">
            <summary>Задает заглушка IEventBindingService.CreateUniqueMethodName(IComponent component, EventDescriptor e)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubIEventBindingService.System#ComponentModel#Design#IEventBindingService#GetCompatibleMethods(System.ComponentModel.EventDescriptor)">
            <summary>Задает заглушка IEventBindingService.GetCompatibleMethods(EventDescriptor e)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubIEventBindingService.System#ComponentModel#Design#IEventBindingService#GetEvent(System.ComponentModel.PropertyDescriptor)">
            <summary>Задает заглушка IEventBindingService.GetEvent(PropertyDescriptor property)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubIEventBindingService.System#ComponentModel#Design#IEventBindingService#GetEventProperties(System.ComponentModel.EventDescriptorCollection)">
            <summary>Задает заглушка IEventBindingService.GetEventProperties(EventDescriptorCollection events)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubIEventBindingService.System#ComponentModel#Design#IEventBindingService#GetEventProperty(System.ComponentModel.EventDescriptor)">
            <summary>Задает заглушка IEventBindingService.GetEventProperty(EventDescriptor e)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubIEventBindingService.System#ComponentModel#Design#IEventBindingService#ShowCode">
            <summary>Задает заглушка IEventBindingService.ShowCode()</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubIEventBindingService.System#ComponentModel#Design#IEventBindingService#ShowCode(System.Int32)">
            <summary>Задает заглушка IEventBindingService.ShowCode(Int32 lineNumber)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubIEventBindingService.System#ComponentModel#Design#IEventBindingService#ShowCode(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor)">
            <summary>Задает заглушка IEventBindingService.ShowCode(IComponent component, EventDescriptor e)</summary>
        </member>
        <member name="T:System.ComponentModel.Design.Fakes.StubIExtenderListService">
            <summary>Тип заглушки System.ComponentModel.Design.IExtenderListService</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubIExtenderListService.#ctor">
            <summary>Инициализирует новый экземпляр type StubIExtenderListService</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubIExtenderListService.GetExtenderProviders">
            <summary>Задает stub IExtenderListService.GetExtenderProviders()</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubIExtenderListService.System#ComponentModel#Design#IExtenderListService#GetExtenderProviders">
            <summary>Задает заглушка IExtenderListService.GetExtenderProviders()</summary>
        </member>
        <member name="T:System.ComponentModel.Design.Fakes.StubIExtenderProviderService">
            <summary>Тип заглушки System.ComponentModel.Design.IExtenderProviderService</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubIExtenderProviderService.#ctor">
            <summary>Инициализирует новый экземпляр type StubIExtenderProviderService</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubIExtenderProviderService.AddExtenderProviderIExtenderProvider">
            <summary>Задает stub IExtenderProviderService.AddExtenderProvider(IExtenderProvider provider)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubIExtenderProviderService.RemoveExtenderProviderIExtenderProvider">
            <summary>Задает stub IExtenderProviderService.RemoveExtenderProvider(IExtenderProvider provider)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubIExtenderProviderService.System#ComponentModel#Design#IExtenderProviderService#AddExtenderProvider(System.ComponentModel.IExtenderProvider)">
            <summary>Задает заглушка IExtenderProviderService.AddExtenderProvider(IExtenderProvider provider)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubIExtenderProviderService.System#ComponentModel#Design#IExtenderProviderService#RemoveExtenderProvider(System.ComponentModel.IExtenderProvider)">
            <summary>Задает заглушка IExtenderProviderService.RemoveExtenderProvider(IExtenderProvider provider)</summary>
        </member>
        <member name="T:System.ComponentModel.Design.Fakes.StubIHelpService">
            <summary>Тип заглушки System.ComponentModel.Design.IHelpService</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubIHelpService.#ctor">
            <summary>Инициализирует новый экземпляр type StubIHelpService</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubIHelpService.AddContextAttributeStringStringHelpKeywordType">
            <summary>Задает stub IHelpService.AddContextAttribute(String name, String value, HelpKeywordType keywordType)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubIHelpService.ClearContextAttributes">
            <summary>Задает stub IHelpService.ClearContextAttributes()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubIHelpService.CreateLocalContextHelpContextType">
            <summary>Задает stub IHelpService.CreateLocalContext(HelpContextType contextType)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubIHelpService.RemoveContextAttributeStringString">
            <summary>Задает stub IHelpService.RemoveContextAttribute(String name, String value)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubIHelpService.RemoveLocalContextIHelpService">
            <summary>Задает stub IHelpService.RemoveLocalContext(IHelpService localContext)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubIHelpService.ShowHelpFromKeywordString">
            <summary>Задает stub IHelpService.ShowHelpFromKeyword(String helpKeyword)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubIHelpService.ShowHelpFromUrlString">
            <summary>Задает stub IHelpService.ShowHelpFromUrl(String helpUrl)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubIHelpService.System#ComponentModel#Design#IHelpService#AddContextAttribute(System.String,System.String,System.ComponentModel.Design.HelpKeywordType)">
            <summary>Задает заглушка IHelpService.AddContextAttribute(String name, String value, HelpKeywordType keywordType)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubIHelpService.System#ComponentModel#Design#IHelpService#ClearContextAttributes">
            <summary>Задает заглушка IHelpService.ClearContextAttributes()</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubIHelpService.System#ComponentModel#Design#IHelpService#CreateLocalContext(System.ComponentModel.Design.HelpContextType)">
            <summary>Задает заглушка IHelpService.CreateLocalContext(HelpContextType contextType)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubIHelpService.System#ComponentModel#Design#IHelpService#RemoveContextAttribute(System.String,System.String)">
            <summary>Задает заглушка IHelpService.RemoveContextAttribute(String name, String value)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubIHelpService.System#ComponentModel#Design#IHelpService#RemoveLocalContext(System.ComponentModel.Design.IHelpService)">
            <summary>Задает заглушка IHelpService.RemoveLocalContext(IHelpService localContext)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubIHelpService.System#ComponentModel#Design#IHelpService#ShowHelpFromKeyword(System.String)">
            <summary>Задает заглушка IHelpService.ShowHelpFromKeyword(String helpKeyword)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubIHelpService.System#ComponentModel#Design#IHelpService#ShowHelpFromUrl(System.String)">
            <summary>Задает заглушка IHelpService.ShowHelpFromUrl(String helpUrl)</summary>
        </member>
        <member name="T:System.ComponentModel.Design.Fakes.StubIInheritanceService">
            <summary>Тип заглушки System.ComponentModel.Design.IInheritanceService</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubIInheritanceService.#ctor">
            <summary>Инициализирует новый экземпляр type StubIInheritanceService</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubIInheritanceService.AddInheritedComponentsIComponentIContainer">
            <summary>Задает stub IInheritanceService.AddInheritedComponents(IComponent component, IContainer container)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubIInheritanceService.GetInheritanceAttributeIComponent">
            <summary>Задает stub IInheritanceService.GetInheritanceAttribute(IComponent component)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubIInheritanceService.System#ComponentModel#Design#IInheritanceService#AddInheritedComponents(System.ComponentModel.IComponent,System.ComponentModel.IContainer)">
            <summary>Задает заглушка IInheritanceService.AddInheritedComponents(IComponent component, IContainer container)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubIInheritanceService.System#ComponentModel#Design#IInheritanceService#GetInheritanceAttribute(System.ComponentModel.IComponent)">
            <summary>Задает заглушка IInheritanceService.GetInheritanceAttribute(IComponent component)</summary>
        </member>
        <member name="T:System.ComponentModel.Design.Fakes.StubIMenuCommandService">
            <summary>Тип заглушки System.ComponentModel.Design.IMenuCommandService</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubIMenuCommandService.#ctor">
            <summary>Инициализирует новый экземпляр type StubIMenuCommandService</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubIMenuCommandService.AddCommandMenuCommand">
            <summary>Задает stub IMenuCommandService.AddCommand(MenuCommand command)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubIMenuCommandService.AddVerbDesignerVerb">
            <summary>Задает stub IMenuCommandService.AddVerb(DesignerVerb verb)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubIMenuCommandService.FindCommandCommandID">
            <summary>Задает stub IMenuCommandService.FindCommand(CommandID commandID)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubIMenuCommandService.GlobalInvokeCommandID">
            <summary>Задает stub IMenuCommandService.GlobalInvoke(CommandID commandID)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubIMenuCommandService.RemoveCommandMenuCommand">
            <summary>Задает stub IMenuCommandService.RemoveCommand(MenuCommand command)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubIMenuCommandService.RemoveVerbDesignerVerb">
            <summary>Задает stub IMenuCommandService.RemoveVerb(DesignerVerb verb)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubIMenuCommandService.ShowContextMenuCommandIDInt32Int32">
            <summary>Задает stub IMenuCommandService.ShowContextMenu(CommandID menuID, Int32 x, Int32 y)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubIMenuCommandService.System#ComponentModel#Design#IMenuCommandService#AddCommand(System.ComponentModel.Design.MenuCommand)">
            <summary>Задает заглушка IMenuCommandService.AddCommand(MenuCommand command)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubIMenuCommandService.System#ComponentModel#Design#IMenuCommandService#AddVerb(System.ComponentModel.Design.DesignerVerb)">
            <summary>Задает заглушка IMenuCommandService.AddVerb(DesignerVerb verb)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubIMenuCommandService.System#ComponentModel#Design#IMenuCommandService#FindCommand(System.ComponentModel.Design.CommandID)">
            <summary>Задает заглушка IMenuCommandService.FindCommand(CommandID commandID)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubIMenuCommandService.System#ComponentModel#Design#IMenuCommandService#GlobalInvoke(System.ComponentModel.Design.CommandID)">
            <summary>Задает заглушка IMenuCommandService.GlobalInvoke(CommandID commandID)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubIMenuCommandService.System#ComponentModel#Design#IMenuCommandService#RemoveCommand(System.ComponentModel.Design.MenuCommand)">
            <summary>Задает заглушка IMenuCommandService.RemoveCommand(MenuCommand command)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubIMenuCommandService.System#ComponentModel#Design#IMenuCommandService#RemoveVerb(System.ComponentModel.Design.DesignerVerb)">
            <summary>Задает заглушка IMenuCommandService.RemoveVerb(DesignerVerb verb)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubIMenuCommandService.System#ComponentModel#Design#IMenuCommandService#ShowContextMenu(System.ComponentModel.Design.CommandID,System.Int32,System.Int32)">
            <summary>Задает заглушка IMenuCommandService.ShowContextMenu(CommandID menuID, Int32 x, Int32 y)</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Fakes.StubIMenuCommandService.System#ComponentModel#Design#IMenuCommandService#Verbs">
            <summary>Задает stub IMenuCommandService.get_Verbs()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubIMenuCommandService.VerbsGet">
            <summary>Задает stub IMenuCommandService.get_Verbs()</summary>
        </member>
        <member name="T:System.ComponentModel.Design.Fakes.StubIReferenceService">
            <summary>Тип заглушки System.ComponentModel.Design.IReferenceService</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubIReferenceService.#ctor">
            <summary>Инициализирует новый экземпляр type StubIReferenceService</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubIReferenceService.GetComponentObject">
            <summary>Задает stub IReferenceService.GetComponent(Object reference)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubIReferenceService.GetNameObject">
            <summary>Задает stub IReferenceService.GetName(Object reference)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubIReferenceService.GetReferenceString">
            <summary>Задает stub IReferenceService.GetReference(String name)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubIReferenceService.GetReferences">
            <summary>Задает stub IReferenceService.GetReferences()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubIReferenceService.GetReferencesType">
            <summary>Задает stub IReferenceService.GetReferences(Type baseType)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubIReferenceService.System#ComponentModel#Design#IReferenceService#GetComponent(System.Object)">
            <summary>Задает заглушка IReferenceService.GetComponent(Object reference)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubIReferenceService.System#ComponentModel#Design#IReferenceService#GetName(System.Object)">
            <summary>Задает заглушка IReferenceService.GetName(Object reference)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubIReferenceService.System#ComponentModel#Design#IReferenceService#GetReference(System.String)">
            <summary>Задает заглушка IReferenceService.GetReference(String name)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubIReferenceService.System#ComponentModel#Design#IReferenceService#GetReferences">
            <summary>Задает заглушка IReferenceService.GetReferences()</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubIReferenceService.System#ComponentModel#Design#IReferenceService#GetReferences(System.Type)">
            <summary>Задает заглушка IReferenceService.GetReferences(Type baseType)</summary>
        </member>
        <member name="T:System.ComponentModel.Design.Fakes.StubIResourceService">
            <summary>Тип заглушки System.ComponentModel.Design.IResourceService</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubIResourceService.#ctor">
            <summary>Инициализирует новый экземпляр type StubIResourceService</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubIResourceService.GetResourceReaderCultureInfo">
            <summary>Задает stub IResourceService.GetResourceReader(CultureInfo info)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubIResourceService.GetResourceWriterCultureInfo">
            <summary>Задает stub IResourceService.GetResourceWriter(CultureInfo info)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubIResourceService.System#ComponentModel#Design#IResourceService#GetResourceReader(System.Globalization.CultureInfo)">
            <summary>Задает заглушка IResourceService.GetResourceReader(CultureInfo info)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubIResourceService.System#ComponentModel#Design#IResourceService#GetResourceWriter(System.Globalization.CultureInfo)">
            <summary>Задает заглушка IResourceService.GetResourceWriter(CultureInfo info)</summary>
        </member>
        <member name="T:System.ComponentModel.Design.Fakes.StubIRootDesigner">
            <summary>Тип заглушки System.ComponentModel.Design.IRootDesigner</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubIRootDesigner.#ctor">
            <summary>Инициализирует новый экземпляр type StubIRootDesigner</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Fakes.StubIRootDesigner.System#ComponentModel#Design#IDesigner#Component">
            <summary>Задает stub IDesigner.get_Component()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubIRootDesigner.ComponentGet">
            <summary>Задает stub IDesigner.get_Component()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubIRootDesigner.Dispose">
            <summary>Задает stub IDisposable.Dispose()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubIRootDesigner.DoDefaultAction">
            <summary>Задает stub IDesigner.DoDefaultAction()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubIRootDesigner.GetViewViewTechnology">
            <summary>Задает stub IRootDesigner.GetView(ViewTechnology technology)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubIRootDesigner.InitializeIComponent">
            <summary>Задает stub IDesigner.Initialize(IComponent component)</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Fakes.StubIRootDesigner.System#ComponentModel#Design#IRootDesigner#SupportedTechnologies">
            <summary>Задает stub IRootDesigner.get_SupportedTechnologies()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubIRootDesigner.SupportedTechnologiesGet">
            <summary>Задает stub IRootDesigner.get_SupportedTechnologies()</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubIRootDesigner.System#ComponentModel#Design#IDesigner#DoDefaultAction">
            <summary>Задает заглушка IDesigner.DoDefaultAction()</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubIRootDesigner.System#ComponentModel#Design#IDesigner#Initialize(System.ComponentModel.IComponent)">
            <summary>Задает заглушка IDesigner.Initialize(IComponent component)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubIRootDesigner.System#ComponentModel#Design#IRootDesigner#GetView(System.ComponentModel.Design.ViewTechnology)">
            <summary>Задает заглушка IRootDesigner.GetView(ViewTechnology technology)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubIRootDesigner.System#IDisposable#Dispose">
            <summary>Задает заглушка IDisposable.Dispose()</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Fakes.StubIRootDesigner.System#ComponentModel#Design#IDesigner#Verbs">
            <summary>Задает stub IDesigner.get_Verbs()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubIRootDesigner.VerbsGet">
            <summary>Задает stub IDesigner.get_Verbs()</summary>
        </member>
        <member name="T:System.ComponentModel.Design.Fakes.StubISelectionService">
            <summary>Тип заглушки System.ComponentModel.Design.ISelectionService</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubISelectionService.#ctor">
            <summary>Инициализирует новый экземпляр type StubISelectionService</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubISelectionService.GetComponentSelectedObject">
            <summary>Задает stub ISelectionService.GetComponentSelected(Object component)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubISelectionService.GetSelectedComponents">
            <summary>Задает stub ISelectionService.GetSelectedComponents()</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Fakes.StubISelectionService.System#ComponentModel#Design#ISelectionService#PrimarySelection">
            <summary>Задает stub ISelectionService.get_PrimarySelection()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubISelectionService.PrimarySelectionGet">
            <summary>Задает stub ISelectionService.get_PrimarySelection()</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Fakes.StubISelectionService.System#ComponentModel#Design#ISelectionService#SelectionCount">
            <summary>Задает stub ISelectionService.get_SelectionCount()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubISelectionService.SelectionCountGet">
            <summary>Задает stub ISelectionService.get_SelectionCount()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubISelectionService.SetSelectedComponentsICollection">
            <summary>Задает stub ISelectionService.SetSelectedComponents(ICollection components)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubISelectionService.SetSelectedComponentsICollectionSelectionTypes">
            <summary>Задает stub ISelectionService.SetSelectedComponents(ICollection components, SelectionTypes selectionType)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubISelectionService.System#ComponentModel#Design#ISelectionService#GetComponentSelected(System.Object)">
            <summary>Задает заглушка ISelectionService.GetComponentSelected(Object component)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubISelectionService.System#ComponentModel#Design#ISelectionService#GetSelectedComponents">
            <summary>Задает заглушка ISelectionService.GetSelectedComponents()</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubISelectionService.System#ComponentModel#Design#ISelectionService#SetSelectedComponents(System.Collections.ICollection)">
            <summary>Задает заглушка ISelectionService.SetSelectedComponents(ICollection components)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubISelectionService.System#ComponentModel#Design#ISelectionService#SetSelectedComponents(System.Collections.ICollection,System.ComponentModel.Design.SelectionTypes)">
            <summary>Задает заглушка ISelectionService.SetSelectedComponents(ICollection components, SelectionTypes selectionType)</summary>
        </member>
        <member name="T:System.ComponentModel.Design.Fakes.StubIServiceContainer">
            <summary>Тип заглушки System.ComponentModel.Design.IServiceContainer</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubIServiceContainer.#ctor">
            <summary>Инициализирует новый экземпляр type StubIServiceContainer</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubIServiceContainer.AddServiceTypeObject">
            <summary>Задает stub IServiceContainer.AddService(Type serviceType, Object serviceInstance)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubIServiceContainer.AddServiceTypeObjectBoolean">
            <summary>Задает stub IServiceContainer.AddService(Type serviceType, Object serviceInstance, Boolean promote)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubIServiceContainer.AddServiceTypeServiceCreatorCallback">
            <summary>Задает stub IServiceContainer.AddService(Type serviceType, ServiceCreatorCallback callback)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubIServiceContainer.AddServiceTypeServiceCreatorCallbackBoolean">
            <summary>Задает stub IServiceContainer.AddService(Type serviceType, ServiceCreatorCallback callback, Boolean promote)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubIServiceContainer.GetServiceType">
            <summary>Задает stub IServiceProvider.GetService(Type serviceType)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubIServiceContainer.RemoveServiceType">
            <summary>Задает stub IServiceContainer.RemoveService(Type serviceType)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubIServiceContainer.RemoveServiceTypeBoolean">
            <summary>Задает stub IServiceContainer.RemoveService(Type serviceType, Boolean promote)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubIServiceContainer.System#ComponentModel#Design#IServiceContainer#AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback)">
            <summary>Задает заглушка IServiceContainer.AddService(Type serviceType, ServiceCreatorCallback callback)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubIServiceContainer.System#ComponentModel#Design#IServiceContainer#AddService(System.Type,System.Object)">
            <summary>Задает заглушка IServiceContainer.AddService(Type serviceType, Object serviceInstance)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubIServiceContainer.System#ComponentModel#Design#IServiceContainer#AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback,System.Boolean)">
            <summary>Задает заглушка IServiceContainer.AddService(Type serviceType, ServiceCreatorCallback callback, Boolean promote)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubIServiceContainer.System#ComponentModel#Design#IServiceContainer#AddService(System.Type,System.Object,System.Boolean)">
            <summary>Задает заглушка IServiceContainer.AddService(Type serviceType, Object serviceInstance, Boolean promote)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubIServiceContainer.System#ComponentModel#Design#IServiceContainer#RemoveService(System.Type)">
            <summary>Задает заглушка IServiceContainer.RemoveService(Type serviceType)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubIServiceContainer.System#ComponentModel#Design#IServiceContainer#RemoveService(System.Type,System.Boolean)">
            <summary>Задает заглушка IServiceContainer.RemoveService(Type serviceType, Boolean promote)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubIServiceContainer.System#IServiceProvider#GetService(System.Type)">
            <summary>Задает заглушка IServiceProvider.GetService(Type serviceType)</summary>
        </member>
        <member name="T:System.ComponentModel.Design.Fakes.StubITreeDesigner">
            <summary>Тип заглушки System.ComponentModel.Design.ITreeDesigner</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubITreeDesigner.#ctor">
            <summary>Инициализирует новый экземпляр type StubITreeDesigner</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Fakes.StubITreeDesigner.System#ComponentModel#Design#ITreeDesigner#Children">
            <summary>Задает stub ITreeDesigner.get_Children()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubITreeDesigner.ChildrenGet">
            <summary>Задает stub ITreeDesigner.get_Children()</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Fakes.StubITreeDesigner.System#ComponentModel#Design#IDesigner#Component">
            <summary>Задает stub IDesigner.get_Component()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubITreeDesigner.ComponentGet">
            <summary>Задает stub IDesigner.get_Component()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubITreeDesigner.Dispose">
            <summary>Задает stub IDisposable.Dispose()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubITreeDesigner.DoDefaultAction">
            <summary>Задает stub IDesigner.DoDefaultAction()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubITreeDesigner.InitializeIComponent">
            <summary>Задает stub IDesigner.Initialize(IComponent component)</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Fakes.StubITreeDesigner.System#ComponentModel#Design#ITreeDesigner#Parent">
            <summary>Задает stub ITreeDesigner.get_Parent()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubITreeDesigner.ParentGet">
            <summary>Задает stub ITreeDesigner.get_Parent()</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubITreeDesigner.System#ComponentModel#Design#IDesigner#DoDefaultAction">
            <summary>Задает заглушка IDesigner.DoDefaultAction()</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubITreeDesigner.System#ComponentModel#Design#IDesigner#Initialize(System.ComponentModel.IComponent)">
            <summary>Задает заглушка IDesigner.Initialize(IComponent component)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubITreeDesigner.System#IDisposable#Dispose">
            <summary>Задает заглушка IDisposable.Dispose()</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Fakes.StubITreeDesigner.System#ComponentModel#Design#IDesigner#Verbs">
            <summary>Задает stub IDesigner.get_Verbs()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubITreeDesigner.VerbsGet">
            <summary>Задает stub IDesigner.get_Verbs()</summary>
        </member>
        <member name="T:System.ComponentModel.Design.Fakes.StubITypeDescriptorFilterService">
            <summary>Тип заглушки System.ComponentModel.Design.ITypeDescriptorFilterService</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubITypeDescriptorFilterService.#ctor">
            <summary>Инициализирует новый экземпляр type StubITypeDescriptorFilterService</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubITypeDescriptorFilterService.FilterAttributesIComponentIDictionary">
            <summary>Задает stub ITypeDescriptorFilterService.FilterAttributes(IComponent component, IDictionary attributes)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubITypeDescriptorFilterService.FilterEventsIComponentIDictionary">
            <summary>Задает stub ITypeDescriptorFilterService.FilterEvents(IComponent component, IDictionary events)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubITypeDescriptorFilterService.FilterPropertiesIComponentIDictionary">
            <summary>Задает stub ITypeDescriptorFilterService.FilterProperties(IComponent component, IDictionary properties)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubITypeDescriptorFilterService.System#ComponentModel#Design#ITypeDescriptorFilterService#FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)">
            <summary>Задает заглушка ITypeDescriptorFilterService.FilterAttributes(IComponent component, IDictionary attributes)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubITypeDescriptorFilterService.System#ComponentModel#Design#ITypeDescriptorFilterService#FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)">
            <summary>Задает заглушка ITypeDescriptorFilterService.FilterEvents(IComponent component, IDictionary events)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubITypeDescriptorFilterService.System#ComponentModel#Design#ITypeDescriptorFilterService#FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)">
            <summary>Задает заглушка ITypeDescriptorFilterService.FilterProperties(IComponent component, IDictionary properties)</summary>
        </member>
        <member name="T:System.ComponentModel.Design.Fakes.StubITypeDiscoveryService">
            <summary>Тип заглушки System.ComponentModel.Design.ITypeDiscoveryService</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubITypeDiscoveryService.#ctor">
            <summary>Инициализирует новый экземпляр type StubITypeDiscoveryService</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubITypeDiscoveryService.GetTypesTypeBoolean">
            <summary>Задает stub ITypeDiscoveryService.GetTypes(Type baseType, Boolean excludeGlobalTypes)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubITypeDiscoveryService.System#ComponentModel#Design#ITypeDiscoveryService#GetTypes(System.Type,System.Boolean)">
            <summary>Задает заглушка ITypeDiscoveryService.GetTypes(Type baseType, Boolean excludeGlobalTypes)</summary>
        </member>
        <member name="T:System.ComponentModel.Design.Fakes.StubITypeResolutionService">
            <summary>Тип заглушки System.ComponentModel.Design.ITypeResolutionService</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubITypeResolutionService.#ctor">
            <summary>Инициализирует новый экземпляр type StubITypeResolutionService</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubITypeResolutionService.GetAssemblyAssemblyName">
            <summary>Задает stub ITypeResolutionService.GetAssembly(AssemblyName name)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubITypeResolutionService.GetAssemblyAssemblyNameBoolean">
            <summary>Задает stub ITypeResolutionService.GetAssembly(AssemblyName name, Boolean throwOnError)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubITypeResolutionService.GetPathOfAssemblyAssemblyName">
            <summary>Задает stub ITypeResolutionService.GetPathOfAssembly(AssemblyName name)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubITypeResolutionService.GetTypeString">
            <summary>Задает stub ITypeResolutionService.GetType(String name)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubITypeResolutionService.GetTypeStringBoolean">
            <summary>Задает stub ITypeResolutionService.GetType(String name, Boolean throwOnError)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubITypeResolutionService.GetTypeStringBooleanBoolean">
            <summary>Задает stub ITypeResolutionService.GetType(String name, Boolean throwOnError, Boolean ignoreCase)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubITypeResolutionService.ReferenceAssemblyAssemblyName">
            <summary>Задает stub ITypeResolutionService.ReferenceAssembly(AssemblyName name)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubITypeResolutionService.System#ComponentModel#Design#ITypeResolutionService#GetAssembly(System.Reflection.AssemblyName)">
            <summary>Задает заглушка ITypeResolutionService.GetAssembly(AssemblyName name)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubITypeResolutionService.System#ComponentModel#Design#ITypeResolutionService#GetAssembly(System.Reflection.AssemblyName,System.Boolean)">
            <summary>Задает заглушка ITypeResolutionService.GetAssembly(AssemblyName name, Boolean throwOnError)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubITypeResolutionService.System#ComponentModel#Design#ITypeResolutionService#GetPathOfAssembly(System.Reflection.AssemblyName)">
            <summary>Задает заглушка ITypeResolutionService.GetPathOfAssembly(AssemblyName name)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubITypeResolutionService.System#ComponentModel#Design#ITypeResolutionService#GetType(System.String)">
            <summary>Задает заглушка ITypeResolutionService.GetType(String name)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubITypeResolutionService.System#ComponentModel#Design#ITypeResolutionService#GetType(System.String,System.Boolean)">
            <summary>Задает заглушка ITypeResolutionService.GetType(String name, Boolean throwOnError)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubITypeResolutionService.System#ComponentModel#Design#ITypeResolutionService#GetType(System.String,System.Boolean,System.Boolean)">
            <summary>Задает заглушка ITypeResolutionService.GetType(String name, Boolean throwOnError, Boolean ignoreCase)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubITypeResolutionService.System#ComponentModel#Design#ITypeResolutionService#ReferenceAssembly(System.Reflection.AssemblyName)">
            <summary>Задает заглушка ITypeResolutionService.ReferenceAssembly(AssemblyName name)</summary>
        </member>
        <member name="T:System.ComponentModel.Design.Fakes.StubMenuCommand">
            <summary>Тип заглушки System.ComponentModel.Design.MenuCommand</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubMenuCommand.#ctor(System.EventHandler,System.ComponentModel.Design.CommandID)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubMenuCommand.AttachBackingFieldToChecked">
            <summary>Присоединение делегатов для эмуляции StubMenuCommand.Checked как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubMenuCommand.AttachBackingFieldToEnabled">
            <summary>Присоединение делегатов для эмуляции StubMenuCommand.Enabled как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubMenuCommand.AttachBackingFieldToSupported">
            <summary>Присоединение делегатов для эмуляции StubMenuCommand.Supported как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubMenuCommand.AttachBackingFieldToVisible">
            <summary>Присоединение делегатов для эмуляции StubMenuCommand.Visible как свойства с резервным полем.</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Fakes.StubMenuCommand.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Fakes.StubMenuCommand.Checked">
            <summary>Задает stub MenuCommand.get_Checked()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubMenuCommand.CheckedGet">
            <summary>Задает stub MenuCommand.get_Checked()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubMenuCommand.CheckedSetBoolean">
            <summary>Задает stub MenuCommand.set_Checked(Boolean value)</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Fakes.StubMenuCommand.CommandID">
            <summary>Задает stub MenuCommand.get_CommandID()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubMenuCommand.CommandIDGet">
            <summary>Задает stub MenuCommand.get_CommandID()</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Fakes.StubMenuCommand.Enabled">
            <summary>Задает stub MenuCommand.get_Enabled()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubMenuCommand.EnabledGet">
            <summary>Задает stub MenuCommand.get_Enabled()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubMenuCommand.EnabledSetBoolean">
            <summary>Задает stub MenuCommand.set_Enabled(Boolean value)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubMenuCommand.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubMenuCommand</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Fakes.StubMenuCommand.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Fakes.StubMenuCommand.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubMenuCommand.Invoke">
            <summary>Задает заглушка MenuCommand.Invoke()</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubMenuCommand.Invoke(System.Object)">
            <summary>Задает заглушка MenuCommand.Invoke(Object arg)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubMenuCommand.Invoke01">
            <summary>Задает stub MenuCommand.Invoke()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubMenuCommand.InvokeObject">
            <summary>Задает stub MenuCommand.Invoke(Object arg)</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Fakes.StubMenuCommand.OleStatus">
            <summary>Задает stub MenuCommand.get_OleStatus()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubMenuCommand.OleStatusGet">
            <summary>Задает stub MenuCommand.get_OleStatus()</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubMenuCommand.OnCommandChanged(System.EventArgs)">
            <summary>Задает заглушка MenuCommand.OnCommandChanged(EventArgs e)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubMenuCommand.OnCommandChangedEventArgs">
            <summary>Задает stub MenuCommand.OnCommandChanged(EventArgs e)</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Fakes.StubMenuCommand.Properties">
            <summary>Задает stub MenuCommand.get_Properties()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubMenuCommand.PropertiesGet">
            <summary>Задает stub MenuCommand.get_Properties()</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Fakes.StubMenuCommand.Supported">
            <summary>Задает stub MenuCommand.get_Supported()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubMenuCommand.SupportedGet">
            <summary>Задает stub MenuCommand.get_Supported()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubMenuCommand.SupportedSetBoolean">
            <summary>Задает stub MenuCommand.set_Supported(Boolean value)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubMenuCommand.ToString">
            <summary>Задает заглушка MenuCommand.ToString()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubMenuCommand.ToString01">
            <summary>Задает stub MenuCommand.ToString()</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Fakes.StubMenuCommand.Visible">
            <summary>Задает stub MenuCommand.get_Visible()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubMenuCommand.VisibleGet">
            <summary>Задает stub MenuCommand.get_Visible()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubMenuCommand.VisibleSetBoolean">
            <summary>Задает stub MenuCommand.set_Visible(Boolean value)</summary>
        </member>
        <member name="T:System.ComponentModel.Design.Fakes.StubServiceContainer">
            <summary>Тип заглушки System.ComponentModel.Design.ServiceContainer</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubServiceContainer.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubServiceContainer.#ctor(System.IServiceProvider)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback,System.Boolean)">
            <summary>Задает заглушка ServiceContainer.AddService(Type serviceType, ServiceCreatorCallback callback, Boolean promote)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubServiceContainer.AddService(System.Type,System.Object,System.Boolean)">
            <summary>Задает заглушка ServiceContainer.AddService(Type serviceType, Object serviceInstance, Boolean promote)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubServiceContainer.AddServiceTypeObjectBoolean">
            <summary>Задает stub ServiceContainer.AddService(Type serviceType, Object serviceInstance, Boolean promote)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubServiceContainer.AddServiceTypeServiceCreatorCallbackBoolean">
            <summary>Задает stub ServiceContainer.AddService(Type serviceType, ServiceCreatorCallback callback, Boolean promote)</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Fakes.StubServiceContainer.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Fakes.StubServiceContainer.DefaultServices">
            <summary>Задает stub ServiceContainer.get_DefaultServices()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubServiceContainer.DefaultServicesGet">
            <summary>Задает stub ServiceContainer.get_DefaultServices()</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubServiceContainer.Dispose(System.Boolean)">
            <summary>Задает заглушка ServiceContainer.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubServiceContainer.DisposeBoolean">
            <summary>Задает stub ServiceContainer.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubServiceContainer.GetService(System.Type)">
            <summary>Задает заглушка ServiceContainer.GetService(Type serviceType)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubServiceContainer.GetServiceType">
            <summary>Задает stub ServiceContainer.GetService(Type serviceType)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubServiceContainer.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubServiceContainer</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Fakes.StubServiceContainer.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Fakes.StubServiceContainer.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubServiceContainer.RemoveService(System.Type,System.Boolean)">
            <summary>Задает заглушка ServiceContainer.RemoveService(Type serviceType, Boolean promote)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubServiceContainer.RemoveServiceTypeBoolean">
            <summary>Задает stub ServiceContainer.RemoveService(Type serviceType, Boolean promote)</summary>
        </member>
        <member name="T:System.ComponentModel.Design.Fakes.StubStandardCommands">
            <summary>Тип заглушки System.ComponentModel.Design.StandardCommands</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubStandardCommands.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Fakes.StubStandardCommands.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubStandardCommands.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubStandardCommands</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Fakes.StubStandardCommands.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Fakes.StubStandardCommands.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.ComponentModel.Design.Fakes.StubStandardToolWindows">
            <summary>Тип заглушки System.ComponentModel.Design.StandardToolWindows</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubStandardToolWindows.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Fakes.StubStandardToolWindows.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubStandardToolWindows.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubStandardToolWindows</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Fakes.StubStandardToolWindows.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Fakes.StubStandardToolWindows.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.ComponentModel.Design.Fakes.StubTypeDescriptionProviderService">
            <summary>Тип заглушки System.ComponentModel.Design.TypeDescriptionProviderService</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubTypeDescriptionProviderService.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Fakes.StubTypeDescriptionProviderService.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubTypeDescriptionProviderService.GetProvider(System.Object)">
            <summary>Задает заглушка TypeDescriptionProviderService.GetProvider(Object instance)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubTypeDescriptionProviderService.GetProvider(System.Type)">
            <summary>Задает заглушка TypeDescriptionProviderService.GetProvider(Type type)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubTypeDescriptionProviderService.GetProviderObject">
            <summary>Задает stub TypeDescriptionProviderService.GetProvider(Object instance)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Fakes.StubTypeDescriptionProviderService.GetProviderType">
            <summary>Задает stub TypeDescriptionProviderService.GetProvider(Type type)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Fakes.StubTypeDescriptionProviderService.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubTypeDescriptionProviderService</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Fakes.StubTypeDescriptionProviderService.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Fakes.StubTypeDescriptionProviderService.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.ComponentModel.Design.Serialization.Fakes.StubComponentSerializationService">
            <summary>Тип заглушки System.ComponentModel.Design.Serialization.ComponentSerializationService</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Serialization.Fakes.StubComponentSerializationService.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Serialization.Fakes.StubComponentSerializationService.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Serialization.Fakes.StubComponentSerializationService.CreateStore">
            <summary>Задает заглушка ComponentSerializationService.CreateStore()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Serialization.Fakes.StubComponentSerializationService.CreateStore01">
            <summary>Задает stub ComponentSerializationService.CreateStore()</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Serialization.Fakes.StubComponentSerializationService.Deserialize(System.ComponentModel.Design.Serialization.SerializationStore)">
            <summary>Задает заглушка ComponentSerializationService.Deserialize(SerializationStore store)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Serialization.Fakes.StubComponentSerializationService.Deserialize(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer)">
            <summary>Задает заглушка ComponentSerializationService.Deserialize(SerializationStore store, IContainer container)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Serialization.Fakes.StubComponentSerializationService.DeserializeSerializationStore">
            <summary>Задает stub ComponentSerializationService.Deserialize(SerializationStore store)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Serialization.Fakes.StubComponentSerializationService.DeserializeSerializationStoreIContainer">
            <summary>Задает stub ComponentSerializationService.Deserialize(SerializationStore store, IContainer container)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Serialization.Fakes.StubComponentSerializationService.DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer,System.Boolean,System.Boolean)">
            <summary>Задает заглушка ComponentSerializationService.DeserializeTo(SerializationStore store, IContainer container, Boolean validateRecycledTypes, Boolean applyDefaults)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Serialization.Fakes.StubComponentSerializationService.DeserializeToSerializationStoreIContainerBooleanBoolean">
            <summary>Задает stub ComponentSerializationService.DeserializeTo(SerializationStore store, IContainer container, Boolean validateRecycledTypes, Boolean applyDefaults)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Serialization.Fakes.StubComponentSerializationService.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubComponentSerializationService</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Serialization.Fakes.StubComponentSerializationService.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Serialization.Fakes.StubComponentSerializationService.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Serialization.Fakes.StubComponentSerializationService.LoadStore(System.IO.Stream)">
            <summary>Задает заглушка ComponentSerializationService.LoadStore(Stream stream)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Serialization.Fakes.StubComponentSerializationService.LoadStoreStream">
            <summary>Задает stub ComponentSerializationService.LoadStore(Stream stream)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Serialization.Fakes.StubComponentSerializationService.Serialize(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)">
            <summary>Задает заглушка ComponentSerializationService.Serialize(SerializationStore store, Object value)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Serialization.Fakes.StubComponentSerializationService.SerializeAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)">
            <summary>Задает заглушка ComponentSerializationService.SerializeAbsolute(SerializationStore store, Object value)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Serialization.Fakes.StubComponentSerializationService.SerializeAbsoluteSerializationStoreObject">
            <summary>Задает stub ComponentSerializationService.SerializeAbsolute(SerializationStore store, Object value)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Serialization.Fakes.StubComponentSerializationService.SerializeMember(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)">
            <summary>Задает заглушка ComponentSerializationService.SerializeMember(SerializationStore store, Object owningObject, MemberDescriptor member)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Serialization.Fakes.StubComponentSerializationService.SerializeMemberAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)">
            <summary>Задает заглушка ComponentSerializationService.SerializeMemberAbsolute(SerializationStore store, Object owningObject, MemberDescriptor member)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Serialization.Fakes.StubComponentSerializationService.SerializeMemberAbsoluteSerializationStoreObjectMemberDescriptor">
            <summary>Задает stub ComponentSerializationService.SerializeMemberAbsolute(SerializationStore store, Object owningObject, MemberDescriptor member)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Serialization.Fakes.StubComponentSerializationService.SerializeMemberSerializationStoreObjectMemberDescriptor">
            <summary>Задает stub ComponentSerializationService.SerializeMember(SerializationStore store, Object owningObject, MemberDescriptor member)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Serialization.Fakes.StubComponentSerializationService.SerializeSerializationStoreObject">
            <summary>Задает stub ComponentSerializationService.Serialize(SerializationStore store, Object value)</summary>
        </member>
        <member name="T:System.ComponentModel.Design.Serialization.Fakes.StubDesignerLoader">
            <summary>Тип заглушки System.ComponentModel.Design.Serialization.DesignerLoader</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Serialization.Fakes.StubDesignerLoader.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Serialization.Fakes.StubDesignerLoader.BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)">
            <summary>Задает заглушка DesignerLoader.BeginLoad(IDesignerLoaderHost host)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Serialization.Fakes.StubDesignerLoader.BeginLoadIDesignerLoaderHost">
            <summary>Задает stub DesignerLoader.BeginLoad(IDesignerLoaderHost host)</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Serialization.Fakes.StubDesignerLoader.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Serialization.Fakes.StubDesignerLoader.Dispose">
            <summary>Задает заглушка DesignerLoader.Dispose()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Serialization.Fakes.StubDesignerLoader.Dispose01">
            <summary>Задает stub DesignerLoader.Dispose()</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Serialization.Fakes.StubDesignerLoader.Flush">
            <summary>Задает заглушка DesignerLoader.Flush()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Serialization.Fakes.StubDesignerLoader.Flush01">
            <summary>Задает stub DesignerLoader.Flush()</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Serialization.Fakes.StubDesignerLoader.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubDesignerLoader</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Serialization.Fakes.StubDesignerLoader.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Serialization.Fakes.StubDesignerLoader.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Serialization.Fakes.StubDesignerLoader.Loading">
            <summary>Задает stub DesignerLoader.get_Loading()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Serialization.Fakes.StubDesignerLoader.LoadingGet">
            <summary>Задает stub DesignerLoader.get_Loading()</summary>
        </member>
        <member name="T:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderHost">
            <summary>Тип заглушки System.ComponentModel.Design.Serialization.IDesignerLoaderHost</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderHost.#ctor">
            <summary>Инициализирует новый экземпляр type StubIDesignerLoaderHost</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderHost.Activate">
            <summary>Задает stub IDesignerHost.Activate()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderHost.AddServiceTypeObject">
            <summary>Задает stub IServiceContainer.AddService(Type serviceType, Object serviceInstance)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderHost.AddServiceTypeObjectBoolean">
            <summary>Задает stub IServiceContainer.AddService(Type serviceType, Object serviceInstance, Boolean promote)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderHost.AddServiceTypeServiceCreatorCallback">
            <summary>Задает stub IServiceContainer.AddService(Type serviceType, ServiceCreatorCallback callback)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderHost.AddServiceTypeServiceCreatorCallbackBoolean">
            <summary>Задает stub IServiceContainer.AddService(Type serviceType, ServiceCreatorCallback callback, Boolean promote)</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderHost.System#ComponentModel#Design#IDesignerHost#Container">
            <summary>Задает stub IDesignerHost.get_Container()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderHost.ContainerGet">
            <summary>Задает stub IDesignerHost.get_Container()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderHost.CreateComponentType">
            <summary>Задает stub IDesignerHost.CreateComponent(Type componentClass)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderHost.CreateComponentTypeString">
            <summary>Задает stub IDesignerHost.CreateComponent(Type componentClass, String name)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderHost.CreateTransaction">
            <summary>Задает stub IDesignerHost.CreateTransaction()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderHost.CreateTransactionString">
            <summary>Задает stub IDesignerHost.CreateTransaction(String description)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderHost.DestroyComponentIComponent">
            <summary>Задает stub IDesignerHost.DestroyComponent(IComponent component)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderHost.EndLoadStringBooleanICollection">
            <summary>Задает stub IDesignerLoaderHost.EndLoad(String baseClassName, Boolean successful, ICollection errorCollection)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderHost.GetDesignerIComponent">
            <summary>Задает stub IDesignerHost.GetDesigner(IComponent component)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderHost.GetServiceType">
            <summary>Задает stub IServiceProvider.GetService(Type serviceType)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderHost.GetTypeString">
            <summary>Задает stub IDesignerHost.GetType(String typeName)</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderHost.System#ComponentModel#Design#IDesignerHost#InTransaction">
            <summary>Задает stub IDesignerHost.get_InTransaction()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderHost.InTransactionGet">
            <summary>Задает stub IDesignerHost.get_InTransaction()</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderHost.System#ComponentModel#Design#IDesignerHost#Loading">
            <summary>Задает stub IDesignerHost.get_Loading()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderHost.LoadingGet">
            <summary>Задает stub IDesignerHost.get_Loading()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderHost.Reload">
            <summary>Задает stub IDesignerLoaderHost.Reload()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderHost.RemoveServiceType">
            <summary>Задает stub IServiceContainer.RemoveService(Type serviceType)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderHost.RemoveServiceTypeBoolean">
            <summary>Задает stub IServiceContainer.RemoveService(Type serviceType, Boolean promote)</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderHost.System#ComponentModel#Design#IDesignerHost#RootComponent">
            <summary>Задает stub IDesignerHost.get_RootComponent()</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderHost.System#ComponentModel#Design#IDesignerHost#RootComponentClassName">
            <summary>Задает stub IDesignerHost.get_RootComponentClassName()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderHost.RootComponentClassNameGet">
            <summary>Задает stub IDesignerHost.get_RootComponentClassName()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderHost.RootComponentGet">
            <summary>Задает stub IDesignerHost.get_RootComponent()</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderHost.System#ComponentModel#Design#IDesignerHost#Activate">
            <summary>Задает заглушка IDesignerHost.Activate()</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderHost.System#ComponentModel#Design#IDesignerHost#CreateComponent(System.Type)">
            <summary>Задает заглушка IDesignerHost.CreateComponent(Type componentClass)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderHost.System#ComponentModel#Design#IDesignerHost#CreateComponent(System.Type,System.String)">
            <summary>Задает заглушка IDesignerHost.CreateComponent(Type componentClass, String name)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderHost.System#ComponentModel#Design#IDesignerHost#CreateTransaction">
            <summary>Задает заглушка IDesignerHost.CreateTransaction()</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderHost.System#ComponentModel#Design#IDesignerHost#CreateTransaction(System.String)">
            <summary>Задает заглушка IDesignerHost.CreateTransaction(String description)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderHost.System#ComponentModel#Design#IDesignerHost#DestroyComponent(System.ComponentModel.IComponent)">
            <summary>Задает заглушка IDesignerHost.DestroyComponent(IComponent component)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderHost.System#ComponentModel#Design#IDesignerHost#GetDesigner(System.ComponentModel.IComponent)">
            <summary>Задает заглушка IDesignerHost.GetDesigner(IComponent component)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderHost.System#ComponentModel#Design#IDesignerHost#GetType(System.String)">
            <summary>Задает заглушка IDesignerHost.GetType(String typeName)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderHost.System#ComponentModel#Design#IServiceContainer#AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback)">
            <summary>Задает заглушка IServiceContainer.AddService(Type serviceType, ServiceCreatorCallback callback)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderHost.System#ComponentModel#Design#IServiceContainer#AddService(System.Type,System.Object)">
            <summary>Задает заглушка IServiceContainer.AddService(Type serviceType, Object serviceInstance)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderHost.System#ComponentModel#Design#IServiceContainer#AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback,System.Boolean)">
            <summary>Задает заглушка IServiceContainer.AddService(Type serviceType, ServiceCreatorCallback callback, Boolean promote)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderHost.System#ComponentModel#Design#IServiceContainer#AddService(System.Type,System.Object,System.Boolean)">
            <summary>Задает заглушка IServiceContainer.AddService(Type serviceType, Object serviceInstance, Boolean promote)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderHost.System#ComponentModel#Design#IServiceContainer#RemoveService(System.Type)">
            <summary>Задает заглушка IServiceContainer.RemoveService(Type serviceType)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderHost.System#ComponentModel#Design#IServiceContainer#RemoveService(System.Type,System.Boolean)">
            <summary>Задает заглушка IServiceContainer.RemoveService(Type serviceType, Boolean promote)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderHost.System#ComponentModel#Design#Serialization#IDesignerLoaderHost#EndLoad(System.String,System.Boolean,System.Collections.ICollection)">
            <summary>Задает заглушка IDesignerLoaderHost.EndLoad(String baseClassName, Boolean successful, ICollection errorCollection)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderHost.System#ComponentModel#Design#Serialization#IDesignerLoaderHost#Reload">
            <summary>Задает заглушка IDesignerLoaderHost.Reload()</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderHost.System#IServiceProvider#GetService(System.Type)">
            <summary>Задает заглушка IServiceProvider.GetService(Type serviceType)</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderHost.System#ComponentModel#Design#IDesignerHost#TransactionDescription">
            <summary>Задает stub IDesignerHost.get_TransactionDescription()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderHost.TransactionDescriptionGet">
            <summary>Задает stub IDesignerHost.get_TransactionDescription()</summary>
        </member>
        <member name="T:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderHost2">
            <summary>Тип заглушки System.ComponentModel.Design.Serialization.IDesignerLoaderHost2</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderHost2.#ctor">
            <summary>Инициализирует новый экземпляр type StubIDesignerLoaderHost2</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderHost2.Activate">
            <summary>Задает stub IDesignerHost.Activate()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderHost2.AddServiceTypeObject">
            <summary>Задает stub IServiceContainer.AddService(Type serviceType, Object serviceInstance)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderHost2.AddServiceTypeObjectBoolean">
            <summary>Задает stub IServiceContainer.AddService(Type serviceType, Object serviceInstance, Boolean promote)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderHost2.AddServiceTypeServiceCreatorCallback">
            <summary>Задает stub IServiceContainer.AddService(Type serviceType, ServiceCreatorCallback callback)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderHost2.AddServiceTypeServiceCreatorCallbackBoolean">
            <summary>Задает stub IServiceContainer.AddService(Type serviceType, ServiceCreatorCallback callback, Boolean promote)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderHost2.AttachBackingFieldToCanReloadWithErrors">
            <summary>Присоединение делегатов для эмуляции StubIDesignerLoaderHost2.CanReloadWithErrors как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderHost2.AttachBackingFieldToIgnoreErrorsDuringReload">
            <summary>Присоединение делегатов для эмуляции StubIDesignerLoaderHost2.IgnoreErrorsDuringReload как свойства с резервным полем.</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderHost2.System#ComponentModel#Design#Serialization#IDesignerLoaderHost2#CanReloadWithErrors">
            <summary>Задает stub IDesignerLoaderHost2.get_CanReloadWithErrors()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderHost2.CanReloadWithErrorsGet">
            <summary>Задает stub IDesignerLoaderHost2.get_CanReloadWithErrors()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderHost2.CanReloadWithErrorsSetBoolean">
            <summary>Задает stub IDesignerLoaderHost2.set_CanReloadWithErrors(Boolean value)</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderHost2.System#ComponentModel#Design#IDesignerHost#Container">
            <summary>Задает stub IDesignerHost.get_Container()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderHost2.ContainerGet">
            <summary>Задает stub IDesignerHost.get_Container()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderHost2.CreateComponentType">
            <summary>Задает stub IDesignerHost.CreateComponent(Type componentClass)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderHost2.CreateComponentTypeString">
            <summary>Задает stub IDesignerHost.CreateComponent(Type componentClass, String name)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderHost2.CreateTransaction">
            <summary>Задает stub IDesignerHost.CreateTransaction()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderHost2.CreateTransactionString">
            <summary>Задает stub IDesignerHost.CreateTransaction(String description)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderHost2.DestroyComponentIComponent">
            <summary>Задает stub IDesignerHost.DestroyComponent(IComponent component)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderHost2.EndLoadStringBooleanICollection">
            <summary>Задает stub IDesignerLoaderHost.EndLoad(String baseClassName, Boolean successful, ICollection errorCollection)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderHost2.GetDesignerIComponent">
            <summary>Задает stub IDesignerHost.GetDesigner(IComponent component)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderHost2.GetServiceType">
            <summary>Задает stub IServiceProvider.GetService(Type serviceType)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderHost2.GetTypeString">
            <summary>Задает stub IDesignerHost.GetType(String typeName)</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderHost2.System#ComponentModel#Design#Serialization#IDesignerLoaderHost2#IgnoreErrorsDuringReload">
            <summary>Задает stub IDesignerLoaderHost2.get_IgnoreErrorsDuringReload()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderHost2.IgnoreErrorsDuringReloadGet">
            <summary>Задает stub IDesignerLoaderHost2.get_IgnoreErrorsDuringReload()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderHost2.IgnoreErrorsDuringReloadSetBoolean">
            <summary>Задает stub IDesignerLoaderHost2.set_IgnoreErrorsDuringReload(Boolean value)</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderHost2.System#ComponentModel#Design#IDesignerHost#InTransaction">
            <summary>Задает stub IDesignerHost.get_InTransaction()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderHost2.InTransactionGet">
            <summary>Задает stub IDesignerHost.get_InTransaction()</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderHost2.System#ComponentModel#Design#IDesignerHost#Loading">
            <summary>Задает stub IDesignerHost.get_Loading()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderHost2.LoadingGet">
            <summary>Задает stub IDesignerHost.get_Loading()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderHost2.Reload">
            <summary>Задает stub IDesignerLoaderHost.Reload()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderHost2.RemoveServiceType">
            <summary>Задает stub IServiceContainer.RemoveService(Type serviceType)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderHost2.RemoveServiceTypeBoolean">
            <summary>Задает stub IServiceContainer.RemoveService(Type serviceType, Boolean promote)</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderHost2.System#ComponentModel#Design#IDesignerHost#RootComponent">
            <summary>Задает stub IDesignerHost.get_RootComponent()</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderHost2.System#ComponentModel#Design#IDesignerHost#RootComponentClassName">
            <summary>Задает stub IDesignerHost.get_RootComponentClassName()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderHost2.RootComponentClassNameGet">
            <summary>Задает stub IDesignerHost.get_RootComponentClassName()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderHost2.RootComponentGet">
            <summary>Задает stub IDesignerHost.get_RootComponent()</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderHost2.System#ComponentModel#Design#IDesignerHost#Activate">
            <summary>Задает заглушка IDesignerHost.Activate()</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderHost2.System#ComponentModel#Design#IDesignerHost#CreateComponent(System.Type)">
            <summary>Задает заглушка IDesignerHost.CreateComponent(Type componentClass)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderHost2.System#ComponentModel#Design#IDesignerHost#CreateComponent(System.Type,System.String)">
            <summary>Задает заглушка IDesignerHost.CreateComponent(Type componentClass, String name)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderHost2.System#ComponentModel#Design#IDesignerHost#CreateTransaction">
            <summary>Задает заглушка IDesignerHost.CreateTransaction()</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderHost2.System#ComponentModel#Design#IDesignerHost#CreateTransaction(System.String)">
            <summary>Задает заглушка IDesignerHost.CreateTransaction(String description)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderHost2.System#ComponentModel#Design#IDesignerHost#DestroyComponent(System.ComponentModel.IComponent)">
            <summary>Задает заглушка IDesignerHost.DestroyComponent(IComponent component)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderHost2.System#ComponentModel#Design#IDesignerHost#GetDesigner(System.ComponentModel.IComponent)">
            <summary>Задает заглушка IDesignerHost.GetDesigner(IComponent component)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderHost2.System#ComponentModel#Design#IDesignerHost#GetType(System.String)">
            <summary>Задает заглушка IDesignerHost.GetType(String typeName)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderHost2.System#ComponentModel#Design#IServiceContainer#AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback)">
            <summary>Задает заглушка IServiceContainer.AddService(Type serviceType, ServiceCreatorCallback callback)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderHost2.System#ComponentModel#Design#IServiceContainer#AddService(System.Type,System.Object)">
            <summary>Задает заглушка IServiceContainer.AddService(Type serviceType, Object serviceInstance)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderHost2.System#ComponentModel#Design#IServiceContainer#AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback,System.Boolean)">
            <summary>Задает заглушка IServiceContainer.AddService(Type serviceType, ServiceCreatorCallback callback, Boolean promote)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderHost2.System#ComponentModel#Design#IServiceContainer#AddService(System.Type,System.Object,System.Boolean)">
            <summary>Задает заглушка IServiceContainer.AddService(Type serviceType, Object serviceInstance, Boolean promote)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderHost2.System#ComponentModel#Design#IServiceContainer#RemoveService(System.Type)">
            <summary>Задает заглушка IServiceContainer.RemoveService(Type serviceType)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderHost2.System#ComponentModel#Design#IServiceContainer#RemoveService(System.Type,System.Boolean)">
            <summary>Задает заглушка IServiceContainer.RemoveService(Type serviceType, Boolean promote)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderHost2.System#ComponentModel#Design#Serialization#IDesignerLoaderHost#EndLoad(System.String,System.Boolean,System.Collections.ICollection)">
            <summary>Задает заглушка IDesignerLoaderHost.EndLoad(String baseClassName, Boolean successful, ICollection errorCollection)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderHost2.System#ComponentModel#Design#Serialization#IDesignerLoaderHost#Reload">
            <summary>Задает заглушка IDesignerLoaderHost.Reload()</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderHost2.System#IServiceProvider#GetService(System.Type)">
            <summary>Задает заглушка IServiceProvider.GetService(Type serviceType)</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderHost2.System#ComponentModel#Design#IDesignerHost#TransactionDescription">
            <summary>Задает stub IDesignerHost.get_TransactionDescription()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderHost2.TransactionDescriptionGet">
            <summary>Задает stub IDesignerHost.get_TransactionDescription()</summary>
        </member>
        <member name="T:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderService">
            <summary>Тип заглушки System.ComponentModel.Design.Serialization.IDesignerLoaderService</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderService.#ctor">
            <summary>Инициализирует новый экземпляр type StubIDesignerLoaderService</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderService.AddLoadDependency">
            <summary>Задает stub IDesignerLoaderService.AddLoadDependency()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderService.DependentLoadCompleteBooleanICollection">
            <summary>Задает stub IDesignerLoaderService.DependentLoadComplete(Boolean successful, ICollection errorCollection)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderService.Reload">
            <summary>Задает stub IDesignerLoaderService.Reload()</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderService.System#ComponentModel#Design#Serialization#IDesignerLoaderService#AddLoadDependency">
            <summary>Задает заглушка IDesignerLoaderService.AddLoadDependency()</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderService.System#ComponentModel#Design#Serialization#IDesignerLoaderService#DependentLoadComplete(System.Boolean,System.Collections.ICollection)">
            <summary>Задает заглушка IDesignerLoaderService.DependentLoadComplete(Boolean successful, ICollection errorCollection)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerLoaderService.System#ComponentModel#Design#Serialization#IDesignerLoaderService#Reload">
            <summary>Задает заглушка IDesignerLoaderService.Reload()</summary>
        </member>
        <member name="T:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerSerializationManager">
            <summary>Тип заглушки System.ComponentModel.Design.Serialization.IDesignerSerializationManager</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerSerializationManager.#ctor">
            <summary>Инициализирует новый экземпляр type StubIDesignerSerializationManager</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerSerializationManager.AddSerializationProviderIDesignerSerializationProvider">
            <summary>Задает stub IDesignerSerializationManager.AddSerializationProvider(IDesignerSerializationProvider provider)</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Context">
            <summary>Задает stub IDesignerSerializationManager.get_Context()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerSerializationManager.ContextGet">
            <summary>Задает stub IDesignerSerializationManager.get_Context()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerSerializationManager.CreateInstanceTypeICollectionStringBoolean">
            <summary>Задает stub IDesignerSerializationManager.CreateInstance(Type type, ICollection arguments, String name, Boolean addToContainer)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerSerializationManager.GetInstanceString">
            <summary>Задает stub IDesignerSerializationManager.GetInstance(String name)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerSerializationManager.GetNameObject">
            <summary>Задает stub IDesignerSerializationManager.GetName(Object value)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerSerializationManager.GetSerializerTypeType">
            <summary>Задает stub IDesignerSerializationManager.GetSerializer(Type objectType, Type serializerType)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerSerializationManager.GetServiceType">
            <summary>Задает stub IServiceProvider.GetService(Type serviceType)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerSerializationManager.GetTypeString">
            <summary>Задает stub IDesignerSerializationManager.GetType(String typeName)</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Properties">
            <summary>Задает stub IDesignerSerializationManager.get_Properties()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerSerializationManager.PropertiesGet">
            <summary>Задает stub IDesignerSerializationManager.get_Properties()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerSerializationManager.RemoveSerializationProviderIDesignerSerializationProvider">
            <summary>Задает stub IDesignerSerializationManager.RemoveSerializationProvider(IDesignerSerializationProvider provider)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerSerializationManager.ReportErrorObject">
            <summary>Задает stub IDesignerSerializationManager.ReportError(Object errorInformation)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerSerializationManager.SetNameObjectString">
            <summary>Задает stub IDesignerSerializationManager.SetName(Object instance, String name)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)">
            <summary>Задает заглушка IDesignerSerializationManager.AddSerializationProvider(IDesignerSerializationProvider provider)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)">
            <summary>Задает заглушка IDesignerSerializationManager.CreateInstance(Type type, ICollection arguments, String name, Boolean addToContainer)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetInstance(System.String)">
            <summary>Задает заглушка IDesignerSerializationManager.GetInstance(String name)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)">
            <summary>Задает заглушка IDesignerSerializationManager.GetName(Object value)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetSerializer(System.Type,System.Type)">
            <summary>Задает заглушка IDesignerSerializationManager.GetSerializer(Type objectType, Type serializerType)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetType(System.String)">
            <summary>Задает заглушка IDesignerSerializationManager.GetType(String typeName)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#RemoveSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)">
            <summary>Задает заглушка IDesignerSerializationManager.RemoveSerializationProvider(IDesignerSerializationProvider provider)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#ReportError(System.Object)">
            <summary>Задает заглушка IDesignerSerializationManager.ReportError(Object errorInformation)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SetName(System.Object,System.String)">
            <summary>Задает заглушка IDesignerSerializationManager.SetName(Object instance, String name)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerSerializationManager.System#IServiceProvider#GetService(System.Type)">
            <summary>Задает заглушка IServiceProvider.GetService(Type serviceType)</summary>
        </member>
        <member name="T:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerSerializationProvider">
            <summary>Тип заглушки System.ComponentModel.Design.Serialization.IDesignerSerializationProvider</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerSerializationProvider.#ctor">
            <summary>Инициализирует новый экземпляр type StubIDesignerSerializationProvider</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerSerializationProvider.GetSerializerIDesignerSerializationManagerObjectTypeType">
            <summary>Задает stub IDesignerSerializationProvider.GetSerializer(IDesignerSerializationManager manager, Object currentSerializer, Type objectType, Type serializerType)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerSerializationProvider.System#ComponentModel#Design#Serialization#IDesignerSerializationProvider#GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Type,System.Type)">
            <summary>Задает заглушка IDesignerSerializationProvider.GetSerializer(IDesignerSerializationManager manager, Object currentSerializer, Type objectType, Type serializerType)</summary>
        </member>
        <member name="T:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerSerializationService">
            <summary>Тип заглушки System.ComponentModel.Design.Serialization.IDesignerSerializationService</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerSerializationService.#ctor">
            <summary>Инициализирует новый экземпляр type StubIDesignerSerializationService</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerSerializationService.DeserializeObject">
            <summary>Задает stub IDesignerSerializationService.Deserialize(Object serializationData)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerSerializationService.SerializeICollection">
            <summary>Задает stub IDesignerSerializationService.Serialize(ICollection objects)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerSerializationService.System#ComponentModel#Design#Serialization#IDesignerSerializationService#Deserialize(System.Object)">
            <summary>Задает заглушка IDesignerSerializationService.Deserialize(Object serializationData)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Serialization.Fakes.StubIDesignerSerializationService.System#ComponentModel#Design#Serialization#IDesignerSerializationService#Serialize(System.Collections.ICollection)">
            <summary>Задает заглушка IDesignerSerializationService.Serialize(ICollection objects)</summary>
        </member>
        <member name="T:System.ComponentModel.Design.Serialization.Fakes.StubINameCreationService">
            <summary>Тип заглушки System.ComponentModel.Design.Serialization.INameCreationService</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Serialization.Fakes.StubINameCreationService.#ctor">
            <summary>Инициализирует новый экземпляр type StubINameCreationService</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Serialization.Fakes.StubINameCreationService.CreateNameIContainerType">
            <summary>Задает stub INameCreationService.CreateName(IContainer container, Type dataType)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Serialization.Fakes.StubINameCreationService.IsValidNameString">
            <summary>Задает stub INameCreationService.IsValidName(String name)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Serialization.Fakes.StubINameCreationService.System#ComponentModel#Design#Serialization#INameCreationService#CreateName(System.ComponentModel.IContainer,System.Type)">
            <summary>Задает заглушка INameCreationService.CreateName(IContainer container, Type dataType)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Serialization.Fakes.StubINameCreationService.System#ComponentModel#Design#Serialization#INameCreationService#IsValidName(System.String)">
            <summary>Задает заглушка INameCreationService.IsValidName(String name)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Serialization.Fakes.StubINameCreationService.System#ComponentModel#Design#Serialization#INameCreationService#ValidateName(System.String)">
            <summary>Задает заглушка INameCreationService.ValidateName(String name)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Serialization.Fakes.StubINameCreationService.ValidateNameString">
            <summary>Задает stub INameCreationService.ValidateName(String name)</summary>
        </member>
        <member name="T:System.ComponentModel.Design.Serialization.Fakes.StubMemberRelationshipService">
            <summary>Тип заглушки System.ComponentModel.Design.Serialization.MemberRelationshipService</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Serialization.Fakes.StubMemberRelationshipService.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Serialization.Fakes.StubMemberRelationshipService.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Serialization.Fakes.StubMemberRelationshipService.GetRelationship(System.ComponentModel.Design.Serialization.MemberRelationship)">
            <summary>Задает заглушка MemberRelationshipService.GetRelationship(MemberRelationship source)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Serialization.Fakes.StubMemberRelationshipService.GetRelationshipMemberRelationship">
            <summary>Задает stub MemberRelationshipService.GetRelationship(MemberRelationship source)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Serialization.Fakes.StubMemberRelationshipService.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubMemberRelationshipService</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Serialization.Fakes.StubMemberRelationshipService.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Serialization.Fakes.StubMemberRelationshipService.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Serialization.Fakes.StubMemberRelationshipService.SetRelationship(System.ComponentModel.Design.Serialization.MemberRelationship,System.ComponentModel.Design.Serialization.MemberRelationship)">
            <summary>Задает заглушка MemberRelationshipService.SetRelationship(MemberRelationship source, MemberRelationship relationship)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Serialization.Fakes.StubMemberRelationshipService.SetRelationshipMemberRelationshipMemberRelationship">
            <summary>Задает stub MemberRelationshipService.SetRelationship(MemberRelationship source, MemberRelationship relationship)</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Serialization.Fakes.StubMemberRelationshipService.SupportsRelationship(System.ComponentModel.Design.Serialization.MemberRelationship,System.ComponentModel.Design.Serialization.MemberRelationship)">
            <summary>Задает заглушка MemberRelationshipService.SupportsRelationship(MemberRelationship source, MemberRelationship relationship)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Serialization.Fakes.StubMemberRelationshipService.SupportsRelationshipMemberRelationshipMemberRelationship">
            <summary>Задает stub MemberRelationshipService.SupportsRelationship(MemberRelationship source, MemberRelationship relationship)</summary>
        </member>
        <member name="T:System.ComponentModel.Design.Serialization.Fakes.StubResolveNameEventArgs">
            <summary>Тип заглушки System.ComponentModel.Design.Serialization.ResolveNameEventArgs</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Serialization.Fakes.StubResolveNameEventArgs.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Serialization.Fakes.StubResolveNameEventArgs.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Serialization.Fakes.StubResolveNameEventArgs.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubResolveNameEventArgs</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Serialization.Fakes.StubResolveNameEventArgs.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Serialization.Fakes.StubResolveNameEventArgs.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.ComponentModel.Design.Serialization.Fakes.StubSerializationStore">
            <summary>Тип заглушки System.ComponentModel.Design.Serialization.SerializationStore</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Serialization.Fakes.StubSerializationStore.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Serialization.Fakes.StubSerializationStore.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Serialization.Fakes.StubSerializationStore.Close">
            <summary>Задает заглушка SerializationStore.Close()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Serialization.Fakes.StubSerializationStore.Close01">
            <summary>Задает stub SerializationStore.Close()</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Serialization.Fakes.StubSerializationStore.Dispose(System.Boolean)">
            <summary>Задает заглушка SerializationStore.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Serialization.Fakes.StubSerializationStore.DisposeBoolean">
            <summary>Задает stub SerializationStore.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Serialization.Fakes.StubSerializationStore.Errors">
            <summary>Задает stub SerializationStore.get_Errors()</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Serialization.Fakes.StubSerializationStore.ErrorsGet">
            <summary>Задает stub SerializationStore.get_Errors()</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Serialization.Fakes.StubSerializationStore.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubSerializationStore</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Serialization.Fakes.StubSerializationStore.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Design.Serialization.Fakes.StubSerializationStore.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.ComponentModel.Design.Serialization.Fakes.StubSerializationStore.Save(System.IO.Stream)">
            <summary>Задает заглушка SerializationStore.Save(Stream stream)</summary>
        </member>
        <member name="F:System.ComponentModel.Design.Serialization.Fakes.StubSerializationStore.SaveStream">
            <summary>Задает stub SerializationStore.Save(Stream stream)</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.StubAddingNewEventArgs">
            <summary>Тип заглушки System.ComponentModel.AddingNewEventArgs</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubAddingNewEventArgs.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubAddingNewEventArgs.#ctor(System.Object)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubAddingNewEventArgs.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubAddingNewEventArgs.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubAddingNewEventArgs</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubAddingNewEventArgs.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubAddingNewEventArgs.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.StubArrayConverter">
            <summary>Тип заглушки System.ComponentModel.ArrayConverter</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubArrayConverter.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubArrayConverter.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubArrayConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>Задает заглушка TypeConverter.CanConvertFrom(ITypeDescriptorContext context, Type sourceType)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubArrayConverter.CanConvertFromITypeDescriptorContextType">
            <summary>Задает stub TypeConverter.CanConvertFrom(ITypeDescriptorContext context, Type sourceType)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubArrayConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>Задает заглушка TypeConverter.CanConvertTo(ITypeDescriptorContext context, Type destinationType)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubArrayConverter.CanConvertToITypeDescriptorContextType">
            <summary>Задает stub TypeConverter.CanConvertTo(ITypeDescriptorContext context, Type destinationType)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubArrayConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>Задает заглушка TypeConverter.ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, Object value)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubArrayConverter.ConvertFromITypeDescriptorContextCultureInfoObject">
            <summary>Задает stub TypeConverter.ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, Object value)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubArrayConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>Задает заглушка ArrayConverter.ConvertTo(ITypeDescriptorContext context, CultureInfo culture, Object value, Type destinationType)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubArrayConverter.ConvertToITypeDescriptorContextCultureInfoObjectType">
            <summary>Задает stub ArrayConverter.ConvertTo(ITypeDescriptorContext context, CultureInfo culture, Object value, Type destinationType)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubArrayConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
            <summary>Задает заглушка TypeConverter.CreateInstance(ITypeDescriptorContext context, IDictionary propertyValues)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubArrayConverter.CreateInstanceITypeDescriptorContextIDictionary">
            <summary>Задает stub TypeConverter.CreateInstance(ITypeDescriptorContext context, IDictionary propertyValues)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubArrayConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Задает заглушка TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubArrayConverter.GetCreateInstanceSupportedITypeDescriptorContext">
            <summary>Задает stub TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubArrayConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>Задает заглушка ArrayConverter.GetProperties(ITypeDescriptorContext context, Object value, Attribute[] attributes)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubArrayConverter.GetPropertiesITypeDescriptorContextObjectAttributeArray">
            <summary>Задает stub ArrayConverter.GetProperties(ITypeDescriptorContext context, Object value, Attribute[] attributes)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubArrayConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Задает заглушка ArrayConverter.GetPropertiesSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubArrayConverter.GetPropertiesSupportedITypeDescriptorContext">
            <summary>Задает stub ArrayConverter.GetPropertiesSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubArrayConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Задает заглушка TypeConverter.GetStandardValues(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubArrayConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Задает заглушка TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubArrayConverter.GetStandardValuesExclusiveITypeDescriptorContext">
            <summary>Задает stub TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubArrayConverter.GetStandardValuesITypeDescriptorContext">
            <summary>Задает stub TypeConverter.GetStandardValues(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubArrayConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Задает заглушка TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubArrayConverter.GetStandardValuesSupportedITypeDescriptorContext">
            <summary>Задает stub TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubArrayConverter.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubArrayConverter</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubArrayConverter.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubArrayConverter.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubArrayConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)">
            <summary>Задает заглушка TypeConverter.IsValid(ITypeDescriptorContext context, Object value)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubArrayConverter.IsValidITypeDescriptorContextObject">
            <summary>Задает stub TypeConverter.IsValid(ITypeDescriptorContext context, Object value)</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.StubAttributeCollection">
            <summary>Тип заглушки System.ComponentModel.AttributeCollection</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubAttributeCollection.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubAttributeCollection.#ctor(System.Attribute[])">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubAttributeCollection.Attributes">
            <summary>Задает stub AttributeCollection.get_Attributes()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubAttributeCollection.AttributesGet">
            <summary>Задает stub AttributeCollection.get_Attributes()</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubAttributeCollection.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubAttributeCollection.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubAttributeCollection</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubAttributeCollection.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubAttributeCollection.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubAttributeCollection.Item(System.Type)">
            <summary>Задает stub AttributeCollection.get_Item(Type attributeType)</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubAttributeCollection.Item(System.Int32)">
            <summary>Задает stub AttributeCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubAttributeCollection.ItemGetInt32">
            <summary>Задает stub AttributeCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubAttributeCollection.ItemGetType">
            <summary>Задает stub AttributeCollection.get_Item(Type attributeType)</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.StubAttributeProviderAttribute">
            <summary>Тип заглушки System.ComponentModel.AttributeProviderAttribute</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubAttributeProviderAttribute.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubAttributeProviderAttribute.#ctor(System.Type)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubAttributeProviderAttribute.#ctor(System.String,System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubAttributeProviderAttribute.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubAttributeProviderAttribute.Equals(System.Object)">
            <summary>Задает заглушка Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubAttributeProviderAttribute.EqualsObject">
            <summary>Задает stub Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubAttributeProviderAttribute.GetHashCode">
            <summary>Задает заглушка Attribute.GetHashCode()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubAttributeProviderAttribute.GetHashCode01">
            <summary>Задает stub Attribute.GetHashCode()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubAttributeProviderAttribute.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubAttributeProviderAttribute</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubAttributeProviderAttribute.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubAttributeProviderAttribute.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubAttributeProviderAttribute.IsDefaultAttribute">
            <summary>Задает заглушка Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubAttributeProviderAttribute.IsDefaultAttribute01">
            <summary>Задает stub Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubAttributeProviderAttribute.Match(System.Object)">
            <summary>Задает заглушка Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubAttributeProviderAttribute.MatchObject">
            <summary>Задает stub Attribute.Match(Object obj)</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubAttributeProviderAttribute.TypeId">
            <summary>Задает stub Attribute.get_TypeId()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubAttributeProviderAttribute.TypeIdGet">
            <summary>Задает stub Attribute.get_TypeId()</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.StubBackgroundWorker">
            <summary>Тип заглушки System.ComponentModel.BackgroundWorker</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubBackgroundWorker.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubBackgroundWorker.AttachBackingFieldToSite">
            <summary>Присоединение делегатов для эмуляции StubBackgroundWorker.Site как свойства с резервным полем.</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubBackgroundWorker.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubBackgroundWorker.CanRaiseEvents">
            <summary>Задает stub Component.get_CanRaiseEvents()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubBackgroundWorker.CanRaiseEventsGet">
            <summary>Задает stub Component.get_CanRaiseEvents()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubBackgroundWorker.Dispose(System.Boolean)">
            <summary>Задает заглушка Component.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubBackgroundWorker.DisposeBoolean">
            <summary>Задает stub Component.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubBackgroundWorker.GetService(System.Type)">
            <summary>Задает заглушка Component.GetService(Type service)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubBackgroundWorker.GetServiceType">
            <summary>Задает stub Component.GetService(Type service)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubBackgroundWorker.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubBackgroundWorker</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubBackgroundWorker.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubBackgroundWorker.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubBackgroundWorker.OnDoWork(System.ComponentModel.DoWorkEventArgs)">
            <summary>Задает заглушка BackgroundWorker.OnDoWork(DoWorkEventArgs e)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubBackgroundWorker.OnDoWorkDoWorkEventArgs">
            <summary>Задает stub BackgroundWorker.OnDoWork(DoWorkEventArgs e)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubBackgroundWorker.OnProgressChanged(System.ComponentModel.ProgressChangedEventArgs)">
            <summary>Задает заглушка BackgroundWorker.OnProgressChanged(ProgressChangedEventArgs e)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubBackgroundWorker.OnProgressChangedProgressChangedEventArgs">
            <summary>Задает stub BackgroundWorker.OnProgressChanged(ProgressChangedEventArgs e)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubBackgroundWorker.OnRunWorkerCompleted(System.ComponentModel.RunWorkerCompletedEventArgs)">
            <summary>Задает заглушка BackgroundWorker.OnRunWorkerCompleted(RunWorkerCompletedEventArgs e)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubBackgroundWorker.OnRunWorkerCompletedRunWorkerCompletedEventArgs">
            <summary>Задает stub BackgroundWorker.OnRunWorkerCompleted(RunWorkerCompletedEventArgs e)</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubBackgroundWorker.Site">
            <summary>Задает stub Component.get_Site()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubBackgroundWorker.SiteGet">
            <summary>Задает stub Component.get_Site()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubBackgroundWorker.SiteSetISite">
            <summary>Задает stub Component.set_Site(ISite value)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubBackgroundWorker.ToString">
            <summary>Задает заглушка Component.ToString()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubBackgroundWorker.ToString01">
            <summary>Задает stub Component.ToString()</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.StubBindingList`1">
            <summary>Тип заглушки System.ComponentModel.BindingList`1</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubBindingList`1.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubBindingList`1.#ctor(System.Collections.Generic.IList{`0})">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubBindingList`1.AddNewCore">
            <summary>Задает заглушка BindingList`1.AddNewCore()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubBindingList`1.AddNewCore01">
            <summary>Задает stub BindingList`1.AddNewCore()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubBindingList`1.ApplySortCore(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)">
            <summary>Задает заглушка BindingList`1.ApplySortCore(PropertyDescriptor prop, ListSortDirection direction)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubBindingList`1.ApplySortCorePropertyDescriptorListSortDirection">
            <summary>Задает stub BindingList`1.ApplySortCore(PropertyDescriptor prop, ListSortDirection direction)</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubBindingList`1.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubBindingList`1.CancelNew(System.Int32)">
            <summary>Задает заглушка BindingList`1.CancelNew(Int32 itemIndex)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubBindingList`1.CancelNewInt32">
            <summary>Задает stub BindingList`1.CancelNew(Int32 itemIndex)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubBindingList`1.ClearItems">
            <summary>Задает заглушка BindingList`1.ClearItems()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubBindingList`1.ClearItems01">
            <summary>Задает stub BindingList`1.ClearItems()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubBindingList`1.EndNew(System.Int32)">
            <summary>Задает заглушка BindingList`1.EndNew(Int32 itemIndex)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubBindingList`1.EndNewInt32">
            <summary>Задает stub BindingList`1.EndNew(Int32 itemIndex)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubBindingList`1.FindCore(System.ComponentModel.PropertyDescriptor,System.Object)">
            <summary>Задает заглушка BindingList`1.FindCore(PropertyDescriptor prop, Object key)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubBindingList`1.FindCorePropertyDescriptorObject">
            <summary>Задает stub BindingList`1.FindCore(PropertyDescriptor prop, Object key)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubBindingList`1.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubBindingList</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubBindingList`1.InsertItem(System.Int32,`0)">
            <summary>Задает заглушка BindingList`1.InsertItem(Int32 index, !0 item)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubBindingList`1.InsertItemInt32T0">
            <summary>Задает stub BindingList`1.InsertItem(Int32 index, !0 item)</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubBindingList`1.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubBindingList`1.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubBindingList`1.IsSortedCore">
            <summary>Задает stub BindingList`1.get_IsSortedCore()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubBindingList`1.IsSortedCoreGet">
            <summary>Задает stub BindingList`1.get_IsSortedCore()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubBindingList`1.OnAddingNew(System.ComponentModel.AddingNewEventArgs)">
            <summary>Задает заглушка BindingList`1.OnAddingNew(AddingNewEventArgs e)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubBindingList`1.OnAddingNewAddingNewEventArgs">
            <summary>Задает stub BindingList`1.OnAddingNew(AddingNewEventArgs e)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubBindingList`1.OnListChanged(System.ComponentModel.ListChangedEventArgs)">
            <summary>Задает заглушка BindingList`1.OnListChanged(ListChangedEventArgs e)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubBindingList`1.OnListChangedListChangedEventArgs">
            <summary>Задает stub BindingList`1.OnListChanged(ListChangedEventArgs e)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubBindingList`1.RemoveItem(System.Int32)">
            <summary>Задает заглушка BindingList`1.RemoveItem(Int32 index)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubBindingList`1.RemoveItemInt32">
            <summary>Задает stub BindingList`1.RemoveItem(Int32 index)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubBindingList`1.RemoveSortCore">
            <summary>Задает заглушка BindingList`1.RemoveSortCore()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubBindingList`1.RemoveSortCore01">
            <summary>Задает stub BindingList`1.RemoveSortCore()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubBindingList`1.SetItem(System.Int32,`0)">
            <summary>Задает заглушка BindingList`1.SetItem(Int32 index, !0 item)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubBindingList`1.SetItemInt32T0">
            <summary>Задает stub BindingList`1.SetItem(Int32 index, !0 item)</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubBindingList`1.SortDirectionCore">
            <summary>Задает stub BindingList`1.get_SortDirectionCore()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubBindingList`1.SortDirectionCoreGet">
            <summary>Задает stub BindingList`1.get_SortDirectionCore()</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubBindingList`1.SortPropertyCore">
            <summary>Задает stub BindingList`1.get_SortPropertyCore()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubBindingList`1.SortPropertyCoreGet">
            <summary>Задает stub BindingList`1.get_SortPropertyCore()</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubBindingList`1.SupportsChangeNotificationCore">
            <summary>Задает stub BindingList`1.get_SupportsChangeNotificationCore()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubBindingList`1.SupportsChangeNotificationCoreGet">
            <summary>Задает stub BindingList`1.get_SupportsChangeNotificationCore()</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubBindingList`1.SupportsSearchingCore">
            <summary>Задает stub BindingList`1.get_SupportsSearchingCore()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubBindingList`1.SupportsSearchingCoreGet">
            <summary>Задает stub BindingList`1.get_SupportsSearchingCore()</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubBindingList`1.SupportsSortingCore">
            <summary>Задает stub BindingList`1.get_SupportsSortingCore()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubBindingList`1.SupportsSortingCoreGet">
            <summary>Задает stub BindingList`1.get_SupportsSortingCore()</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.StubBooleanConverter">
            <summary>Тип заглушки System.ComponentModel.BooleanConverter</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubBooleanConverter.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubBooleanConverter.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubBooleanConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>Задает заглушка BooleanConverter.CanConvertFrom(ITypeDescriptorContext context, Type sourceType)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubBooleanConverter.CanConvertFromITypeDescriptorContextType">
            <summary>Задает stub BooleanConverter.CanConvertFrom(ITypeDescriptorContext context, Type sourceType)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubBooleanConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>Задает заглушка TypeConverter.CanConvertTo(ITypeDescriptorContext context, Type destinationType)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubBooleanConverter.CanConvertToITypeDescriptorContextType">
            <summary>Задает stub TypeConverter.CanConvertTo(ITypeDescriptorContext context, Type destinationType)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubBooleanConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>Задает заглушка BooleanConverter.ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, Object value)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubBooleanConverter.ConvertFromITypeDescriptorContextCultureInfoObject">
            <summary>Задает stub BooleanConverter.ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, Object value)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubBooleanConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>Задает заглушка TypeConverter.ConvertTo(ITypeDescriptorContext context, CultureInfo culture, Object value, Type destinationType)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubBooleanConverter.ConvertToITypeDescriptorContextCultureInfoObjectType">
            <summary>Задает stub TypeConverter.ConvertTo(ITypeDescriptorContext context, CultureInfo culture, Object value, Type destinationType)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubBooleanConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
            <summary>Задает заглушка TypeConverter.CreateInstance(ITypeDescriptorContext context, IDictionary propertyValues)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubBooleanConverter.CreateInstanceITypeDescriptorContextIDictionary">
            <summary>Задает stub TypeConverter.CreateInstance(ITypeDescriptorContext context, IDictionary propertyValues)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubBooleanConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Задает заглушка TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubBooleanConverter.GetCreateInstanceSupportedITypeDescriptorContext">
            <summary>Задает stub TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubBooleanConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>Задает заглушка TypeConverter.GetProperties(ITypeDescriptorContext context, Object value, Attribute[] attributes)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubBooleanConverter.GetPropertiesITypeDescriptorContextObjectAttributeArray">
            <summary>Задает stub TypeConverter.GetProperties(ITypeDescriptorContext context, Object value, Attribute[] attributes)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubBooleanConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Задает заглушка TypeConverter.GetPropertiesSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubBooleanConverter.GetPropertiesSupportedITypeDescriptorContext">
            <summary>Задает stub TypeConverter.GetPropertiesSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubBooleanConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Задает заглушка BooleanConverter.GetStandardValues(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubBooleanConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Задает заглушка BooleanConverter.GetStandardValuesExclusive(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubBooleanConverter.GetStandardValuesExclusiveITypeDescriptorContext">
            <summary>Задает stub BooleanConverter.GetStandardValuesExclusive(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubBooleanConverter.GetStandardValuesITypeDescriptorContext">
            <summary>Задает stub BooleanConverter.GetStandardValues(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubBooleanConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Задает заглушка BooleanConverter.GetStandardValuesSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubBooleanConverter.GetStandardValuesSupportedITypeDescriptorContext">
            <summary>Задает stub BooleanConverter.GetStandardValuesSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubBooleanConverter.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubBooleanConverter</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubBooleanConverter.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubBooleanConverter.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubBooleanConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)">
            <summary>Задает заглушка TypeConverter.IsValid(ITypeDescriptorContext context, Object value)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubBooleanConverter.IsValidITypeDescriptorContextObject">
            <summary>Задает stub TypeConverter.IsValid(ITypeDescriptorContext context, Object value)</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.StubCancelEventArgs">
            <summary>Тип заглушки System.ComponentModel.CancelEventArgs</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubCancelEventArgs.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubCancelEventArgs.#ctor(System.Boolean)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubCancelEventArgs.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubCancelEventArgs.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCancelEventArgs</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubCancelEventArgs.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubCancelEventArgs.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.StubCategoryAttribute">
            <summary>Тип заглушки System.ComponentModel.CategoryAttribute</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubCategoryAttribute.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubCategoryAttribute.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubCategoryAttribute.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubCategoryAttribute.Equals(System.Object)">
            <summary>Задает заглушка CategoryAttribute.Equals(Object obj)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubCategoryAttribute.EqualsObject">
            <summary>Задает stub CategoryAttribute.Equals(Object obj)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubCategoryAttribute.GetHashCode">
            <summary>Задает заглушка CategoryAttribute.GetHashCode()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubCategoryAttribute.GetHashCode01">
            <summary>Задает stub CategoryAttribute.GetHashCode()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubCategoryAttribute.GetLocalizedString(System.String)">
            <summary>Задает заглушка CategoryAttribute.GetLocalizedString(String value)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubCategoryAttribute.GetLocalizedStringString">
            <summary>Задает stub CategoryAttribute.GetLocalizedString(String value)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubCategoryAttribute.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCategoryAttribute</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubCategoryAttribute.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubCategoryAttribute.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubCategoryAttribute.IsDefaultAttribute">
            <summary>Задает заглушка CategoryAttribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubCategoryAttribute.IsDefaultAttribute01">
            <summary>Задает stub CategoryAttribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubCategoryAttribute.Match(System.Object)">
            <summary>Задает заглушка Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubCategoryAttribute.MatchObject">
            <summary>Задает stub Attribute.Match(Object obj)</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubCategoryAttribute.TypeId">
            <summary>Задает stub Attribute.get_TypeId()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubCategoryAttribute.TypeIdGet">
            <summary>Задает stub Attribute.get_TypeId()</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.StubCharConverter">
            <summary>Тип заглушки System.ComponentModel.CharConverter</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubCharConverter.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubCharConverter.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubCharConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>Задает заглушка CharConverter.CanConvertFrom(ITypeDescriptorContext context, Type sourceType)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubCharConverter.CanConvertFromITypeDescriptorContextType">
            <summary>Задает stub CharConverter.CanConvertFrom(ITypeDescriptorContext context, Type sourceType)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubCharConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>Задает заглушка TypeConverter.CanConvertTo(ITypeDescriptorContext context, Type destinationType)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubCharConverter.CanConvertToITypeDescriptorContextType">
            <summary>Задает stub TypeConverter.CanConvertTo(ITypeDescriptorContext context, Type destinationType)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubCharConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>Задает заглушка CharConverter.ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, Object value)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubCharConverter.ConvertFromITypeDescriptorContextCultureInfoObject">
            <summary>Задает stub CharConverter.ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, Object value)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubCharConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>Задает заглушка CharConverter.ConvertTo(ITypeDescriptorContext context, CultureInfo culture, Object value, Type destinationType)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubCharConverter.ConvertToITypeDescriptorContextCultureInfoObjectType">
            <summary>Задает stub CharConverter.ConvertTo(ITypeDescriptorContext context, CultureInfo culture, Object value, Type destinationType)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubCharConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
            <summary>Задает заглушка TypeConverter.CreateInstance(ITypeDescriptorContext context, IDictionary propertyValues)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubCharConverter.CreateInstanceITypeDescriptorContextIDictionary">
            <summary>Задает stub TypeConverter.CreateInstance(ITypeDescriptorContext context, IDictionary propertyValues)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubCharConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Задает заглушка TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubCharConverter.GetCreateInstanceSupportedITypeDescriptorContext">
            <summary>Задает stub TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubCharConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>Задает заглушка TypeConverter.GetProperties(ITypeDescriptorContext context, Object value, Attribute[] attributes)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubCharConverter.GetPropertiesITypeDescriptorContextObjectAttributeArray">
            <summary>Задает stub TypeConverter.GetProperties(ITypeDescriptorContext context, Object value, Attribute[] attributes)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubCharConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Задает заглушка TypeConverter.GetPropertiesSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubCharConverter.GetPropertiesSupportedITypeDescriptorContext">
            <summary>Задает stub TypeConverter.GetPropertiesSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubCharConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Задает заглушка TypeConverter.GetStandardValues(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubCharConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Задает заглушка TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubCharConverter.GetStandardValuesExclusiveITypeDescriptorContext">
            <summary>Задает stub TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubCharConverter.GetStandardValuesITypeDescriptorContext">
            <summary>Задает stub TypeConverter.GetStandardValues(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubCharConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Задает заглушка TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubCharConverter.GetStandardValuesSupportedITypeDescriptorContext">
            <summary>Задает stub TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubCharConverter.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCharConverter</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubCharConverter.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubCharConverter.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubCharConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)">
            <summary>Задает заглушка TypeConverter.IsValid(ITypeDescriptorContext context, Object value)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubCharConverter.IsValidITypeDescriptorContextObject">
            <summary>Задает stub TypeConverter.IsValid(ITypeDescriptorContext context, Object value)</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.StubCollectionChangeEventArgs">
            <summary>Тип заглушки System.ComponentModel.CollectionChangeEventArgs</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubCollectionChangeEventArgs.#ctor(System.ComponentModel.CollectionChangeAction,System.Object)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubCollectionChangeEventArgs.Action">
            <summary>Задает stub CollectionChangeEventArgs.get_Action()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubCollectionChangeEventArgs.ActionGet">
            <summary>Задает stub CollectionChangeEventArgs.get_Action()</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubCollectionChangeEventArgs.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubCollectionChangeEventArgs.Element">
            <summary>Задает stub CollectionChangeEventArgs.get_Element()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubCollectionChangeEventArgs.ElementGet">
            <summary>Задает stub CollectionChangeEventArgs.get_Element()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubCollectionChangeEventArgs.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCollectionChangeEventArgs</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubCollectionChangeEventArgs.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubCollectionChangeEventArgs.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.StubCollectionConverter">
            <summary>Тип заглушки System.ComponentModel.CollectionConverter</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubCollectionConverter.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubCollectionConverter.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubCollectionConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>Задает заглушка TypeConverter.CanConvertFrom(ITypeDescriptorContext context, Type sourceType)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubCollectionConverter.CanConvertFromITypeDescriptorContextType">
            <summary>Задает stub TypeConverter.CanConvertFrom(ITypeDescriptorContext context, Type sourceType)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubCollectionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>Задает заглушка TypeConverter.CanConvertTo(ITypeDescriptorContext context, Type destinationType)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubCollectionConverter.CanConvertToITypeDescriptorContextType">
            <summary>Задает stub TypeConverter.CanConvertTo(ITypeDescriptorContext context, Type destinationType)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubCollectionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>Задает заглушка TypeConverter.ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, Object value)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubCollectionConverter.ConvertFromITypeDescriptorContextCultureInfoObject">
            <summary>Задает stub TypeConverter.ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, Object value)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubCollectionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>Задает заглушка CollectionConverter.ConvertTo(ITypeDescriptorContext context, CultureInfo culture, Object value, Type destinationType)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubCollectionConverter.ConvertToITypeDescriptorContextCultureInfoObjectType">
            <summary>Задает stub CollectionConverter.ConvertTo(ITypeDescriptorContext context, CultureInfo culture, Object value, Type destinationType)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubCollectionConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
            <summary>Задает заглушка TypeConverter.CreateInstance(ITypeDescriptorContext context, IDictionary propertyValues)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubCollectionConverter.CreateInstanceITypeDescriptorContextIDictionary">
            <summary>Задает stub TypeConverter.CreateInstance(ITypeDescriptorContext context, IDictionary propertyValues)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubCollectionConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Задает заглушка TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubCollectionConverter.GetCreateInstanceSupportedITypeDescriptorContext">
            <summary>Задает stub TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubCollectionConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>Задает заглушка CollectionConverter.GetProperties(ITypeDescriptorContext context, Object value, Attribute[] attributes)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubCollectionConverter.GetPropertiesITypeDescriptorContextObjectAttributeArray">
            <summary>Задает stub CollectionConverter.GetProperties(ITypeDescriptorContext context, Object value, Attribute[] attributes)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubCollectionConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Задает заглушка CollectionConverter.GetPropertiesSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubCollectionConverter.GetPropertiesSupportedITypeDescriptorContext">
            <summary>Задает stub CollectionConverter.GetPropertiesSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubCollectionConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Задает заглушка TypeConverter.GetStandardValues(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubCollectionConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Задает заглушка TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubCollectionConverter.GetStandardValuesExclusiveITypeDescriptorContext">
            <summary>Задает stub TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubCollectionConverter.GetStandardValuesITypeDescriptorContext">
            <summary>Задает stub TypeConverter.GetStandardValues(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubCollectionConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Задает заглушка TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubCollectionConverter.GetStandardValuesSupportedITypeDescriptorContext">
            <summary>Задает stub TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubCollectionConverter.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCollectionConverter</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubCollectionConverter.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubCollectionConverter.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubCollectionConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)">
            <summary>Задает заглушка TypeConverter.IsValid(ITypeDescriptorContext context, Object value)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubCollectionConverter.IsValidITypeDescriptorContextObject">
            <summary>Задает stub TypeConverter.IsValid(ITypeDescriptorContext context, Object value)</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.StubComponent">
            <summary>Тип заглушки System.ComponentModel.Component</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubComponent.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubComponent.AttachBackingFieldToSite">
            <summary>Присоединение делегатов для эмуляции StubComponent.Site как свойства с резервным полем.</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubComponent.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubComponent.CanRaiseEvents">
            <summary>Задает stub Component.get_CanRaiseEvents()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubComponent.CanRaiseEventsGet">
            <summary>Задает stub Component.get_CanRaiseEvents()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubComponent.Dispose(System.Boolean)">
            <summary>Задает заглушка Component.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubComponent.DisposeBoolean">
            <summary>Задает stub Component.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubComponent.GetService(System.Type)">
            <summary>Задает заглушка Component.GetService(Type service)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubComponent.GetServiceType">
            <summary>Задает stub Component.GetService(Type service)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubComponent.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubComponent</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubComponent.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubComponent.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubComponent.Site">
            <summary>Задает stub Component.get_Site()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubComponent.SiteGet">
            <summary>Задает stub Component.get_Site()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubComponent.SiteSetISite">
            <summary>Задает stub Component.set_Site(ISite value)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubComponent.ToString">
            <summary>Задает заглушка Component.ToString()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubComponent.ToString01">
            <summary>Задает stub Component.ToString()</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.StubComponentCollection">
            <summary>Тип заглушки System.ComponentModel.ComponentCollection</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubComponentCollection.#ctor(System.ComponentModel.IComponent[])">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubComponentCollection.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubComponentCollection.Count">
            <summary>Задает stub ReadOnlyCollectionBase.get_Count()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubComponentCollection.CountGet">
            <summary>Задает stub ReadOnlyCollectionBase.get_Count()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubComponentCollection.GetEnumerator">
            <summary>Задает заглушка ReadOnlyCollectionBase.GetEnumerator()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubComponentCollection.GetEnumerator01">
            <summary>Задает stub ReadOnlyCollectionBase.GetEnumerator()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubComponentCollection.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubComponentCollection</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubComponentCollection.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubComponentCollection.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubComponentCollection.Item(System.Int32)">
            <summary>Задает stub ComponentCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubComponentCollection.Item(System.String)">
            <summary>Задает stub ComponentCollection.get_Item(String name)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubComponentCollection.ItemGetInt32">
            <summary>Задает stub ComponentCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubComponentCollection.ItemGetString">
            <summary>Задает stub ComponentCollection.get_Item(String name)</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.StubComponentConverter">
            <summary>Тип заглушки System.ComponentModel.ComponentConverter</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubComponentConverter.#ctor(System.Type)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubComponentConverter.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubComponentConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>Задает заглушка ReferenceConverter.CanConvertFrom(ITypeDescriptorContext context, Type sourceType)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubComponentConverter.CanConvertFromITypeDescriptorContextType">
            <summary>Задает stub ReferenceConverter.CanConvertFrom(ITypeDescriptorContext context, Type sourceType)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubComponentConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>Задает заглушка TypeConverter.CanConvertTo(ITypeDescriptorContext context, Type destinationType)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubComponentConverter.CanConvertToITypeDescriptorContextType">
            <summary>Задает stub TypeConverter.CanConvertTo(ITypeDescriptorContext context, Type destinationType)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubComponentConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>Задает заглушка ReferenceConverter.ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, Object value)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubComponentConverter.ConvertFromITypeDescriptorContextCultureInfoObject">
            <summary>Задает stub ReferenceConverter.ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, Object value)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubComponentConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>Задает заглушка ReferenceConverter.ConvertTo(ITypeDescriptorContext context, CultureInfo culture, Object value, Type destinationType)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubComponentConverter.ConvertToITypeDescriptorContextCultureInfoObjectType">
            <summary>Задает stub ReferenceConverter.ConvertTo(ITypeDescriptorContext context, CultureInfo culture, Object value, Type destinationType)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubComponentConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
            <summary>Задает заглушка TypeConverter.CreateInstance(ITypeDescriptorContext context, IDictionary propertyValues)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubComponentConverter.CreateInstanceITypeDescriptorContextIDictionary">
            <summary>Задает stub TypeConverter.CreateInstance(ITypeDescriptorContext context, IDictionary propertyValues)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubComponentConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Задает заглушка TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubComponentConverter.GetCreateInstanceSupportedITypeDescriptorContext">
            <summary>Задает stub TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubComponentConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>Задает заглушка ComponentConverter.GetProperties(ITypeDescriptorContext context, Object value, Attribute[] attributes)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubComponentConverter.GetPropertiesITypeDescriptorContextObjectAttributeArray">
            <summary>Задает stub ComponentConverter.GetProperties(ITypeDescriptorContext context, Object value, Attribute[] attributes)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubComponentConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Задает заглушка ComponentConverter.GetPropertiesSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubComponentConverter.GetPropertiesSupportedITypeDescriptorContext">
            <summary>Задает stub ComponentConverter.GetPropertiesSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubComponentConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Задает заглушка ReferenceConverter.GetStandardValues(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubComponentConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Задает заглушка ReferenceConverter.GetStandardValuesExclusive(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubComponentConverter.GetStandardValuesExclusiveITypeDescriptorContext">
            <summary>Задает stub ReferenceConverter.GetStandardValuesExclusive(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubComponentConverter.GetStandardValuesITypeDescriptorContext">
            <summary>Задает stub ReferenceConverter.GetStandardValues(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubComponentConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Задает заглушка ReferenceConverter.GetStandardValuesSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubComponentConverter.GetStandardValuesSupportedITypeDescriptorContext">
            <summary>Задает stub ReferenceConverter.GetStandardValuesSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubComponentConverter.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubComponentConverter</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubComponentConverter.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubComponentConverter.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubComponentConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)">
            <summary>Задает заглушка TypeConverter.IsValid(ITypeDescriptorContext context, Object value)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubComponentConverter.IsValidITypeDescriptorContextObject">
            <summary>Задает stub TypeConverter.IsValid(ITypeDescriptorContext context, Object value)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubComponentConverter.IsValueAllowed(System.ComponentModel.ITypeDescriptorContext,System.Object)">
            <summary>Задает заглушка ReferenceConverter.IsValueAllowed(ITypeDescriptorContext context, Object value)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubComponentConverter.IsValueAllowedITypeDescriptorContextObject">
            <summary>Задает stub ReferenceConverter.IsValueAllowed(ITypeDescriptorContext context, Object value)</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.StubComponentEditor">
            <summary>Тип заглушки System.ComponentModel.ComponentEditor</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubComponentEditor.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubComponentEditor.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubComponentEditor.EditComponent(System.ComponentModel.ITypeDescriptorContext,System.Object)">
            <summary>Задает заглушка ComponentEditor.EditComponent(ITypeDescriptorContext context, Object component)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubComponentEditor.EditComponentITypeDescriptorContextObject">
            <summary>Задает stub ComponentEditor.EditComponent(ITypeDescriptorContext context, Object component)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubComponentEditor.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubComponentEditor</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubComponentEditor.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubComponentEditor.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.StubComponentResourceManager">
            <summary>Тип заглушки System.ComponentModel.ComponentResourceManager</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubComponentResourceManager.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubComponentResourceManager.#ctor(System.Type)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubComponentResourceManager.ApplyResources(System.Object,System.String,System.Globalization.CultureInfo)">
            <summary>Задает заглушка ComponentResourceManager.ApplyResources(Object value, String objectName, CultureInfo culture)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubComponentResourceManager.ApplyResourcesObjectStringCultureInfo">
            <summary>Задает stub ComponentResourceManager.ApplyResources(Object value, String objectName, CultureInfo culture)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubComponentResourceManager.AttachBackingFieldToIgnoreCase">
            <summary>Присоединение делегатов для эмуляции StubComponentResourceManager.IgnoreCase как свойства с резервным полем.</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubComponentResourceManager.BaseName">
            <summary>Задает stub ResourceManager.get_BaseName()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubComponentResourceManager.BaseNameGet">
            <summary>Задает stub ResourceManager.get_BaseName()</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubComponentResourceManager.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubComponentResourceManager.GetObject(System.String)">
            <summary>Задает заглушка ResourceManager.GetObject(String name)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubComponentResourceManager.GetObject(System.String,System.Globalization.CultureInfo)">
            <summary>Задает заглушка ResourceManager.GetObject(String name, CultureInfo culture)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubComponentResourceManager.GetObjectString">
            <summary>Задает stub ResourceManager.GetObject(String name)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubComponentResourceManager.GetObjectStringCultureInfo">
            <summary>Задает stub ResourceManager.GetObject(String name, CultureInfo culture)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubComponentResourceManager.GetResourceFileName(System.Globalization.CultureInfo)">
            <summary>Задает заглушка ResourceManager.GetResourceFileName(CultureInfo culture)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubComponentResourceManager.GetResourceFileNameCultureInfo">
            <summary>Задает stub ResourceManager.GetResourceFileName(CultureInfo culture)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubComponentResourceManager.GetResourceSet(System.Globalization.CultureInfo,System.Boolean,System.Boolean)">
            <summary>Задает заглушка ResourceManager.GetResourceSet(CultureInfo culture, Boolean createIfNotExists, Boolean tryParents)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubComponentResourceManager.GetResourceSetCultureInfoBooleanBoolean">
            <summary>Задает stub ResourceManager.GetResourceSet(CultureInfo culture, Boolean createIfNotExists, Boolean tryParents)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubComponentResourceManager.GetString(System.String)">
            <summary>Задает заглушка ResourceManager.GetString(String name)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubComponentResourceManager.GetString(System.String,System.Globalization.CultureInfo)">
            <summary>Задает заглушка ResourceManager.GetString(String name, CultureInfo culture)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubComponentResourceManager.GetStringString">
            <summary>Задает stub ResourceManager.GetString(String name)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubComponentResourceManager.GetStringStringCultureInfo">
            <summary>Задает stub ResourceManager.GetString(String name, CultureInfo culture)</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubComponentResourceManager.IgnoreCase">
            <summary>Задает stub ResourceManager.get_IgnoreCase()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubComponentResourceManager.IgnoreCaseGet">
            <summary>Задает stub ResourceManager.get_IgnoreCase()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubComponentResourceManager.IgnoreCaseSetBoolean">
            <summary>Задает stub ResourceManager.set_IgnoreCase(Boolean value)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubComponentResourceManager.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubComponentResourceManager</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubComponentResourceManager.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubComponentResourceManager.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubComponentResourceManager.InternalGetResourceSet(System.Globalization.CultureInfo,System.Boolean,System.Boolean)">
            <summary>Задает заглушка ResourceManager.InternalGetResourceSet(CultureInfo culture, Boolean createIfNotExists, Boolean tryParents)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubComponentResourceManager.InternalGetResourceSetCultureInfoBooleanBoolean">
            <summary>Задает stub ResourceManager.InternalGetResourceSet(CultureInfo culture, Boolean createIfNotExists, Boolean tryParents)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubComponentResourceManager.ReleaseAllResources">
            <summary>Задает заглушка ResourceManager.ReleaseAllResources()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubComponentResourceManager.ReleaseAllResources01">
            <summary>Задает stub ResourceManager.ReleaseAllResources()</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubComponentResourceManager.ResourceSetType">
            <summary>Задает stub ResourceManager.get_ResourceSetType()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubComponentResourceManager.ResourceSetTypeGet">
            <summary>Задает stub ResourceManager.get_ResourceSetType()</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.StubContainer">
            <summary>Тип заглушки System.ComponentModel.Container</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubContainer.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubContainer.Add(System.ComponentModel.IComponent)">
            <summary>Задает заглушка Container.Add(IComponent component)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubContainer.Add(System.ComponentModel.IComponent,System.String)">
            <summary>Задает заглушка Container.Add(IComponent component, String name)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubContainer.AddIComponent">
            <summary>Задает stub Container.Add(IComponent component)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubContainer.AddIComponentString">
            <summary>Задает stub Container.Add(IComponent component, String name)</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubContainer.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubContainer.Components">
            <summary>Задает stub Container.get_Components()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubContainer.ComponentsGet">
            <summary>Задает stub Container.get_Components()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubContainer.CreateSite(System.ComponentModel.IComponent,System.String)">
            <summary>Задает заглушка Container.CreateSite(IComponent component, String name)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubContainer.CreateSiteIComponentString">
            <summary>Задает stub Container.CreateSite(IComponent component, String name)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubContainer.Dispose(System.Boolean)">
            <summary>Задает заглушка Container.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubContainer.DisposeBoolean">
            <summary>Задает stub Container.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubContainer.GetService(System.Type)">
            <summary>Задает заглушка Container.GetService(Type service)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubContainer.GetServiceType">
            <summary>Задает stub Container.GetService(Type service)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubContainer.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubContainer</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubContainer.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubContainer.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubContainer.Remove(System.ComponentModel.IComponent)">
            <summary>Задает заглушка Container.Remove(IComponent component)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubContainer.RemoveIComponent">
            <summary>Задает stub Container.Remove(IComponent component)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubContainer.ValidateName(System.ComponentModel.IComponent,System.String)">
            <summary>Задает заглушка Container.ValidateName(IComponent component, String name)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubContainer.ValidateNameIComponentString">
            <summary>Задает stub Container.ValidateName(IComponent component, String name)</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.StubContainerFilterService">
            <summary>Тип заглушки System.ComponentModel.ContainerFilterService</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubContainerFilterService.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubContainerFilterService.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubContainerFilterService.FilterComponents(System.ComponentModel.ComponentCollection)">
            <summary>Задает заглушка ContainerFilterService.FilterComponents(ComponentCollection components)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubContainerFilterService.FilterComponentsComponentCollection">
            <summary>Задает stub ContainerFilterService.FilterComponents(ComponentCollection components)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubContainerFilterService.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubContainerFilterService</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubContainerFilterService.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubContainerFilterService.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.StubCultureInfoConverter">
            <summary>Тип заглушки System.ComponentModel.CultureInfoConverter</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubCultureInfoConverter.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubCultureInfoConverter.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubCultureInfoConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>Задает заглушка CultureInfoConverter.CanConvertFrom(ITypeDescriptorContext context, Type sourceType)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubCultureInfoConverter.CanConvertFromITypeDescriptorContextType">
            <summary>Задает stub CultureInfoConverter.CanConvertFrom(ITypeDescriptorContext context, Type sourceType)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubCultureInfoConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>Задает заглушка CultureInfoConverter.CanConvertTo(ITypeDescriptorContext context, Type destinationType)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubCultureInfoConverter.CanConvertToITypeDescriptorContextType">
            <summary>Задает stub CultureInfoConverter.CanConvertTo(ITypeDescriptorContext context, Type destinationType)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubCultureInfoConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>Задает заглушка CultureInfoConverter.ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, Object value)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubCultureInfoConverter.ConvertFromITypeDescriptorContextCultureInfoObject">
            <summary>Задает stub CultureInfoConverter.ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, Object value)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubCultureInfoConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>Задает заглушка CultureInfoConverter.ConvertTo(ITypeDescriptorContext context, CultureInfo culture, Object value, Type destinationType)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubCultureInfoConverter.ConvertToITypeDescriptorContextCultureInfoObjectType">
            <summary>Задает stub CultureInfoConverter.ConvertTo(ITypeDescriptorContext context, CultureInfo culture, Object value, Type destinationType)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubCultureInfoConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
            <summary>Задает заглушка TypeConverter.CreateInstance(ITypeDescriptorContext context, IDictionary propertyValues)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubCultureInfoConverter.CreateInstanceITypeDescriptorContextIDictionary">
            <summary>Задает stub TypeConverter.CreateInstance(ITypeDescriptorContext context, IDictionary propertyValues)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubCultureInfoConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Задает заглушка TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubCultureInfoConverter.GetCreateInstanceSupportedITypeDescriptorContext">
            <summary>Задает stub TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubCultureInfoConverter.GetCultureName(System.Globalization.CultureInfo)">
            <summary>Задает заглушка CultureInfoConverter.GetCultureName(CultureInfo culture)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubCultureInfoConverter.GetCultureNameCultureInfo">
            <summary>Задает stub CultureInfoConverter.GetCultureName(CultureInfo culture)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubCultureInfoConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>Задает заглушка TypeConverter.GetProperties(ITypeDescriptorContext context, Object value, Attribute[] attributes)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubCultureInfoConverter.GetPropertiesITypeDescriptorContextObjectAttributeArray">
            <summary>Задает stub TypeConverter.GetProperties(ITypeDescriptorContext context, Object value, Attribute[] attributes)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubCultureInfoConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Задает заглушка TypeConverter.GetPropertiesSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubCultureInfoConverter.GetPropertiesSupportedITypeDescriptorContext">
            <summary>Задает stub TypeConverter.GetPropertiesSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubCultureInfoConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Задает заглушка CultureInfoConverter.GetStandardValues(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubCultureInfoConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Задает заглушка CultureInfoConverter.GetStandardValuesExclusive(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubCultureInfoConverter.GetStandardValuesExclusiveITypeDescriptorContext">
            <summary>Задает stub CultureInfoConverter.GetStandardValuesExclusive(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubCultureInfoConverter.GetStandardValuesITypeDescriptorContext">
            <summary>Задает stub CultureInfoConverter.GetStandardValues(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubCultureInfoConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Задает заглушка CultureInfoConverter.GetStandardValuesSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubCultureInfoConverter.GetStandardValuesSupportedITypeDescriptorContext">
            <summary>Задает stub CultureInfoConverter.GetStandardValuesSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubCultureInfoConverter.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCultureInfoConverter</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubCultureInfoConverter.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubCultureInfoConverter.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubCultureInfoConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)">
            <summary>Задает заглушка TypeConverter.IsValid(ITypeDescriptorContext context, Object value)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubCultureInfoConverter.IsValidITypeDescriptorContextObject">
            <summary>Задает stub TypeConverter.IsValid(ITypeDescriptorContext context, Object value)</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.StubCustomTypeDescriptor">
            <summary>Тип заглушки System.ComponentModel.CustomTypeDescriptor</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubCustomTypeDescriptor.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubCustomTypeDescriptor.#ctor(System.ComponentModel.ICustomTypeDescriptor)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubCustomTypeDescriptor.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubCustomTypeDescriptor.GetAttributes">
            <summary>Задает заглушка CustomTypeDescriptor.GetAttributes()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubCustomTypeDescriptor.GetAttributes01">
            <summary>Задает stub CustomTypeDescriptor.GetAttributes()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubCustomTypeDescriptor.GetClassName">
            <summary>Задает заглушка CustomTypeDescriptor.GetClassName()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubCustomTypeDescriptor.GetClassName01">
            <summary>Задает stub CustomTypeDescriptor.GetClassName()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubCustomTypeDescriptor.GetComponentName">
            <summary>Задает заглушка CustomTypeDescriptor.GetComponentName()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubCustomTypeDescriptor.GetComponentName01">
            <summary>Задает stub CustomTypeDescriptor.GetComponentName()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubCustomTypeDescriptor.GetConverter">
            <summary>Задает заглушка CustomTypeDescriptor.GetConverter()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubCustomTypeDescriptor.GetConverter01">
            <summary>Задает stub CustomTypeDescriptor.GetConverter()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubCustomTypeDescriptor.GetDefaultEvent">
            <summary>Задает заглушка CustomTypeDescriptor.GetDefaultEvent()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubCustomTypeDescriptor.GetDefaultEvent01">
            <summary>Задает stub CustomTypeDescriptor.GetDefaultEvent()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubCustomTypeDescriptor.GetDefaultProperty">
            <summary>Задает заглушка CustomTypeDescriptor.GetDefaultProperty()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubCustomTypeDescriptor.GetDefaultProperty01">
            <summary>Задает stub CustomTypeDescriptor.GetDefaultProperty()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubCustomTypeDescriptor.GetEditor(System.Type)">
            <summary>Задает заглушка CustomTypeDescriptor.GetEditor(Type editorBaseType)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubCustomTypeDescriptor.GetEditorType">
            <summary>Задает stub CustomTypeDescriptor.GetEditor(Type editorBaseType)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubCustomTypeDescriptor.GetEvents">
            <summary>Задает заглушка CustomTypeDescriptor.GetEvents()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubCustomTypeDescriptor.GetEvents(System.Attribute[])">
            <summary>Задает заглушка CustomTypeDescriptor.GetEvents(Attribute[] attributes)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubCustomTypeDescriptor.GetEvents01">
            <summary>Задает stub CustomTypeDescriptor.GetEvents()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubCustomTypeDescriptor.GetEventsAttributeArray">
            <summary>Задает stub CustomTypeDescriptor.GetEvents(Attribute[] attributes)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubCustomTypeDescriptor.GetProperties">
            <summary>Задает заглушка CustomTypeDescriptor.GetProperties()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubCustomTypeDescriptor.GetProperties(System.Attribute[])">
            <summary>Задает заглушка CustomTypeDescriptor.GetProperties(Attribute[] attributes)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubCustomTypeDescriptor.GetProperties01">
            <summary>Задает stub CustomTypeDescriptor.GetProperties()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubCustomTypeDescriptor.GetPropertiesAttributeArray">
            <summary>Задает stub CustomTypeDescriptor.GetProperties(Attribute[] attributes)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubCustomTypeDescriptor.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
            <summary>Задает заглушка CustomTypeDescriptor.GetPropertyOwner(PropertyDescriptor pd)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubCustomTypeDescriptor.GetPropertyOwnerPropertyDescriptor">
            <summary>Задает stub CustomTypeDescriptor.GetPropertyOwner(PropertyDescriptor pd)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubCustomTypeDescriptor.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCustomTypeDescriptor</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubCustomTypeDescriptor.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubCustomTypeDescriptor.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.StubDataErrorsChangedEventArgs">
            <summary>Тип заглушки System.ComponentModel.DataErrorsChangedEventArgs</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubDataErrorsChangedEventArgs.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubDataErrorsChangedEventArgs.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubDataErrorsChangedEventArgs.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubDataErrorsChangedEventArgs</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubDataErrorsChangedEventArgs.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubDataErrorsChangedEventArgs.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubDataErrorsChangedEventArgs.PropertyName">
            <summary>Задает stub DataErrorsChangedEventArgs.get_PropertyName()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubDataErrorsChangedEventArgs.PropertyNameGet">
            <summary>Задает stub DataErrorsChangedEventArgs.get_PropertyName()</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.StubDateTimeConverter">
            <summary>Тип заглушки System.ComponentModel.DateTimeConverter</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubDateTimeConverter.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubDateTimeConverter.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubDateTimeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>Задает заглушка DateTimeConverter.CanConvertFrom(ITypeDescriptorContext context, Type sourceType)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubDateTimeConverter.CanConvertFromITypeDescriptorContextType">
            <summary>Задает stub DateTimeConverter.CanConvertFrom(ITypeDescriptorContext context, Type sourceType)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubDateTimeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>Задает заглушка DateTimeConverter.CanConvertTo(ITypeDescriptorContext context, Type destinationType)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubDateTimeConverter.CanConvertToITypeDescriptorContextType">
            <summary>Задает stub DateTimeConverter.CanConvertTo(ITypeDescriptorContext context, Type destinationType)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubDateTimeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>Задает заглушка DateTimeConverter.ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, Object value)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubDateTimeConverter.ConvertFromITypeDescriptorContextCultureInfoObject">
            <summary>Задает stub DateTimeConverter.ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, Object value)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubDateTimeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>Задает заглушка DateTimeConverter.ConvertTo(ITypeDescriptorContext context, CultureInfo culture, Object value, Type destinationType)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubDateTimeConverter.ConvertToITypeDescriptorContextCultureInfoObjectType">
            <summary>Задает stub DateTimeConverter.ConvertTo(ITypeDescriptorContext context, CultureInfo culture, Object value, Type destinationType)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubDateTimeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
            <summary>Задает заглушка TypeConverter.CreateInstance(ITypeDescriptorContext context, IDictionary propertyValues)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubDateTimeConverter.CreateInstanceITypeDescriptorContextIDictionary">
            <summary>Задает stub TypeConverter.CreateInstance(ITypeDescriptorContext context, IDictionary propertyValues)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubDateTimeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Задает заглушка TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubDateTimeConverter.GetCreateInstanceSupportedITypeDescriptorContext">
            <summary>Задает stub TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubDateTimeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>Задает заглушка TypeConverter.GetProperties(ITypeDescriptorContext context, Object value, Attribute[] attributes)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubDateTimeConverter.GetPropertiesITypeDescriptorContextObjectAttributeArray">
            <summary>Задает stub TypeConverter.GetProperties(ITypeDescriptorContext context, Object value, Attribute[] attributes)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubDateTimeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Задает заглушка TypeConverter.GetPropertiesSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubDateTimeConverter.GetPropertiesSupportedITypeDescriptorContext">
            <summary>Задает stub TypeConverter.GetPropertiesSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubDateTimeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Задает заглушка TypeConverter.GetStandardValues(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubDateTimeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Задает заглушка TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubDateTimeConverter.GetStandardValuesExclusiveITypeDescriptorContext">
            <summary>Задает stub TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubDateTimeConverter.GetStandardValuesITypeDescriptorContext">
            <summary>Задает stub TypeConverter.GetStandardValues(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubDateTimeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Задает заглушка TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubDateTimeConverter.GetStandardValuesSupportedITypeDescriptorContext">
            <summary>Задает stub TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubDateTimeConverter.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubDateTimeConverter</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubDateTimeConverter.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubDateTimeConverter.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubDateTimeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)">
            <summary>Задает заглушка TypeConverter.IsValid(ITypeDescriptorContext context, Object value)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubDateTimeConverter.IsValidITypeDescriptorContextObject">
            <summary>Задает stub TypeConverter.IsValid(ITypeDescriptorContext context, Object value)</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.StubDateTimeOffsetConverter">
            <summary>Тип заглушки System.ComponentModel.DateTimeOffsetConverter</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubDateTimeOffsetConverter.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubDateTimeOffsetConverter.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubDateTimeOffsetConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>Задает заглушка DateTimeOffsetConverter.CanConvertFrom(ITypeDescriptorContext context, Type sourceType)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubDateTimeOffsetConverter.CanConvertFromITypeDescriptorContextType">
            <summary>Задает stub DateTimeOffsetConverter.CanConvertFrom(ITypeDescriptorContext context, Type sourceType)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubDateTimeOffsetConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>Задает заглушка DateTimeOffsetConverter.CanConvertTo(ITypeDescriptorContext context, Type destinationType)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubDateTimeOffsetConverter.CanConvertToITypeDescriptorContextType">
            <summary>Задает stub DateTimeOffsetConverter.CanConvertTo(ITypeDescriptorContext context, Type destinationType)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubDateTimeOffsetConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>Задает заглушка DateTimeOffsetConverter.ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, Object value)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubDateTimeOffsetConverter.ConvertFromITypeDescriptorContextCultureInfoObject">
            <summary>Задает stub DateTimeOffsetConverter.ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, Object value)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubDateTimeOffsetConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>Задает заглушка DateTimeOffsetConverter.ConvertTo(ITypeDescriptorContext context, CultureInfo culture, Object value, Type destinationType)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubDateTimeOffsetConverter.ConvertToITypeDescriptorContextCultureInfoObjectType">
            <summary>Задает stub DateTimeOffsetConverter.ConvertTo(ITypeDescriptorContext context, CultureInfo culture, Object value, Type destinationType)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubDateTimeOffsetConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
            <summary>Задает заглушка TypeConverter.CreateInstance(ITypeDescriptorContext context, IDictionary propertyValues)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubDateTimeOffsetConverter.CreateInstanceITypeDescriptorContextIDictionary">
            <summary>Задает stub TypeConverter.CreateInstance(ITypeDescriptorContext context, IDictionary propertyValues)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubDateTimeOffsetConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Задает заглушка TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubDateTimeOffsetConverter.GetCreateInstanceSupportedITypeDescriptorContext">
            <summary>Задает stub TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubDateTimeOffsetConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>Задает заглушка TypeConverter.GetProperties(ITypeDescriptorContext context, Object value, Attribute[] attributes)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubDateTimeOffsetConverter.GetPropertiesITypeDescriptorContextObjectAttributeArray">
            <summary>Задает stub TypeConverter.GetProperties(ITypeDescriptorContext context, Object value, Attribute[] attributes)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubDateTimeOffsetConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Задает заглушка TypeConverter.GetPropertiesSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubDateTimeOffsetConverter.GetPropertiesSupportedITypeDescriptorContext">
            <summary>Задает stub TypeConverter.GetPropertiesSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubDateTimeOffsetConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Задает заглушка TypeConverter.GetStandardValues(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubDateTimeOffsetConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Задает заглушка TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubDateTimeOffsetConverter.GetStandardValuesExclusiveITypeDescriptorContext">
            <summary>Задает stub TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubDateTimeOffsetConverter.GetStandardValuesITypeDescriptorContext">
            <summary>Задает stub TypeConverter.GetStandardValues(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubDateTimeOffsetConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Задает заглушка TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubDateTimeOffsetConverter.GetStandardValuesSupportedITypeDescriptorContext">
            <summary>Задает stub TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubDateTimeOffsetConverter.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubDateTimeOffsetConverter</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubDateTimeOffsetConverter.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubDateTimeOffsetConverter.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubDateTimeOffsetConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)">
            <summary>Задает заглушка TypeConverter.IsValid(ITypeDescriptorContext context, Object value)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubDateTimeOffsetConverter.IsValidITypeDescriptorContextObject">
            <summary>Задает stub TypeConverter.IsValid(ITypeDescriptorContext context, Object value)</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.StubDefaultValueAttribute">
            <summary>Тип заглушки System.ComponentModel.DefaultValueAttribute</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubDefaultValueAttribute.#ctor(System.Object)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubDefaultValueAttribute.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubDefaultValueAttribute.#ctor(System.Boolean)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubDefaultValueAttribute.#ctor(System.Byte)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubDefaultValueAttribute.#ctor(System.Char)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubDefaultValueAttribute.#ctor(System.Double)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubDefaultValueAttribute.#ctor(System.Int16)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubDefaultValueAttribute.#ctor(System.Int32)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubDefaultValueAttribute.#ctor(System.Int64)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubDefaultValueAttribute.#ctor(System.Single)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubDefaultValueAttribute.#ctor(System.Type,System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubDefaultValueAttribute.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubDefaultValueAttribute.Equals(System.Object)">
            <summary>Задает заглушка DefaultValueAttribute.Equals(Object obj)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubDefaultValueAttribute.EqualsObject">
            <summary>Задает stub DefaultValueAttribute.Equals(Object obj)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubDefaultValueAttribute.GetHashCode">
            <summary>Задает заглушка DefaultValueAttribute.GetHashCode()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubDefaultValueAttribute.GetHashCode01">
            <summary>Задает stub DefaultValueAttribute.GetHashCode()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubDefaultValueAttribute.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubDefaultValueAttribute</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubDefaultValueAttribute.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubDefaultValueAttribute.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubDefaultValueAttribute.IsDefaultAttribute">
            <summary>Задает заглушка Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubDefaultValueAttribute.IsDefaultAttribute01">
            <summary>Задает stub Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubDefaultValueAttribute.Match(System.Object)">
            <summary>Задает заглушка Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubDefaultValueAttribute.MatchObject">
            <summary>Задает stub Attribute.Match(Object obj)</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubDefaultValueAttribute.TypeId">
            <summary>Задает stub Attribute.get_TypeId()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubDefaultValueAttribute.TypeIdGet">
            <summary>Задает stub Attribute.get_TypeId()</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubDefaultValueAttribute.Value">
            <summary>Задает stub DefaultValueAttribute.get_Value()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubDefaultValueAttribute.ValueGet">
            <summary>Задает stub DefaultValueAttribute.get_Value()</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.StubDescriptionAttribute">
            <summary>Тип заглушки System.ComponentModel.DescriptionAttribute</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubDescriptionAttribute.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubDescriptionAttribute.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubDescriptionAttribute.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubDescriptionAttribute.Description">
            <summary>Задает stub DescriptionAttribute.get_Description()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubDescriptionAttribute.DescriptionGet">
            <summary>Задает stub DescriptionAttribute.get_Description()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubDescriptionAttribute.Equals(System.Object)">
            <summary>Задает заглушка DescriptionAttribute.Equals(Object obj)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubDescriptionAttribute.EqualsObject">
            <summary>Задает stub DescriptionAttribute.Equals(Object obj)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubDescriptionAttribute.GetHashCode">
            <summary>Задает заглушка DescriptionAttribute.GetHashCode()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubDescriptionAttribute.GetHashCode01">
            <summary>Задает stub DescriptionAttribute.GetHashCode()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubDescriptionAttribute.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubDescriptionAttribute</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubDescriptionAttribute.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubDescriptionAttribute.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubDescriptionAttribute.IsDefaultAttribute">
            <summary>Задает заглушка DescriptionAttribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubDescriptionAttribute.IsDefaultAttribute01">
            <summary>Задает stub DescriptionAttribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubDescriptionAttribute.Match(System.Object)">
            <summary>Задает заглушка Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubDescriptionAttribute.MatchObject">
            <summary>Задает stub Attribute.Match(Object obj)</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubDescriptionAttribute.TypeId">
            <summary>Задает stub Attribute.get_TypeId()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubDescriptionAttribute.TypeIdGet">
            <summary>Задает stub Attribute.get_TypeId()</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.StubDisplayNameAttribute">
            <summary>Тип заглушки System.ComponentModel.DisplayNameAttribute</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubDisplayNameAttribute.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubDisplayNameAttribute.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubDisplayNameAttribute.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubDisplayNameAttribute.DisplayName">
            <summary>Задает stub DisplayNameAttribute.get_DisplayName()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubDisplayNameAttribute.DisplayNameGet">
            <summary>Задает stub DisplayNameAttribute.get_DisplayName()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubDisplayNameAttribute.Equals(System.Object)">
            <summary>Задает заглушка DisplayNameAttribute.Equals(Object obj)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubDisplayNameAttribute.EqualsObject">
            <summary>Задает stub DisplayNameAttribute.Equals(Object obj)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubDisplayNameAttribute.GetHashCode">
            <summary>Задает заглушка DisplayNameAttribute.GetHashCode()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubDisplayNameAttribute.GetHashCode01">
            <summary>Задает stub DisplayNameAttribute.GetHashCode()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubDisplayNameAttribute.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubDisplayNameAttribute</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubDisplayNameAttribute.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubDisplayNameAttribute.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubDisplayNameAttribute.IsDefaultAttribute">
            <summary>Задает заглушка DisplayNameAttribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubDisplayNameAttribute.IsDefaultAttribute01">
            <summary>Задает stub DisplayNameAttribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubDisplayNameAttribute.Match(System.Object)">
            <summary>Задает заглушка Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubDisplayNameAttribute.MatchObject">
            <summary>Задает stub Attribute.Match(Object obj)</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubDisplayNameAttribute.TypeId">
            <summary>Задает stub Attribute.get_TypeId()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubDisplayNameAttribute.TypeIdGet">
            <summary>Задает stub Attribute.get_TypeId()</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.StubDoWorkEventArgs">
            <summary>Тип заглушки System.ComponentModel.DoWorkEventArgs</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubDoWorkEventArgs.#ctor(System.Object)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubDoWorkEventArgs.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubDoWorkEventArgs.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubDoWorkEventArgs</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubDoWorkEventArgs.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubDoWorkEventArgs.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.StubEnumConverter">
            <summary>Тип заглушки System.ComponentModel.EnumConverter</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubEnumConverter.#ctor(System.Type)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubEnumConverter.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubEnumConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>Задает заглушка EnumConverter.CanConvertFrom(ITypeDescriptorContext context, Type sourceType)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubEnumConverter.CanConvertFromITypeDescriptorContextType">
            <summary>Задает stub EnumConverter.CanConvertFrom(ITypeDescriptorContext context, Type sourceType)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubEnumConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>Задает заглушка EnumConverter.CanConvertTo(ITypeDescriptorContext context, Type destinationType)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubEnumConverter.CanConvertToITypeDescriptorContextType">
            <summary>Задает stub EnumConverter.CanConvertTo(ITypeDescriptorContext context, Type destinationType)</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubEnumConverter.Comparer">
            <summary>Задает stub EnumConverter.get_Comparer()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubEnumConverter.ComparerGet">
            <summary>Задает stub EnumConverter.get_Comparer()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubEnumConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>Задает заглушка EnumConverter.ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, Object value)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubEnumConverter.ConvertFromITypeDescriptorContextCultureInfoObject">
            <summary>Задает stub EnumConverter.ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, Object value)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubEnumConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>Задает заглушка EnumConverter.ConvertTo(ITypeDescriptorContext context, CultureInfo culture, Object value, Type destinationType)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubEnumConverter.ConvertToITypeDescriptorContextCultureInfoObjectType">
            <summary>Задает stub EnumConverter.ConvertTo(ITypeDescriptorContext context, CultureInfo culture, Object value, Type destinationType)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubEnumConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
            <summary>Задает заглушка TypeConverter.CreateInstance(ITypeDescriptorContext context, IDictionary propertyValues)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubEnumConverter.CreateInstanceITypeDescriptorContextIDictionary">
            <summary>Задает stub TypeConverter.CreateInstance(ITypeDescriptorContext context, IDictionary propertyValues)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubEnumConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Задает заглушка TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubEnumConverter.GetCreateInstanceSupportedITypeDescriptorContext">
            <summary>Задает stub TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubEnumConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>Задает заглушка TypeConverter.GetProperties(ITypeDescriptorContext context, Object value, Attribute[] attributes)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubEnumConverter.GetPropertiesITypeDescriptorContextObjectAttributeArray">
            <summary>Задает stub TypeConverter.GetProperties(ITypeDescriptorContext context, Object value, Attribute[] attributes)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubEnumConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Задает заглушка TypeConverter.GetPropertiesSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubEnumConverter.GetPropertiesSupportedITypeDescriptorContext">
            <summary>Задает stub TypeConverter.GetPropertiesSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubEnumConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Задает заглушка EnumConverter.GetStandardValues(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubEnumConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Задает заглушка EnumConverter.GetStandardValuesExclusive(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubEnumConverter.GetStandardValuesExclusiveITypeDescriptorContext">
            <summary>Задает stub EnumConverter.GetStandardValuesExclusive(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubEnumConverter.GetStandardValuesITypeDescriptorContext">
            <summary>Задает stub EnumConverter.GetStandardValues(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubEnumConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Задает заглушка EnumConverter.GetStandardValuesSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubEnumConverter.GetStandardValuesSupportedITypeDescriptorContext">
            <summary>Задает stub EnumConverter.GetStandardValuesSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubEnumConverter.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubEnumConverter</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubEnumConverter.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubEnumConverter.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubEnumConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)">
            <summary>Задает заглушка EnumConverter.IsValid(ITypeDescriptorContext context, Object value)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubEnumConverter.IsValidITypeDescriptorContextObject">
            <summary>Задает stub EnumConverter.IsValid(ITypeDescriptorContext context, Object value)</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.StubEventDescriptor">
            <summary>Тип заглушки System.ComponentModel.EventDescriptor</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubEventDescriptor.#ctor(System.ComponentModel.MemberDescriptor)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubEventDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubEventDescriptor.#ctor(System.String,System.Attribute[])">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubEventDescriptor.AddEventHandler(System.Object,System.Delegate)">
            <summary>Задает заглушка EventDescriptor.AddEventHandler(Object component, Delegate value)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubEventDescriptor.AddEventHandlerObjectDelegate">
            <summary>Задает stub EventDescriptor.AddEventHandler(Object component, Delegate value)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubEventDescriptor.AttachBackingFieldToAttributeArray">
            <summary>Присоединение делегатов для эмуляции StubEventDescriptor.AttributeArray как свойства с резервным полем.</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubEventDescriptor.AttributeArray">
            <summary>Задает stub MemberDescriptor.get_AttributeArray()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubEventDescriptor.AttributeArrayGet">
            <summary>Задает stub MemberDescriptor.get_AttributeArray()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubEventDescriptor.AttributeArraySetAttributeArray">
            <summary>Задает stub MemberDescriptor.set_AttributeArray(Attribute[] value)</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubEventDescriptor.Attributes">
            <summary>Задает stub MemberDescriptor.get_Attributes()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubEventDescriptor.AttributesGet">
            <summary>Задает stub MemberDescriptor.get_Attributes()</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubEventDescriptor.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubEventDescriptor.Category">
            <summary>Задает stub MemberDescriptor.get_Category()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubEventDescriptor.CategoryGet">
            <summary>Задает stub MemberDescriptor.get_Category()</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubEventDescriptor.ComponentType">
            <summary>Задает stub EventDescriptor.get_ComponentType()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubEventDescriptor.ComponentTypeGet">
            <summary>Задает stub EventDescriptor.get_ComponentType()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubEventDescriptor.CreateAttributeCollection">
            <summary>Задает заглушка MemberDescriptor.CreateAttributeCollection()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubEventDescriptor.CreateAttributeCollection01">
            <summary>Задает stub MemberDescriptor.CreateAttributeCollection()</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubEventDescriptor.Description">
            <summary>Задает stub MemberDescriptor.get_Description()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubEventDescriptor.DescriptionGet">
            <summary>Задает stub MemberDescriptor.get_Description()</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubEventDescriptor.DesignTimeOnly">
            <summary>Задает stub MemberDescriptor.get_DesignTimeOnly()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubEventDescriptor.DesignTimeOnlyGet">
            <summary>Задает stub MemberDescriptor.get_DesignTimeOnly()</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubEventDescriptor.DisplayName">
            <summary>Задает stub MemberDescriptor.get_DisplayName()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubEventDescriptor.DisplayNameGet">
            <summary>Задает stub MemberDescriptor.get_DisplayName()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubEventDescriptor.Equals(System.Object)">
            <summary>Задает заглушка MemberDescriptor.Equals(Object obj)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubEventDescriptor.EqualsObject">
            <summary>Задает stub MemberDescriptor.Equals(Object obj)</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubEventDescriptor.EventType">
            <summary>Задает stub EventDescriptor.get_EventType()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubEventDescriptor.EventTypeGet">
            <summary>Задает stub EventDescriptor.get_EventType()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubEventDescriptor.FillAttributes(System.Collections.IList)">
            <summary>Задает заглушка MemberDescriptor.FillAttributes(IList attributeList)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubEventDescriptor.FillAttributesIList">
            <summary>Задает stub MemberDescriptor.FillAttributes(IList attributeList)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubEventDescriptor.GetHashCode">
            <summary>Задает заглушка MemberDescriptor.GetHashCode()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubEventDescriptor.GetHashCode01">
            <summary>Задает stub MemberDescriptor.GetHashCode()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubEventDescriptor.GetInvocationTarget(System.Type,System.Object)">
            <summary>Задает заглушка MemberDescriptor.GetInvocationTarget(Type type, Object instance)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubEventDescriptor.GetInvocationTargetTypeObject">
            <summary>Задает stub MemberDescriptor.GetInvocationTarget(Type type, Object instance)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubEventDescriptor.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubEventDescriptor</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubEventDescriptor.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubEventDescriptor.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubEventDescriptor.IsBrowsable">
            <summary>Задает stub MemberDescriptor.get_IsBrowsable()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubEventDescriptor.IsBrowsableGet">
            <summary>Задает stub MemberDescriptor.get_IsBrowsable()</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubEventDescriptor.IsMulticast">
            <summary>Задает stub EventDescriptor.get_IsMulticast()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubEventDescriptor.IsMulticastGet">
            <summary>Задает stub EventDescriptor.get_IsMulticast()</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubEventDescriptor.Name">
            <summary>Задает stub MemberDescriptor.get_Name()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubEventDescriptor.NameGet">
            <summary>Задает stub MemberDescriptor.get_Name()</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubEventDescriptor.NameHashCode">
            <summary>Задает stub MemberDescriptor.get_NameHashCode()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubEventDescriptor.NameHashCodeGet">
            <summary>Задает stub MemberDescriptor.get_NameHashCode()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubEventDescriptor.RemoveEventHandler(System.Object,System.Delegate)">
            <summary>Задает заглушка EventDescriptor.RemoveEventHandler(Object component, Delegate value)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubEventDescriptor.RemoveEventHandlerObjectDelegate">
            <summary>Задает stub EventDescriptor.RemoveEventHandler(Object component, Delegate value)</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.StubEventDescriptorCollection">
            <summary>Тип заглушки System.ComponentModel.EventDescriptorCollection</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubEventDescriptorCollection.#ctor(System.ComponentModel.EventDescriptor[])">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubEventDescriptorCollection.#ctor(System.ComponentModel.EventDescriptor[],System.Boolean)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubEventDescriptorCollection.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubEventDescriptorCollection.Find(System.String,System.Boolean)">
            <summary>Задает заглушка EventDescriptorCollection.Find(String name, Boolean ignoreCase)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubEventDescriptorCollection.FindStringBoolean">
            <summary>Задает stub EventDescriptorCollection.Find(String name, Boolean ignoreCase)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubEventDescriptorCollection.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubEventDescriptorCollection</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubEventDescriptorCollection.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubEventDescriptorCollection.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubEventDescriptorCollection.Item(System.Int32)">
            <summary>Задает stub EventDescriptorCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubEventDescriptorCollection.Item(System.String)">
            <summary>Задает stub EventDescriptorCollection.get_Item(String name)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubEventDescriptorCollection.ItemGetInt32">
            <summary>Задает stub EventDescriptorCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubEventDescriptorCollection.ItemGetString">
            <summary>Задает stub EventDescriptorCollection.get_Item(String name)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubEventDescriptorCollection.Sort">
            <summary>Задает заглушка EventDescriptorCollection.Sort()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubEventDescriptorCollection.Sort(System.Collections.IComparer)">
            <summary>Задает заглушка EventDescriptorCollection.Sort(IComparer comparer)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubEventDescriptorCollection.Sort(System.String[])">
            <summary>Задает заглушка EventDescriptorCollection.Sort(String[] names)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubEventDescriptorCollection.Sort(System.String[],System.Collections.IComparer)">
            <summary>Задает заглушка EventDescriptorCollection.Sort(String[] names, IComparer comparer)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubEventDescriptorCollection.Sort01">
            <summary>Задает stub EventDescriptorCollection.Sort()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubEventDescriptorCollection.SortIComparer">
            <summary>Задает stub EventDescriptorCollection.Sort(IComparer comparer)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubEventDescriptorCollection.SortStringArray">
            <summary>Задает stub EventDescriptorCollection.Sort(String[] names)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubEventDescriptorCollection.SortStringArrayIComparer">
            <summary>Задает stub EventDescriptorCollection.Sort(String[] names, IComparer comparer)</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.StubExpandableObjectConverter">
            <summary>Тип заглушки System.ComponentModel.ExpandableObjectConverter</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubExpandableObjectConverter.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubExpandableObjectConverter.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubExpandableObjectConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>Задает заглушка TypeConverter.CanConvertFrom(ITypeDescriptorContext context, Type sourceType)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubExpandableObjectConverter.CanConvertFromITypeDescriptorContextType">
            <summary>Задает stub TypeConverter.CanConvertFrom(ITypeDescriptorContext context, Type sourceType)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubExpandableObjectConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>Задает заглушка TypeConverter.CanConvertTo(ITypeDescriptorContext context, Type destinationType)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubExpandableObjectConverter.CanConvertToITypeDescriptorContextType">
            <summary>Задает stub TypeConverter.CanConvertTo(ITypeDescriptorContext context, Type destinationType)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubExpandableObjectConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>Задает заглушка TypeConverter.ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, Object value)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubExpandableObjectConverter.ConvertFromITypeDescriptorContextCultureInfoObject">
            <summary>Задает stub TypeConverter.ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, Object value)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubExpandableObjectConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>Задает заглушка TypeConverter.ConvertTo(ITypeDescriptorContext context, CultureInfo culture, Object value, Type destinationType)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubExpandableObjectConverter.ConvertToITypeDescriptorContextCultureInfoObjectType">
            <summary>Задает stub TypeConverter.ConvertTo(ITypeDescriptorContext context, CultureInfo culture, Object value, Type destinationType)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubExpandableObjectConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
            <summary>Задает заглушка TypeConverter.CreateInstance(ITypeDescriptorContext context, IDictionary propertyValues)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubExpandableObjectConverter.CreateInstanceITypeDescriptorContextIDictionary">
            <summary>Задает stub TypeConverter.CreateInstance(ITypeDescriptorContext context, IDictionary propertyValues)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubExpandableObjectConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Задает заглушка TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubExpandableObjectConverter.GetCreateInstanceSupportedITypeDescriptorContext">
            <summary>Задает stub TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubExpandableObjectConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>Задает заглушка ExpandableObjectConverter.GetProperties(ITypeDescriptorContext context, Object value, Attribute[] attributes)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubExpandableObjectConverter.GetPropertiesITypeDescriptorContextObjectAttributeArray">
            <summary>Задает stub ExpandableObjectConverter.GetProperties(ITypeDescriptorContext context, Object value, Attribute[] attributes)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubExpandableObjectConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Задает заглушка ExpandableObjectConverter.GetPropertiesSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubExpandableObjectConverter.GetPropertiesSupportedITypeDescriptorContext">
            <summary>Задает stub ExpandableObjectConverter.GetPropertiesSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubExpandableObjectConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Задает заглушка TypeConverter.GetStandardValues(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubExpandableObjectConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Задает заглушка TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubExpandableObjectConverter.GetStandardValuesExclusiveITypeDescriptorContext">
            <summary>Задает stub TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubExpandableObjectConverter.GetStandardValuesITypeDescriptorContext">
            <summary>Задает stub TypeConverter.GetStandardValues(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubExpandableObjectConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Задает заглушка TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubExpandableObjectConverter.GetStandardValuesSupportedITypeDescriptorContext">
            <summary>Задает stub TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubExpandableObjectConverter.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubExpandableObjectConverter</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubExpandableObjectConverter.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubExpandableObjectConverter.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubExpandableObjectConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)">
            <summary>Задает заглушка TypeConverter.IsValid(ITypeDescriptorContext context, Object value)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubExpandableObjectConverter.IsValidITypeDescriptorContextObject">
            <summary>Задает stub TypeConverter.IsValid(ITypeDescriptorContext context, Object value)</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.StubGuidConverter">
            <summary>Тип заглушки System.ComponentModel.GuidConverter</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubGuidConverter.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubGuidConverter.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubGuidConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>Задает заглушка GuidConverter.CanConvertFrom(ITypeDescriptorContext context, Type sourceType)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubGuidConverter.CanConvertFromITypeDescriptorContextType">
            <summary>Задает stub GuidConverter.CanConvertFrom(ITypeDescriptorContext context, Type sourceType)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubGuidConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>Задает заглушка GuidConverter.CanConvertTo(ITypeDescriptorContext context, Type destinationType)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubGuidConverter.CanConvertToITypeDescriptorContextType">
            <summary>Задает stub GuidConverter.CanConvertTo(ITypeDescriptorContext context, Type destinationType)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubGuidConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>Задает заглушка GuidConverter.ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, Object value)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubGuidConverter.ConvertFromITypeDescriptorContextCultureInfoObject">
            <summary>Задает stub GuidConverter.ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, Object value)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubGuidConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>Задает заглушка GuidConverter.ConvertTo(ITypeDescriptorContext context, CultureInfo culture, Object value, Type destinationType)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubGuidConverter.ConvertToITypeDescriptorContextCultureInfoObjectType">
            <summary>Задает stub GuidConverter.ConvertTo(ITypeDescriptorContext context, CultureInfo culture, Object value, Type destinationType)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubGuidConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
            <summary>Задает заглушка TypeConverter.CreateInstance(ITypeDescriptorContext context, IDictionary propertyValues)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubGuidConverter.CreateInstanceITypeDescriptorContextIDictionary">
            <summary>Задает stub TypeConverter.CreateInstance(ITypeDescriptorContext context, IDictionary propertyValues)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubGuidConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Задает заглушка TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubGuidConverter.GetCreateInstanceSupportedITypeDescriptorContext">
            <summary>Задает stub TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubGuidConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>Задает заглушка TypeConverter.GetProperties(ITypeDescriptorContext context, Object value, Attribute[] attributes)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubGuidConverter.GetPropertiesITypeDescriptorContextObjectAttributeArray">
            <summary>Задает stub TypeConverter.GetProperties(ITypeDescriptorContext context, Object value, Attribute[] attributes)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubGuidConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Задает заглушка TypeConverter.GetPropertiesSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubGuidConverter.GetPropertiesSupportedITypeDescriptorContext">
            <summary>Задает stub TypeConverter.GetPropertiesSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubGuidConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Задает заглушка TypeConverter.GetStandardValues(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubGuidConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Задает заглушка TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubGuidConverter.GetStandardValuesExclusiveITypeDescriptorContext">
            <summary>Задает stub TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubGuidConverter.GetStandardValuesITypeDescriptorContext">
            <summary>Задает stub TypeConverter.GetStandardValues(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubGuidConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Задает заглушка TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubGuidConverter.GetStandardValuesSupportedITypeDescriptorContext">
            <summary>Задает stub TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubGuidConverter.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubGuidConverter</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubGuidConverter.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubGuidConverter.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubGuidConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)">
            <summary>Задает заглушка TypeConverter.IsValid(ITypeDescriptorContext context, Object value)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubGuidConverter.IsValidITypeDescriptorContextObject">
            <summary>Задает stub TypeConverter.IsValid(ITypeDescriptorContext context, Object value)</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.StubHandledEventArgs">
            <summary>Тип заглушки System.ComponentModel.HandledEventArgs</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubHandledEventArgs.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubHandledEventArgs.#ctor(System.Boolean)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubHandledEventArgs.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubHandledEventArgs.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubHandledEventArgs</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubHandledEventArgs.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubHandledEventArgs.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.StubIBindingList">
            <summary>Тип заглушки System.ComponentModel.IBindingList</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubIBindingList.#ctor">
            <summary>Инициализирует новый экземпляр type StubIBindingList</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIBindingList.AddIndexPropertyDescriptor">
            <summary>Задает stub IBindingList.AddIndex(PropertyDescriptor property)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIBindingList.AddNew">
            <summary>Задает stub IBindingList.AddNew()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIBindingList.AddObject">
            <summary>Задает stub IList.Add(Object value)</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubIBindingList.System#ComponentModel#IBindingList#AllowEdit">
            <summary>Задает stub IBindingList.get_AllowEdit()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIBindingList.AllowEditGet">
            <summary>Задает stub IBindingList.get_AllowEdit()</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubIBindingList.System#ComponentModel#IBindingList#AllowNew">
            <summary>Задает stub IBindingList.get_AllowNew()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIBindingList.AllowNewGet">
            <summary>Задает stub IBindingList.get_AllowNew()</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubIBindingList.System#ComponentModel#IBindingList#AllowRemove">
            <summary>Задает stub IBindingList.get_AllowRemove()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIBindingList.AllowRemoveGet">
            <summary>Задает stub IBindingList.get_AllowRemove()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIBindingList.ApplySortPropertyDescriptorListSortDirection">
            <summary>Задает stub IBindingList.ApplySort(PropertyDescriptor property, ListSortDirection direction)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIBindingList.Clear">
            <summary>Задает stub IList.Clear()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIBindingList.ContainsObject">
            <summary>Задает stub IList.Contains(Object value)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIBindingList.CopyToArrayInt32">
            <summary>Задает stub ICollection.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubIBindingList.System#Collections#ICollection#Count">
            <summary>Задает stub ICollection.get_Count()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIBindingList.CountGet">
            <summary>Задает stub ICollection.get_Count()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIBindingList.FindPropertyDescriptorObject">
            <summary>Задает stub IBindingList.Find(PropertyDescriptor property, Object key)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIBindingList.GetEnumerator">
            <summary>Задает stub IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIBindingList.IndexOfObject">
            <summary>Задает stub IList.IndexOf(Object value)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIBindingList.InsertInt32Object">
            <summary>Задает stub IList.Insert(Int32 index, Object value)</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubIBindingList.System#Collections#IList#IsFixedSize">
            <summary>Задает stub IList.get_IsFixedSize()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIBindingList.IsFixedSizeGet">
            <summary>Задает stub IList.get_IsFixedSize()</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubIBindingList.System#Collections#IList#IsReadOnly">
            <summary>Задает stub IList.get_IsReadOnly()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIBindingList.IsReadOnlyGet">
            <summary>Задает stub IList.get_IsReadOnly()</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubIBindingList.System#ComponentModel#IBindingList#IsSorted">
            <summary>Задает stub IBindingList.get_IsSorted()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIBindingList.IsSortedGet">
            <summary>Задает stub IBindingList.get_IsSorted()</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubIBindingList.System#Collections#ICollection#IsSynchronized">
            <summary>Задает stub ICollection.get_IsSynchronized()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIBindingList.IsSynchronizedGet">
            <summary>Задает stub ICollection.get_IsSynchronized()</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubIBindingList.System#Collections#IList#Item(System.Int32)">
            <summary>Задает stub IList.get_Item(Int32 index)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIBindingList.ItemGetInt32">
            <summary>Задает stub IList.get_Item(Int32 index)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIBindingList.ItemSetInt32Object">
            <summary>Задает stub IList.set_Item(Int32 index, Object value)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIBindingList.RemoveAtInt32">
            <summary>Задает stub IList.RemoveAt(Int32 index)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIBindingList.RemoveIndexPropertyDescriptor">
            <summary>Задает stub IBindingList.RemoveIndex(PropertyDescriptor property)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIBindingList.RemoveObject">
            <summary>Задает stub IList.Remove(Object value)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIBindingList.RemoveSort">
            <summary>Задает stub IBindingList.RemoveSort()</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubIBindingList.System#ComponentModel#IBindingList#SortDirection">
            <summary>Задает stub IBindingList.get_SortDirection()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIBindingList.SortDirectionGet">
            <summary>Задает stub IBindingList.get_SortDirection()</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubIBindingList.System#ComponentModel#IBindingList#SortProperty">
            <summary>Задает stub IBindingList.get_SortProperty()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIBindingList.SortPropertyGet">
            <summary>Задает stub IBindingList.get_SortProperty()</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubIBindingList.System#ComponentModel#IBindingList#SupportsChangeNotification">
            <summary>Задает stub IBindingList.get_SupportsChangeNotification()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIBindingList.SupportsChangeNotificationGet">
            <summary>Задает stub IBindingList.get_SupportsChangeNotification()</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubIBindingList.System#ComponentModel#IBindingList#SupportsSearching">
            <summary>Задает stub IBindingList.get_SupportsSearching()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIBindingList.SupportsSearchingGet">
            <summary>Задает stub IBindingList.get_SupportsSearching()</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubIBindingList.System#ComponentModel#IBindingList#SupportsSorting">
            <summary>Задает stub IBindingList.get_SupportsSorting()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIBindingList.SupportsSortingGet">
            <summary>Задает stub IBindingList.get_SupportsSorting()</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubIBindingList.System#Collections#ICollection#SyncRoot">
            <summary>Задает stub ICollection.get_SyncRoot()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIBindingList.SyncRootGet">
            <summary>Задает stub ICollection.get_SyncRoot()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubIBindingList.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>Задает заглушка ICollection.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubIBindingList.System#Collections#IEnumerable#GetEnumerator">
            <summary>Задает заглушка IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubIBindingList.System#Collections#IList#Add(System.Object)">
            <summary>Задает заглушка IList.Add(Object value)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubIBindingList.System#Collections#IList#Clear">
            <summary>Задает заглушка IList.Clear()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubIBindingList.System#Collections#IList#Contains(System.Object)">
            <summary>Задает заглушка IList.Contains(Object value)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubIBindingList.System#Collections#IList#IndexOf(System.Object)">
            <summary>Задает заглушка IList.IndexOf(Object value)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubIBindingList.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>Задает заглушка IList.Insert(Int32 index, Object value)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubIBindingList.System#Collections#IList#Remove(System.Object)">
            <summary>Задает заглушка IList.Remove(Object value)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubIBindingList.System#Collections#IList#RemoveAt(System.Int32)">
            <summary>Задает заглушка IList.RemoveAt(Int32 index)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubIBindingList.System#ComponentModel#IBindingList#AddIndex(System.ComponentModel.PropertyDescriptor)">
            <summary>Задает заглушка IBindingList.AddIndex(PropertyDescriptor property)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubIBindingList.System#ComponentModel#IBindingList#AddNew">
            <summary>Задает заглушка IBindingList.AddNew()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubIBindingList.System#ComponentModel#IBindingList#ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)">
            <summary>Задает заглушка IBindingList.ApplySort(PropertyDescriptor property, ListSortDirection direction)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubIBindingList.System#ComponentModel#IBindingList#Find(System.ComponentModel.PropertyDescriptor,System.Object)">
            <summary>Задает заглушка IBindingList.Find(PropertyDescriptor property, Object key)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubIBindingList.System#ComponentModel#IBindingList#RemoveIndex(System.ComponentModel.PropertyDescriptor)">
            <summary>Задает заглушка IBindingList.RemoveIndex(PropertyDescriptor property)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubIBindingList.System#ComponentModel#IBindingList#RemoveSort">
            <summary>Задает заглушка IBindingList.RemoveSort()</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.StubIBindingListView">
            <summary>Тип заглушки System.ComponentModel.IBindingListView</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubIBindingListView.#ctor">
            <summary>Инициализирует новый экземпляр type StubIBindingListView</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIBindingListView.AddIndexPropertyDescriptor">
            <summary>Задает stub IBindingList.AddIndex(PropertyDescriptor property)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIBindingListView.AddNew">
            <summary>Задает stub IBindingList.AddNew()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIBindingListView.AddObject">
            <summary>Задает stub IList.Add(Object value)</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubIBindingListView.System#ComponentModel#IBindingList#AllowEdit">
            <summary>Задает stub IBindingList.get_AllowEdit()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIBindingListView.AllowEditGet">
            <summary>Задает stub IBindingList.get_AllowEdit()</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubIBindingListView.System#ComponentModel#IBindingList#AllowNew">
            <summary>Задает stub IBindingList.get_AllowNew()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIBindingListView.AllowNewGet">
            <summary>Задает stub IBindingList.get_AllowNew()</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubIBindingListView.System#ComponentModel#IBindingList#AllowRemove">
            <summary>Задает stub IBindingList.get_AllowRemove()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIBindingListView.AllowRemoveGet">
            <summary>Задает stub IBindingList.get_AllowRemove()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIBindingListView.ApplySortListSortDescriptionCollection">
            <summary>Задает stub IBindingListView.ApplySort(ListSortDescriptionCollection sorts)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIBindingListView.ApplySortPropertyDescriptorListSortDirection">
            <summary>Задает stub IBindingList.ApplySort(PropertyDescriptor property, ListSortDirection direction)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubIBindingListView.AttachBackingFieldToFilter">
            <summary>Присоединение делегатов для эмуляции StubIBindingListView.Filter как свойства с резервным полем.</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIBindingListView.Clear">
            <summary>Задает stub IList.Clear()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIBindingListView.ContainsObject">
            <summary>Задает stub IList.Contains(Object value)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIBindingListView.CopyToArrayInt32">
            <summary>Задает stub ICollection.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubIBindingListView.System#Collections#ICollection#Count">
            <summary>Задает stub ICollection.get_Count()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIBindingListView.CountGet">
            <summary>Задает stub ICollection.get_Count()</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubIBindingListView.System#ComponentModel#IBindingListView#Filter">
            <summary>Задает stub IBindingListView.get_Filter()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIBindingListView.FilterGet">
            <summary>Задает stub IBindingListView.get_Filter()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIBindingListView.FilterSetString">
            <summary>Задает stub IBindingListView.set_Filter(String value)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIBindingListView.FindPropertyDescriptorObject">
            <summary>Задает stub IBindingList.Find(PropertyDescriptor property, Object key)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIBindingListView.GetEnumerator">
            <summary>Задает stub IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIBindingListView.IndexOfObject">
            <summary>Задает stub IList.IndexOf(Object value)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIBindingListView.InsertInt32Object">
            <summary>Задает stub IList.Insert(Int32 index, Object value)</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubIBindingListView.System#Collections#IList#IsFixedSize">
            <summary>Задает stub IList.get_IsFixedSize()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIBindingListView.IsFixedSizeGet">
            <summary>Задает stub IList.get_IsFixedSize()</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubIBindingListView.System#Collections#IList#IsReadOnly">
            <summary>Задает stub IList.get_IsReadOnly()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIBindingListView.IsReadOnlyGet">
            <summary>Задает stub IList.get_IsReadOnly()</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubIBindingListView.System#ComponentModel#IBindingList#IsSorted">
            <summary>Задает stub IBindingList.get_IsSorted()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIBindingListView.IsSortedGet">
            <summary>Задает stub IBindingList.get_IsSorted()</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubIBindingListView.System#Collections#ICollection#IsSynchronized">
            <summary>Задает stub ICollection.get_IsSynchronized()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIBindingListView.IsSynchronizedGet">
            <summary>Задает stub ICollection.get_IsSynchronized()</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubIBindingListView.System#Collections#IList#Item(System.Int32)">
            <summary>Задает stub IList.get_Item(Int32 index)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIBindingListView.ItemGetInt32">
            <summary>Задает stub IList.get_Item(Int32 index)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIBindingListView.ItemSetInt32Object">
            <summary>Задает stub IList.set_Item(Int32 index, Object value)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIBindingListView.RemoveAtInt32">
            <summary>Задает stub IList.RemoveAt(Int32 index)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIBindingListView.RemoveFilter">
            <summary>Задает stub IBindingListView.RemoveFilter()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIBindingListView.RemoveIndexPropertyDescriptor">
            <summary>Задает stub IBindingList.RemoveIndex(PropertyDescriptor property)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIBindingListView.RemoveObject">
            <summary>Задает stub IList.Remove(Object value)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIBindingListView.RemoveSort">
            <summary>Задает stub IBindingList.RemoveSort()</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubIBindingListView.System#ComponentModel#IBindingListView#SortDescriptions">
            <summary>Задает stub IBindingListView.get_SortDescriptions()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIBindingListView.SortDescriptionsGet">
            <summary>Задает stub IBindingListView.get_SortDescriptions()</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubIBindingListView.System#ComponentModel#IBindingList#SortDirection">
            <summary>Задает stub IBindingList.get_SortDirection()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIBindingListView.SortDirectionGet">
            <summary>Задает stub IBindingList.get_SortDirection()</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubIBindingListView.System#ComponentModel#IBindingList#SortProperty">
            <summary>Задает stub IBindingList.get_SortProperty()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIBindingListView.SortPropertyGet">
            <summary>Задает stub IBindingList.get_SortProperty()</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubIBindingListView.System#ComponentModel#IBindingListView#SupportsAdvancedSorting">
            <summary>Задает stub IBindingListView.get_SupportsAdvancedSorting()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIBindingListView.SupportsAdvancedSortingGet">
            <summary>Задает stub IBindingListView.get_SupportsAdvancedSorting()</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubIBindingListView.System#ComponentModel#IBindingList#SupportsChangeNotification">
            <summary>Задает stub IBindingList.get_SupportsChangeNotification()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIBindingListView.SupportsChangeNotificationGet">
            <summary>Задает stub IBindingList.get_SupportsChangeNotification()</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubIBindingListView.System#ComponentModel#IBindingListView#SupportsFiltering">
            <summary>Задает stub IBindingListView.get_SupportsFiltering()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIBindingListView.SupportsFilteringGet">
            <summary>Задает stub IBindingListView.get_SupportsFiltering()</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubIBindingListView.System#ComponentModel#IBindingList#SupportsSearching">
            <summary>Задает stub IBindingList.get_SupportsSearching()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIBindingListView.SupportsSearchingGet">
            <summary>Задает stub IBindingList.get_SupportsSearching()</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubIBindingListView.System#ComponentModel#IBindingList#SupportsSorting">
            <summary>Задает stub IBindingList.get_SupportsSorting()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIBindingListView.SupportsSortingGet">
            <summary>Задает stub IBindingList.get_SupportsSorting()</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubIBindingListView.System#Collections#ICollection#SyncRoot">
            <summary>Задает stub ICollection.get_SyncRoot()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIBindingListView.SyncRootGet">
            <summary>Задает stub ICollection.get_SyncRoot()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubIBindingListView.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>Задает заглушка ICollection.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubIBindingListView.System#Collections#IEnumerable#GetEnumerator">
            <summary>Задает заглушка IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubIBindingListView.System#Collections#IList#Add(System.Object)">
            <summary>Задает заглушка IList.Add(Object value)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubIBindingListView.System#Collections#IList#Clear">
            <summary>Задает заглушка IList.Clear()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubIBindingListView.System#Collections#IList#Contains(System.Object)">
            <summary>Задает заглушка IList.Contains(Object value)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubIBindingListView.System#Collections#IList#IndexOf(System.Object)">
            <summary>Задает заглушка IList.IndexOf(Object value)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubIBindingListView.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>Задает заглушка IList.Insert(Int32 index, Object value)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubIBindingListView.System#Collections#IList#Remove(System.Object)">
            <summary>Задает заглушка IList.Remove(Object value)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubIBindingListView.System#Collections#IList#RemoveAt(System.Int32)">
            <summary>Задает заглушка IList.RemoveAt(Int32 index)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubIBindingListView.System#ComponentModel#IBindingList#AddIndex(System.ComponentModel.PropertyDescriptor)">
            <summary>Задает заглушка IBindingList.AddIndex(PropertyDescriptor property)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubIBindingListView.System#ComponentModel#IBindingList#AddNew">
            <summary>Задает заглушка IBindingList.AddNew()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubIBindingListView.System#ComponentModel#IBindingList#ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)">
            <summary>Задает заглушка IBindingList.ApplySort(PropertyDescriptor property, ListSortDirection direction)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubIBindingListView.System#ComponentModel#IBindingList#Find(System.ComponentModel.PropertyDescriptor,System.Object)">
            <summary>Задает заглушка IBindingList.Find(PropertyDescriptor property, Object key)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubIBindingListView.System#ComponentModel#IBindingList#RemoveIndex(System.ComponentModel.PropertyDescriptor)">
            <summary>Задает заглушка IBindingList.RemoveIndex(PropertyDescriptor property)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubIBindingListView.System#ComponentModel#IBindingList#RemoveSort">
            <summary>Задает заглушка IBindingList.RemoveSort()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubIBindingListView.System#ComponentModel#IBindingListView#ApplySort(System.ComponentModel.ListSortDescriptionCollection)">
            <summary>Задает заглушка IBindingListView.ApplySort(ListSortDescriptionCollection sorts)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubIBindingListView.System#ComponentModel#IBindingListView#RemoveFilter">
            <summary>Задает заглушка IBindingListView.RemoveFilter()</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.StubICancelAddNew">
            <summary>Тип заглушки System.ComponentModel.ICancelAddNew</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubICancelAddNew.#ctor">
            <summary>Инициализирует новый экземпляр type StubICancelAddNew</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubICancelAddNew.CancelNewInt32">
            <summary>Задает stub ICancelAddNew.CancelNew(Int32 itemIndex)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubICancelAddNew.EndNewInt32">
            <summary>Задает stub ICancelAddNew.EndNew(Int32 itemIndex)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubICancelAddNew.System#ComponentModel#ICancelAddNew#CancelNew(System.Int32)">
            <summary>Задает заглушка ICancelAddNew.CancelNew(Int32 itemIndex)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubICancelAddNew.System#ComponentModel#ICancelAddNew#EndNew(System.Int32)">
            <summary>Задает заглушка ICancelAddNew.EndNew(Int32 itemIndex)</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.StubIChangeTracking">
            <summary>Тип заглушки System.ComponentModel.IChangeTracking</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubIChangeTracking.#ctor">
            <summary>Инициализирует новый экземпляр type StubIChangeTracking</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIChangeTracking.AcceptChanges">
            <summary>Задает stub IChangeTracking.AcceptChanges()</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubIChangeTracking.System#ComponentModel#IChangeTracking#IsChanged">
            <summary>Задает stub IChangeTracking.get_IsChanged()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIChangeTracking.IsChangedGet">
            <summary>Задает stub IChangeTracking.get_IsChanged()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubIChangeTracking.System#ComponentModel#IChangeTracking#AcceptChanges">
            <summary>Задает заглушка IChangeTracking.AcceptChanges()</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.StubIComponent">
            <summary>Тип заглушки System.ComponentModel.IComponent</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubIComponent.#ctor">
            <summary>Инициализирует новый экземпляр type StubIComponent</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubIComponent.AttachBackingFieldToSite">
            <summary>Присоединение делегатов для эмуляции StubIComponent.Site как свойства с резервным полем.</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIComponent.Dispose">
            <summary>Задает stub IDisposable.Dispose()</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubIComponent.System#ComponentModel#IComponent#Site">
            <summary>Задает stub IComponent.get_Site()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIComponent.SiteGet">
            <summary>Задает stub IComponent.get_Site()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIComponent.SiteSetISite">
            <summary>Задает stub IComponent.set_Site(ISite value)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubIComponent.System#IDisposable#Dispose">
            <summary>Задает заглушка IDisposable.Dispose()</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.StubIContainer">
            <summary>Тип заглушки System.ComponentModel.IContainer</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubIContainer.#ctor">
            <summary>Инициализирует новый экземпляр type StubIContainer</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIContainer.AddIComponent">
            <summary>Задает stub IContainer.Add(IComponent component)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIContainer.AddIComponentString">
            <summary>Задает stub IContainer.Add(IComponent component, String name)</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubIContainer.System#ComponentModel#IContainer#Components">
            <summary>Задает stub IContainer.get_Components()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIContainer.ComponentsGet">
            <summary>Задает stub IContainer.get_Components()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIContainer.Dispose">
            <summary>Задает stub IDisposable.Dispose()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIContainer.RemoveIComponent">
            <summary>Задает stub IContainer.Remove(IComponent component)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubIContainer.System#ComponentModel#IContainer#Add(System.ComponentModel.IComponent)">
            <summary>Задает заглушка IContainer.Add(IComponent component)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubIContainer.System#ComponentModel#IContainer#Add(System.ComponentModel.IComponent,System.String)">
            <summary>Задает заглушка IContainer.Add(IComponent component, String name)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubIContainer.System#ComponentModel#IContainer#Remove(System.ComponentModel.IComponent)">
            <summary>Задает заглушка IContainer.Remove(IComponent component)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubIContainer.System#IDisposable#Dispose">
            <summary>Задает заглушка IDisposable.Dispose()</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.StubICustomTypeDescriptor">
            <summary>Тип заглушки System.ComponentModel.ICustomTypeDescriptor</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubICustomTypeDescriptor.#ctor">
            <summary>Инициализирует новый экземпляр type StubICustomTypeDescriptor</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubICustomTypeDescriptor.GetAttributes">
            <summary>Задает stub ICustomTypeDescriptor.GetAttributes()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubICustomTypeDescriptor.GetClassName">
            <summary>Задает stub ICustomTypeDescriptor.GetClassName()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubICustomTypeDescriptor.GetComponentName">
            <summary>Задает stub ICustomTypeDescriptor.GetComponentName()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubICustomTypeDescriptor.GetConverter">
            <summary>Задает stub ICustomTypeDescriptor.GetConverter()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubICustomTypeDescriptor.GetDefaultEvent">
            <summary>Задает stub ICustomTypeDescriptor.GetDefaultEvent()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubICustomTypeDescriptor.GetDefaultProperty">
            <summary>Задает stub ICustomTypeDescriptor.GetDefaultProperty()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubICustomTypeDescriptor.GetEditorType">
            <summary>Задает stub ICustomTypeDescriptor.GetEditor(Type editorBaseType)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubICustomTypeDescriptor.GetEvents">
            <summary>Задает stub ICustomTypeDescriptor.GetEvents()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubICustomTypeDescriptor.GetEventsAttributeArray">
            <summary>Задает stub ICustomTypeDescriptor.GetEvents(Attribute[] attributes)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubICustomTypeDescriptor.GetProperties">
            <summary>Задает stub ICustomTypeDescriptor.GetProperties()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubICustomTypeDescriptor.GetPropertiesAttributeArray">
            <summary>Задает stub ICustomTypeDescriptor.GetProperties(Attribute[] attributes)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubICustomTypeDescriptor.GetPropertyOwnerPropertyDescriptor">
            <summary>Задает stub ICustomTypeDescriptor.GetPropertyOwner(PropertyDescriptor pd)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubICustomTypeDescriptor.System#ComponentModel#ICustomTypeDescriptor#GetAttributes">
            <summary>Задает заглушка ICustomTypeDescriptor.GetAttributes()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubICustomTypeDescriptor.System#ComponentModel#ICustomTypeDescriptor#GetClassName">
            <summary>Задает заглушка ICustomTypeDescriptor.GetClassName()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubICustomTypeDescriptor.System#ComponentModel#ICustomTypeDescriptor#GetComponentName">
            <summary>Задает заглушка ICustomTypeDescriptor.GetComponentName()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubICustomTypeDescriptor.System#ComponentModel#ICustomTypeDescriptor#GetConverter">
            <summary>Задает заглушка ICustomTypeDescriptor.GetConverter()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubICustomTypeDescriptor.System#ComponentModel#ICustomTypeDescriptor#GetDefaultEvent">
            <summary>Задает заглушка ICustomTypeDescriptor.GetDefaultEvent()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubICustomTypeDescriptor.System#ComponentModel#ICustomTypeDescriptor#GetDefaultProperty">
            <summary>Задает заглушка ICustomTypeDescriptor.GetDefaultProperty()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubICustomTypeDescriptor.System#ComponentModel#ICustomTypeDescriptor#GetEditor(System.Type)">
            <summary>Задает заглушка ICustomTypeDescriptor.GetEditor(Type editorBaseType)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubICustomTypeDescriptor.System#ComponentModel#ICustomTypeDescriptor#GetEvents">
            <summary>Задает заглушка ICustomTypeDescriptor.GetEvents()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubICustomTypeDescriptor.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])">
            <summary>Задает заглушка ICustomTypeDescriptor.GetEvents(Attribute[] attributes)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubICustomTypeDescriptor.System#ComponentModel#ICustomTypeDescriptor#GetProperties">
            <summary>Задает заглушка ICustomTypeDescriptor.GetProperties()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubICustomTypeDescriptor.System#ComponentModel#ICustomTypeDescriptor#GetProperties(System.Attribute[])">
            <summary>Задает заглушка ICustomTypeDescriptor.GetProperties(Attribute[] attributes)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubICustomTypeDescriptor.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
            <summary>Задает заглушка ICustomTypeDescriptor.GetPropertyOwner(PropertyDescriptor pd)</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.StubIDataErrorInfo">
            <summary>Тип заглушки System.ComponentModel.IDataErrorInfo</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubIDataErrorInfo.#ctor">
            <summary>Инициализирует новый экземпляр type StubIDataErrorInfo</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubIDataErrorInfo.System#ComponentModel#IDataErrorInfo#Error">
            <summary>Задает stub IDataErrorInfo.get_Error()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIDataErrorInfo.ErrorGet">
            <summary>Задает stub IDataErrorInfo.get_Error()</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubIDataErrorInfo.System#ComponentModel#IDataErrorInfo#Item(System.String)">
            <summary>Задает stub IDataErrorInfo.get_Item(String columnName)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIDataErrorInfo.ItemGetString">
            <summary>Задает stub IDataErrorInfo.get_Item(String columnName)</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.StubIEditableObject">
            <summary>Тип заглушки System.ComponentModel.IEditableObject</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubIEditableObject.#ctor">
            <summary>Инициализирует новый экземпляр type StubIEditableObject</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIEditableObject.BeginEdit">
            <summary>Задает stub IEditableObject.BeginEdit()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIEditableObject.CancelEdit">
            <summary>Задает stub IEditableObject.CancelEdit()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIEditableObject.EndEdit">
            <summary>Задает stub IEditableObject.EndEdit()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubIEditableObject.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>Задает заглушка IEditableObject.BeginEdit()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubIEditableObject.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>Задает заглушка IEditableObject.CancelEdit()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubIEditableObject.System#ComponentModel#IEditableObject#EndEdit">
            <summary>Задает заглушка IEditableObject.EndEdit()</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.StubIExtenderProvider">
            <summary>Тип заглушки System.ComponentModel.IExtenderProvider</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubIExtenderProvider.#ctor">
            <summary>Инициализирует новый экземпляр type StubIExtenderProvider</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIExtenderProvider.CanExtendObject">
            <summary>Задает stub IExtenderProvider.CanExtend(Object extendee)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubIExtenderProvider.System#ComponentModel#IExtenderProvider#CanExtend(System.Object)">
            <summary>Задает заглушка IExtenderProvider.CanExtend(Object extendee)</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.StubIIntellisenseBuilder">
            <summary>Тип заглушки System.ComponentModel.IIntellisenseBuilder</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubIIntellisenseBuilder.#ctor">
            <summary>Инициализирует новый экземпляр type StubIIntellisenseBuilder</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubIIntellisenseBuilder.System#ComponentModel#IIntellisenseBuilder#Name">
            <summary>Задает stub IIntellisenseBuilder.get_Name()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIIntellisenseBuilder.NameGet">
            <summary>Задает stub IIntellisenseBuilder.get_Name()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIIntellisenseBuilder.ShowStringStringStringRef">
            <summary>Задает stub IIntellisenseBuilder.Show(String language, String value, String&amp; newValue)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubIIntellisenseBuilder.System#ComponentModel#IIntellisenseBuilder#Show(System.String,System.String,System.String@)">
            <summary>Задает заглушка IIntellisenseBuilder.Show(String language, String value, String&amp; newValue)</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.StubIListSource">
            <summary>Тип заглушки System.ComponentModel.IListSource</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubIListSource.#ctor">
            <summary>Инициализирует новый экземпляр type StubIListSource</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubIListSource.System#ComponentModel#IListSource#ContainsListCollection">
            <summary>Задает stub IListSource.get_ContainsListCollection()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIListSource.ContainsListCollectionGet">
            <summary>Задает stub IListSource.get_ContainsListCollection()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIListSource.GetList">
            <summary>Задает stub IListSource.GetList()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubIListSource.System#ComponentModel#IListSource#GetList">
            <summary>Задает заглушка IListSource.GetList()</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.StubINestedContainer">
            <summary>Тип заглушки System.ComponentModel.INestedContainer</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubINestedContainer.#ctor">
            <summary>Инициализирует новый экземпляр type StubINestedContainer</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubINestedContainer.AddIComponent">
            <summary>Задает stub IContainer.Add(IComponent component)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubINestedContainer.AddIComponentString">
            <summary>Задает stub IContainer.Add(IComponent component, String name)</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubINestedContainer.System#ComponentModel#IContainer#Components">
            <summary>Задает stub IContainer.get_Components()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubINestedContainer.ComponentsGet">
            <summary>Задает stub IContainer.get_Components()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubINestedContainer.Dispose">
            <summary>Задает stub IDisposable.Dispose()</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubINestedContainer.System#ComponentModel#INestedContainer#Owner">
            <summary>Задает stub INestedContainer.get_Owner()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubINestedContainer.OwnerGet">
            <summary>Задает stub INestedContainer.get_Owner()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubINestedContainer.RemoveIComponent">
            <summary>Задает stub IContainer.Remove(IComponent component)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubINestedContainer.System#ComponentModel#IContainer#Add(System.ComponentModel.IComponent)">
            <summary>Задает заглушка IContainer.Add(IComponent component)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubINestedContainer.System#ComponentModel#IContainer#Add(System.ComponentModel.IComponent,System.String)">
            <summary>Задает заглушка IContainer.Add(IComponent component, String name)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubINestedContainer.System#ComponentModel#IContainer#Remove(System.ComponentModel.IComponent)">
            <summary>Задает заглушка IContainer.Remove(IComponent component)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubINestedContainer.System#IDisposable#Dispose">
            <summary>Задает заглушка IDisposable.Dispose()</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.StubINestedSite">
            <summary>Тип заглушки System.ComponentModel.INestedSite</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubINestedSite.#ctor">
            <summary>Инициализирует новый экземпляр type StubINestedSite</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubINestedSite.AttachBackingFieldToName">
            <summary>Присоединение делегатов для эмуляции StubINestedSite.Name как свойства с резервным полем.</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubINestedSite.System#ComponentModel#ISite#Component">
            <summary>Задает stub ISite.get_Component()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubINestedSite.ComponentGet">
            <summary>Задает stub ISite.get_Component()</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubINestedSite.System#ComponentModel#ISite#Container">
            <summary>Задает stub ISite.get_Container()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubINestedSite.ContainerGet">
            <summary>Задает stub ISite.get_Container()</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubINestedSite.System#ComponentModel#ISite#DesignMode">
            <summary>Задает stub ISite.get_DesignMode()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubINestedSite.DesignModeGet">
            <summary>Задает stub ISite.get_DesignMode()</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubINestedSite.System#ComponentModel#INestedSite#FullName">
            <summary>Задает stub INestedSite.get_FullName()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubINestedSite.FullNameGet">
            <summary>Задает stub INestedSite.get_FullName()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubINestedSite.GetServiceType">
            <summary>Задает stub IServiceProvider.GetService(Type serviceType)</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubINestedSite.System#ComponentModel#ISite#Name">
            <summary>Задает stub ISite.get_Name()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubINestedSite.NameGet">
            <summary>Задает stub ISite.get_Name()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubINestedSite.NameSetString">
            <summary>Задает stub ISite.set_Name(String value)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubINestedSite.System#IServiceProvider#GetService(System.Type)">
            <summary>Задает заглушка IServiceProvider.GetService(Type serviceType)</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.StubINotifyDataErrorInfo">
            <summary>Тип заглушки System.ComponentModel.INotifyDataErrorInfo</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubINotifyDataErrorInfo.#ctor">
            <summary>Инициализирует новый экземпляр type StubINotifyDataErrorInfo</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubINotifyDataErrorInfo.GetErrorsString">
            <summary>Задает stub INotifyDataErrorInfo.GetErrors(String propertyName)</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubINotifyDataErrorInfo.System#ComponentModel#INotifyDataErrorInfo#HasErrors">
            <summary>Задает stub INotifyDataErrorInfo.get_HasErrors()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubINotifyDataErrorInfo.HasErrorsGet">
            <summary>Задает stub INotifyDataErrorInfo.get_HasErrors()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubINotifyDataErrorInfo.System#ComponentModel#INotifyDataErrorInfo#GetErrors(System.String)">
            <summary>Задает заглушка INotifyDataErrorInfo.GetErrors(String propertyName)</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.StubINotifyPropertyChanged">
            <summary>Тип заглушки System.ComponentModel.INotifyPropertyChanged</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubINotifyPropertyChanged.#ctor">
            <summary>Инициализирует новый экземпляр type StubINotifyPropertyChanged</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.StubINotifyPropertyChanging">
            <summary>Тип заглушки System.ComponentModel.INotifyPropertyChanging</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubINotifyPropertyChanging.#ctor">
            <summary>Инициализирует новый экземпляр type StubINotifyPropertyChanging</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.StubIRaiseItemChangedEvents">
            <summary>Тип заглушки System.ComponentModel.IRaiseItemChangedEvents</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubIRaiseItemChangedEvents.#ctor">
            <summary>Инициализирует новый экземпляр type StubIRaiseItemChangedEvents</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubIRaiseItemChangedEvents.System#ComponentModel#IRaiseItemChangedEvents#RaisesItemChangedEvents">
            <summary>Задает stub IRaiseItemChangedEvents.get_RaisesItemChangedEvents()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIRaiseItemChangedEvents.RaisesItemChangedEventsGet">
            <summary>Задает stub IRaiseItemChangedEvents.get_RaisesItemChangedEvents()</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.StubIRevertibleChangeTracking">
            <summary>Тип заглушки System.ComponentModel.IRevertibleChangeTracking</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubIRevertibleChangeTracking.#ctor">
            <summary>Инициализирует новый экземпляр type StubIRevertibleChangeTracking</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIRevertibleChangeTracking.AcceptChanges">
            <summary>Задает stub IChangeTracking.AcceptChanges()</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubIRevertibleChangeTracking.System#ComponentModel#IChangeTracking#IsChanged">
            <summary>Задает stub IChangeTracking.get_IsChanged()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIRevertibleChangeTracking.IsChangedGet">
            <summary>Задает stub IChangeTracking.get_IsChanged()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIRevertibleChangeTracking.RejectChanges">
            <summary>Задает stub IRevertibleChangeTracking.RejectChanges()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubIRevertibleChangeTracking.System#ComponentModel#IChangeTracking#AcceptChanges">
            <summary>Задает заглушка IChangeTracking.AcceptChanges()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubIRevertibleChangeTracking.System#ComponentModel#IRevertibleChangeTracking#RejectChanges">
            <summary>Задает заглушка IRevertibleChangeTracking.RejectChanges()</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.StubISite">
            <summary>Тип заглушки System.ComponentModel.ISite</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubISite.#ctor">
            <summary>Инициализирует новый экземпляр type StubISite</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubISite.AttachBackingFieldToName">
            <summary>Присоединение делегатов для эмуляции StubISite.Name как свойства с резервным полем.</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubISite.System#ComponentModel#ISite#Component">
            <summary>Задает stub ISite.get_Component()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubISite.ComponentGet">
            <summary>Задает stub ISite.get_Component()</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubISite.System#ComponentModel#ISite#Container">
            <summary>Задает stub ISite.get_Container()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubISite.ContainerGet">
            <summary>Задает stub ISite.get_Container()</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubISite.System#ComponentModel#ISite#DesignMode">
            <summary>Задает stub ISite.get_DesignMode()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubISite.DesignModeGet">
            <summary>Задает stub ISite.get_DesignMode()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubISite.GetServiceType">
            <summary>Задает stub IServiceProvider.GetService(Type serviceType)</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubISite.System#ComponentModel#ISite#Name">
            <summary>Задает stub ISite.get_Name()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubISite.NameGet">
            <summary>Задает stub ISite.get_Name()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubISite.NameSetString">
            <summary>Задает stub ISite.set_Name(String value)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubISite.System#IServiceProvider#GetService(System.Type)">
            <summary>Задает заглушка IServiceProvider.GetService(Type serviceType)</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.StubISupportInitialize">
            <summary>Тип заглушки System.ComponentModel.ISupportInitialize</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubISupportInitialize.#ctor">
            <summary>Инициализирует новый экземпляр type StubISupportInitialize</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubISupportInitialize.BeginInit">
            <summary>Задает stub ISupportInitialize.BeginInit()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubISupportInitialize.EndInit">
            <summary>Задает stub ISupportInitialize.EndInit()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubISupportInitialize.System#ComponentModel#ISupportInitialize#BeginInit">
            <summary>Задает заглушка ISupportInitialize.BeginInit()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubISupportInitialize.System#ComponentModel#ISupportInitialize#EndInit">
            <summary>Задает заглушка ISupportInitialize.EndInit()</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.StubISupportInitializeNotification">
            <summary>Тип заглушки System.ComponentModel.ISupportInitializeNotification</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubISupportInitializeNotification.#ctor">
            <summary>Инициализирует новый экземпляр type StubISupportInitializeNotification</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubISupportInitializeNotification.BeginInit">
            <summary>Задает stub ISupportInitialize.BeginInit()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubISupportInitializeNotification.EndInit">
            <summary>Задает stub ISupportInitialize.EndInit()</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubISupportInitializeNotification.System#ComponentModel#ISupportInitializeNotification#IsInitialized">
            <summary>Задает stub ISupportInitializeNotification.get_IsInitialized()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubISupportInitializeNotification.IsInitializedGet">
            <summary>Задает stub ISupportInitializeNotification.get_IsInitialized()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubISupportInitializeNotification.System#ComponentModel#ISupportInitialize#BeginInit">
            <summary>Задает заглушка ISupportInitialize.BeginInit()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubISupportInitializeNotification.System#ComponentModel#ISupportInitialize#EndInit">
            <summary>Задает заглушка ISupportInitialize.EndInit()</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.StubISynchronizeInvoke">
            <summary>Тип заглушки System.ComponentModel.ISynchronizeInvoke</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubISynchronizeInvoke.#ctor">
            <summary>Инициализирует новый экземпляр type StubISynchronizeInvoke</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubISynchronizeInvoke.BeginInvokeDelegateObjectArray">
            <summary>Задает stub ISynchronizeInvoke.BeginInvoke(Delegate method, Object[] args)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubISynchronizeInvoke.EndInvokeIAsyncResult">
            <summary>Задает stub ISynchronizeInvoke.EndInvoke(IAsyncResult result)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubISynchronizeInvoke.InvokeDelegateObjectArray">
            <summary>Задает stub ISynchronizeInvoke.Invoke(Delegate method, Object[] args)</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubISynchronizeInvoke.System#ComponentModel#ISynchronizeInvoke#InvokeRequired">
            <summary>Задает stub ISynchronizeInvoke.get_InvokeRequired()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubISynchronizeInvoke.InvokeRequiredGet">
            <summary>Задает stub ISynchronizeInvoke.get_InvokeRequired()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubISynchronizeInvoke.System#ComponentModel#ISynchronizeInvoke#BeginInvoke(System.Delegate,System.Object[])">
            <summary>Задает заглушка ISynchronizeInvoke.BeginInvoke(Delegate method, Object[] args)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubISynchronizeInvoke.System#ComponentModel#ISynchronizeInvoke#EndInvoke(System.IAsyncResult)">
            <summary>Задает заглушка ISynchronizeInvoke.EndInvoke(IAsyncResult result)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubISynchronizeInvoke.System#ComponentModel#ISynchronizeInvoke#Invoke(System.Delegate,System.Object[])">
            <summary>Задает заглушка ISynchronizeInvoke.Invoke(Delegate method, Object[] args)</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.StubITypeDescriptorContext">
            <summary>Тип заглушки System.ComponentModel.ITypeDescriptorContext</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubITypeDescriptorContext.#ctor">
            <summary>Инициализирует новый экземпляр type StubITypeDescriptorContext</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubITypeDescriptorContext.System#ComponentModel#ITypeDescriptorContext#Container">
            <summary>Задает stub ITypeDescriptorContext.get_Container()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubITypeDescriptorContext.ContainerGet">
            <summary>Задает stub ITypeDescriptorContext.get_Container()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubITypeDescriptorContext.GetServiceType">
            <summary>Задает stub IServiceProvider.GetService(Type serviceType)</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubITypeDescriptorContext.System#ComponentModel#ITypeDescriptorContext#Instance">
            <summary>Задает stub ITypeDescriptorContext.get_Instance()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubITypeDescriptorContext.InstanceGet">
            <summary>Задает stub ITypeDescriptorContext.get_Instance()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubITypeDescriptorContext.OnComponentChanged">
            <summary>Задает stub ITypeDescriptorContext.OnComponentChanged()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubITypeDescriptorContext.OnComponentChanging">
            <summary>Задает stub ITypeDescriptorContext.OnComponentChanging()</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubITypeDescriptorContext.System#ComponentModel#ITypeDescriptorContext#PropertyDescriptor">
            <summary>Задает stub ITypeDescriptorContext.get_PropertyDescriptor()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubITypeDescriptorContext.PropertyDescriptorGet">
            <summary>Задает stub ITypeDescriptorContext.get_PropertyDescriptor()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubITypeDescriptorContext.System#ComponentModel#ITypeDescriptorContext#OnComponentChanged">
            <summary>Задает заглушка ITypeDescriptorContext.OnComponentChanged()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubITypeDescriptorContext.System#ComponentModel#ITypeDescriptorContext#OnComponentChanging">
            <summary>Задает заглушка ITypeDescriptorContext.OnComponentChanging()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubITypeDescriptorContext.System#IServiceProvider#GetService(System.Type)">
            <summary>Задает заглушка IServiceProvider.GetService(Type serviceType)</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.StubITypedList">
            <summary>Тип заглушки System.ComponentModel.ITypedList</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubITypedList.#ctor">
            <summary>Инициализирует новый экземпляр type StubITypedList</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubITypedList.GetItemPropertiesPropertyDescriptorArray">
            <summary>Задает stub ITypedList.GetItemProperties(PropertyDescriptor[] listAccessors)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubITypedList.GetListNamePropertyDescriptorArray">
            <summary>Задает stub ITypedList.GetListName(PropertyDescriptor[] listAccessors)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubITypedList.System#ComponentModel#ITypedList#GetItemProperties(System.ComponentModel.PropertyDescriptor[])">
            <summary>Задает заглушка ITypedList.GetItemProperties(PropertyDescriptor[] listAccessors)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubITypedList.System#ComponentModel#ITypedList#GetListName(System.ComponentModel.PropertyDescriptor[])">
            <summary>Задает заглушка ITypedList.GetListName(PropertyDescriptor[] listAccessors)</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.StubInstallerTypeAttribute">
            <summary>Тип заглушки System.ComponentModel.InstallerTypeAttribute</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubInstallerTypeAttribute.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubInstallerTypeAttribute.#ctor(System.Type)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubInstallerTypeAttribute.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubInstallerTypeAttribute.Equals(System.Object)">
            <summary>Задает заглушка InstallerTypeAttribute.Equals(Object obj)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubInstallerTypeAttribute.EqualsObject">
            <summary>Задает stub InstallerTypeAttribute.Equals(Object obj)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubInstallerTypeAttribute.GetHashCode">
            <summary>Задает заглушка InstallerTypeAttribute.GetHashCode()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubInstallerTypeAttribute.GetHashCode01">
            <summary>Задает stub InstallerTypeAttribute.GetHashCode()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubInstallerTypeAttribute.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubInstallerTypeAttribute</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubInstallerTypeAttribute.InstallerType">
            <summary>Задает stub InstallerTypeAttribute.get_InstallerType()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubInstallerTypeAttribute.InstallerTypeGet">
            <summary>Задает stub InstallerTypeAttribute.get_InstallerType()</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubInstallerTypeAttribute.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubInstallerTypeAttribute.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubInstallerTypeAttribute.IsDefaultAttribute">
            <summary>Задает заглушка Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubInstallerTypeAttribute.IsDefaultAttribute01">
            <summary>Задает stub Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubInstallerTypeAttribute.Match(System.Object)">
            <summary>Задает заглушка Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubInstallerTypeAttribute.MatchObject">
            <summary>Задает stub Attribute.Match(Object obj)</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubInstallerTypeAttribute.TypeId">
            <summary>Задает stub Attribute.get_TypeId()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubInstallerTypeAttribute.TypeIdGet">
            <summary>Задает stub Attribute.get_TypeId()</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.StubInstanceCreationEditor">
            <summary>Тип заглушки System.ComponentModel.InstanceCreationEditor</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubInstanceCreationEditor.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubInstanceCreationEditor.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubInstanceCreationEditor.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>Задает заглушка InstanceCreationEditor.CreateInstance(ITypeDescriptorContext context, Type instanceType)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubInstanceCreationEditor.CreateInstanceITypeDescriptorContextType">
            <summary>Задает stub InstanceCreationEditor.CreateInstance(ITypeDescriptorContext context, Type instanceType)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubInstanceCreationEditor.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubInstanceCreationEditor</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubInstanceCreationEditor.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubInstanceCreationEditor.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubInstanceCreationEditor.Text">
            <summary>Задает stub InstanceCreationEditor.get_Text()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubInstanceCreationEditor.TextGet">
            <summary>Задает stub InstanceCreationEditor.get_Text()</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.StubInvalidAsynchronousStateException">
            <summary>Тип заглушки System.ComponentModel.InvalidAsynchronousStateException</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubInvalidAsynchronousStateException.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubInvalidAsynchronousStateException.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubInvalidAsynchronousStateException.#ctor(System.String,System.Exception)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubInvalidAsynchronousStateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubInvalidAsynchronousStateException.AttachBackingFieldToHelpLink">
            <summary>Присоединение делегатов для эмуляции StubInvalidAsynchronousStateException.HelpLink как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubInvalidAsynchronousStateException.AttachBackingFieldToSource">
            <summary>Присоединение делегатов для эмуляции StubInvalidAsynchronousStateException.Source как свойства с резервным полем.</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubInvalidAsynchronousStateException.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubInvalidAsynchronousStateException.Data">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubInvalidAsynchronousStateException.DataGet">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubInvalidAsynchronousStateException.GetBaseException">
            <summary>Задает заглушка Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubInvalidAsynchronousStateException.GetBaseException01">
            <summary>Задает stub Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubInvalidAsynchronousStateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка ArgumentException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubInvalidAsynchronousStateException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub ArgumentException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubInvalidAsynchronousStateException.HelpLink">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubInvalidAsynchronousStateException.HelpLinkGet">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubInvalidAsynchronousStateException.HelpLinkSetString">
            <summary>Задает stub Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubInvalidAsynchronousStateException.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubInvalidAsynchronousStateException</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubInvalidAsynchronousStateException.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubInvalidAsynchronousStateException.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubInvalidAsynchronousStateException.Message">
            <summary>Задает stub ArgumentException.get_Message()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubInvalidAsynchronousStateException.MessageGet">
            <summary>Задает stub ArgumentException.get_Message()</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubInvalidAsynchronousStateException.ParamName">
            <summary>Задает stub ArgumentException.get_ParamName()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubInvalidAsynchronousStateException.ParamNameGet">
            <summary>Задает stub ArgumentException.get_ParamName()</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubInvalidAsynchronousStateException.Source">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubInvalidAsynchronousStateException.SourceGet">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubInvalidAsynchronousStateException.SourceSetString">
            <summary>Задает stub Exception.set_Source(String value)</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubInvalidAsynchronousStateException.StackTrace">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubInvalidAsynchronousStateException.StackTraceGet">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubInvalidAsynchronousStateException.ToString">
            <summary>Задает заглушка Exception.ToString()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubInvalidAsynchronousStateException.ToString01">
            <summary>Задает stub Exception.ToString()</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.StubInvalidEnumArgumentException">
            <summary>Тип заглушки System.ComponentModel.InvalidEnumArgumentException</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubInvalidEnumArgumentException.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubInvalidEnumArgumentException.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubInvalidEnumArgumentException.#ctor(System.String,System.Exception)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubInvalidEnumArgumentException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubInvalidEnumArgumentException.#ctor(System.String,System.Int32,System.Type)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubInvalidEnumArgumentException.AttachBackingFieldToHelpLink">
            <summary>Присоединение делегатов для эмуляции StubInvalidEnumArgumentException.HelpLink как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubInvalidEnumArgumentException.AttachBackingFieldToSource">
            <summary>Присоединение делегатов для эмуляции StubInvalidEnumArgumentException.Source как свойства с резервным полем.</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubInvalidEnumArgumentException.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubInvalidEnumArgumentException.Data">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubInvalidEnumArgumentException.DataGet">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubInvalidEnumArgumentException.GetBaseException">
            <summary>Задает заглушка Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubInvalidEnumArgumentException.GetBaseException01">
            <summary>Задает stub Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubInvalidEnumArgumentException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка ArgumentException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubInvalidEnumArgumentException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub ArgumentException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubInvalidEnumArgumentException.HelpLink">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubInvalidEnumArgumentException.HelpLinkGet">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubInvalidEnumArgumentException.HelpLinkSetString">
            <summary>Задает stub Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubInvalidEnumArgumentException.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubInvalidEnumArgumentException</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubInvalidEnumArgumentException.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubInvalidEnumArgumentException.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubInvalidEnumArgumentException.Message">
            <summary>Задает stub ArgumentException.get_Message()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubInvalidEnumArgumentException.MessageGet">
            <summary>Задает stub ArgumentException.get_Message()</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubInvalidEnumArgumentException.ParamName">
            <summary>Задает stub ArgumentException.get_ParamName()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubInvalidEnumArgumentException.ParamNameGet">
            <summary>Задает stub ArgumentException.get_ParamName()</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubInvalidEnumArgumentException.Source">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubInvalidEnumArgumentException.SourceGet">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubInvalidEnumArgumentException.SourceSetString">
            <summary>Задает stub Exception.set_Source(String value)</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubInvalidEnumArgumentException.StackTrace">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubInvalidEnumArgumentException.StackTraceGet">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubInvalidEnumArgumentException.ToString">
            <summary>Задает заглушка Exception.ToString()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubInvalidEnumArgumentException.ToString01">
            <summary>Задает stub Exception.ToString()</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.StubLicFileLicenseProvider">
            <summary>Тип заглушки System.ComponentModel.LicFileLicenseProvider</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubLicFileLicenseProvider.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubLicFileLicenseProvider.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubLicFileLicenseProvider.GetKey(System.Type)">
            <summary>Задает заглушка LicFileLicenseProvider.GetKey(Type type)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubLicFileLicenseProvider.GetKeyType">
            <summary>Задает stub LicFileLicenseProvider.GetKey(Type type)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubLicFileLicenseProvider.GetLicense(System.ComponentModel.LicenseContext,System.Type,System.Object,System.Boolean)">
            <summary>Задает заглушка LicFileLicenseProvider.GetLicense(LicenseContext context, Type type, Object instance, Boolean allowExceptions)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubLicFileLicenseProvider.GetLicenseLicenseContextTypeObjectBoolean">
            <summary>Задает stub LicFileLicenseProvider.GetLicense(LicenseContext context, Type type, Object instance, Boolean allowExceptions)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubLicFileLicenseProvider.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubLicFileLicenseProvider</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubLicFileLicenseProvider.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubLicFileLicenseProvider.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubLicFileLicenseProvider.IsKeyValid(System.String,System.Type)">
            <summary>Задает заглушка LicFileLicenseProvider.IsKeyValid(String key, Type type)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubLicFileLicenseProvider.IsKeyValidStringType">
            <summary>Задает stub LicFileLicenseProvider.IsKeyValid(String key, Type type)</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.StubLicense">
            <summary>Тип заглушки System.ComponentModel.License</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubLicense.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubLicense.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubLicense.Dispose">
            <summary>Задает заглушка License.Dispose()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubLicense.Dispose01">
            <summary>Задает stub License.Dispose()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubLicense.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubLicense</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubLicense.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubLicense.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubLicense.LicenseKey">
            <summary>Задает stub License.get_LicenseKey()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubLicense.LicenseKeyGet">
            <summary>Задает stub License.get_LicenseKey()</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.StubLicenseContext">
            <summary>Тип заглушки System.ComponentModel.LicenseContext</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubLicenseContext.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubLicenseContext.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubLicenseContext.GetSavedLicenseKey(System.Type,System.Reflection.Assembly)">
            <summary>Задает заглушка LicenseContext.GetSavedLicenseKey(Type type, Assembly resourceAssembly)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubLicenseContext.GetSavedLicenseKeyTypeAssembly">
            <summary>Задает stub LicenseContext.GetSavedLicenseKey(Type type, Assembly resourceAssembly)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubLicenseContext.GetService(System.Type)">
            <summary>Задает заглушка LicenseContext.GetService(Type type)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubLicenseContext.GetServiceType">
            <summary>Задает stub LicenseContext.GetService(Type type)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubLicenseContext.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubLicenseContext</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubLicenseContext.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubLicenseContext.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubLicenseContext.SetSavedLicenseKey(System.Type,System.String)">
            <summary>Задает заглушка LicenseContext.SetSavedLicenseKey(Type type, String key)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubLicenseContext.SetSavedLicenseKeyTypeString">
            <summary>Задает stub LicenseContext.SetSavedLicenseKey(Type type, String key)</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubLicenseContext.UsageMode">
            <summary>Задает stub LicenseContext.get_UsageMode()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubLicenseContext.UsageModeGet">
            <summary>Задает stub LicenseContext.get_UsageMode()</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.StubLicenseException">
            <summary>Тип заглушки System.ComponentModel.LicenseException</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubLicenseException.#ctor(System.Type)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubLicenseException.#ctor(System.Type,System.Object)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubLicenseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubLicenseException.#ctor(System.Type,System.Object,System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubLicenseException.#ctor(System.Type,System.Object,System.String,System.Exception)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubLicenseException.AttachBackingFieldToHelpLink">
            <summary>Присоединение делегатов для эмуляции StubLicenseException.HelpLink как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubLicenseException.AttachBackingFieldToSource">
            <summary>Присоединение делегатов для эмуляции StubLicenseException.Source как свойства с резервным полем.</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubLicenseException.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubLicenseException.Data">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubLicenseException.DataGet">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubLicenseException.GetBaseException">
            <summary>Задает заглушка Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubLicenseException.GetBaseException01">
            <summary>Задает stub Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubLicenseException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка LicenseException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubLicenseException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub LicenseException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubLicenseException.HelpLink">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubLicenseException.HelpLinkGet">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubLicenseException.HelpLinkSetString">
            <summary>Задает stub Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubLicenseException.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubLicenseException</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubLicenseException.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubLicenseException.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubLicenseException.Message">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubLicenseException.MessageGet">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubLicenseException.Source">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubLicenseException.SourceGet">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubLicenseException.SourceSetString">
            <summary>Задает stub Exception.set_Source(String value)</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubLicenseException.StackTrace">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubLicenseException.StackTraceGet">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubLicenseException.ToString">
            <summary>Задает заглушка Exception.ToString()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubLicenseException.ToString01">
            <summary>Задает stub Exception.ToString()</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.StubLicenseProvider">
            <summary>Тип заглушки System.ComponentModel.LicenseProvider</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubLicenseProvider.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubLicenseProvider.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubLicenseProvider.GetLicense(System.ComponentModel.LicenseContext,System.Type,System.Object,System.Boolean)">
            <summary>Задает заглушка LicenseProvider.GetLicense(LicenseContext context, Type type, Object instance, Boolean allowExceptions)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubLicenseProvider.GetLicenseLicenseContextTypeObjectBoolean">
            <summary>Задает stub LicenseProvider.GetLicense(LicenseContext context, Type type, Object instance, Boolean allowExceptions)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubLicenseProvider.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubLicenseProvider</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubLicenseProvider.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubLicenseProvider.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.StubListChangedEventArgs">
            <summary>Тип заглушки System.ComponentModel.ListChangedEventArgs</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubListChangedEventArgs.#ctor(System.ComponentModel.ListChangedType,System.Int32)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubListChangedEventArgs.#ctor(System.ComponentModel.ListChangedType,System.ComponentModel.PropertyDescriptor)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubListChangedEventArgs.#ctor(System.ComponentModel.ListChangedType,System.Int32,System.Int32)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubListChangedEventArgs.#ctor(System.ComponentModel.ListChangedType,System.Int32,System.ComponentModel.PropertyDescriptor)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubListChangedEventArgs.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubListChangedEventArgs.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubListChangedEventArgs</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubListChangedEventArgs.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubListChangedEventArgs.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.StubListSortDescription">
            <summary>Тип заглушки System.ComponentModel.ListSortDescription</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubListSortDescription.#ctor(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubListSortDescription.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubListSortDescription.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubListSortDescription</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubListSortDescription.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubListSortDescription.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.StubListSortDescriptionCollection">
            <summary>Тип заглушки System.ComponentModel.ListSortDescriptionCollection</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubListSortDescriptionCollection.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubListSortDescriptionCollection.#ctor(System.ComponentModel.ListSortDescription[])">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubListSortDescriptionCollection.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubListSortDescriptionCollection.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubListSortDescriptionCollection</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubListSortDescriptionCollection.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubListSortDescriptionCollection.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.StubMarshalByValueComponent">
            <summary>Тип заглушки System.ComponentModel.MarshalByValueComponent</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubMarshalByValueComponent.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubMarshalByValueComponent.AttachBackingFieldToSite">
            <summary>Присоединение делегатов для эмуляции StubMarshalByValueComponent.Site как свойства с резервным полем.</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubMarshalByValueComponent.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubMarshalByValueComponent.Container">
            <summary>Задает stub MarshalByValueComponent.get_Container()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubMarshalByValueComponent.ContainerGet">
            <summary>Задает stub MarshalByValueComponent.get_Container()</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubMarshalByValueComponent.DesignMode">
            <summary>Задает stub MarshalByValueComponent.get_DesignMode()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubMarshalByValueComponent.DesignModeGet">
            <summary>Задает stub MarshalByValueComponent.get_DesignMode()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubMarshalByValueComponent.Dispose(System.Boolean)">
            <summary>Задает заглушка MarshalByValueComponent.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubMarshalByValueComponent.DisposeBoolean">
            <summary>Задает stub MarshalByValueComponent.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubMarshalByValueComponent.GetService(System.Type)">
            <summary>Задает заглушка MarshalByValueComponent.GetService(Type service)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubMarshalByValueComponent.GetServiceType">
            <summary>Задает stub MarshalByValueComponent.GetService(Type service)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubMarshalByValueComponent.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubMarshalByValueComponent</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubMarshalByValueComponent.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubMarshalByValueComponent.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubMarshalByValueComponent.Site">
            <summary>Задает stub MarshalByValueComponent.get_Site()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubMarshalByValueComponent.SiteGet">
            <summary>Задает stub MarshalByValueComponent.get_Site()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubMarshalByValueComponent.SiteSetISite">
            <summary>Задает stub MarshalByValueComponent.set_Site(ISite value)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubMarshalByValueComponent.ToString">
            <summary>Задает заглушка MarshalByValueComponent.ToString()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubMarshalByValueComponent.ToString01">
            <summary>Задает stub MarshalByValueComponent.ToString()</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.StubMaskedTextProvider">
            <summary>Тип заглушки System.ComponentModel.MaskedTextProvider</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubMaskedTextProvider.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubMaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubMaskedTextProvider.#ctor(System.String,System.Boolean)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubMaskedTextProvider.#ctor(System.String,System.Char,System.Boolean)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubMaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo,System.Boolean)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubMaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo,System.Char,System.Boolean)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubMaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo,System.Boolean,System.Char,System.Char,System.Boolean)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubMaskedTextProvider.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubMaskedTextProvider.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubMaskedTextProvider</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubMaskedTextProvider.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubMaskedTextProvider.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubMaskedTextProvider.ToString">
            <summary>Задает заглушка MaskedTextProvider.ToString()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubMaskedTextProvider.ToString01">
            <summary>Задает stub MaskedTextProvider.ToString()</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.StubMemberDescriptor">
            <summary>Тип заглушки System.ComponentModel.MemberDescriptor</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubMemberDescriptor.#ctor(System.ComponentModel.MemberDescriptor)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubMemberDescriptor.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubMemberDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubMemberDescriptor.#ctor(System.String,System.Attribute[])">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubMemberDescriptor.AttachBackingFieldToAttributeArray">
            <summary>Присоединение делегатов для эмуляции StubMemberDescriptor.AttributeArray как свойства с резервным полем.</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubMemberDescriptor.AttributeArray">
            <summary>Задает stub MemberDescriptor.get_AttributeArray()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubMemberDescriptor.AttributeArrayGet">
            <summary>Задает stub MemberDescriptor.get_AttributeArray()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubMemberDescriptor.AttributeArraySetAttributeArray">
            <summary>Задает stub MemberDescriptor.set_AttributeArray(Attribute[] value)</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubMemberDescriptor.Attributes">
            <summary>Задает stub MemberDescriptor.get_Attributes()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubMemberDescriptor.AttributesGet">
            <summary>Задает stub MemberDescriptor.get_Attributes()</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubMemberDescriptor.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubMemberDescriptor.Category">
            <summary>Задает stub MemberDescriptor.get_Category()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubMemberDescriptor.CategoryGet">
            <summary>Задает stub MemberDescriptor.get_Category()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubMemberDescriptor.CreateAttributeCollection">
            <summary>Задает заглушка MemberDescriptor.CreateAttributeCollection()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubMemberDescriptor.CreateAttributeCollection01">
            <summary>Задает stub MemberDescriptor.CreateAttributeCollection()</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubMemberDescriptor.Description">
            <summary>Задает stub MemberDescriptor.get_Description()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubMemberDescriptor.DescriptionGet">
            <summary>Задает stub MemberDescriptor.get_Description()</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubMemberDescriptor.DesignTimeOnly">
            <summary>Задает stub MemberDescriptor.get_DesignTimeOnly()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubMemberDescriptor.DesignTimeOnlyGet">
            <summary>Задает stub MemberDescriptor.get_DesignTimeOnly()</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubMemberDescriptor.DisplayName">
            <summary>Задает stub MemberDescriptor.get_DisplayName()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubMemberDescriptor.DisplayNameGet">
            <summary>Задает stub MemberDescriptor.get_DisplayName()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubMemberDescriptor.Equals(System.Object)">
            <summary>Задает заглушка MemberDescriptor.Equals(Object obj)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubMemberDescriptor.EqualsObject">
            <summary>Задает stub MemberDescriptor.Equals(Object obj)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubMemberDescriptor.FillAttributes(System.Collections.IList)">
            <summary>Задает заглушка MemberDescriptor.FillAttributes(IList attributeList)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubMemberDescriptor.FillAttributesIList">
            <summary>Задает stub MemberDescriptor.FillAttributes(IList attributeList)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubMemberDescriptor.GetHashCode">
            <summary>Задает заглушка MemberDescriptor.GetHashCode()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubMemberDescriptor.GetHashCode01">
            <summary>Задает stub MemberDescriptor.GetHashCode()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubMemberDescriptor.GetInvocationTarget(System.Type,System.Object)">
            <summary>Задает заглушка MemberDescriptor.GetInvocationTarget(Type type, Object instance)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubMemberDescriptor.GetInvocationTargetTypeObject">
            <summary>Задает stub MemberDescriptor.GetInvocationTarget(Type type, Object instance)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubMemberDescriptor.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubMemberDescriptor</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubMemberDescriptor.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubMemberDescriptor.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubMemberDescriptor.IsBrowsable">
            <summary>Задает stub MemberDescriptor.get_IsBrowsable()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubMemberDescriptor.IsBrowsableGet">
            <summary>Задает stub MemberDescriptor.get_IsBrowsable()</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubMemberDescriptor.Name">
            <summary>Задает stub MemberDescriptor.get_Name()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubMemberDescriptor.NameGet">
            <summary>Задает stub MemberDescriptor.get_Name()</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubMemberDescriptor.NameHashCode">
            <summary>Задает stub MemberDescriptor.get_NameHashCode()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubMemberDescriptor.NameHashCodeGet">
            <summary>Задает stub MemberDescriptor.get_NameHashCode()</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.StubMultilineStringConverter">
            <summary>Тип заглушки System.ComponentModel.MultilineStringConverter</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubMultilineStringConverter.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubMultilineStringConverter.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubMultilineStringConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>Задает заглушка TypeConverter.CanConvertFrom(ITypeDescriptorContext context, Type sourceType)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubMultilineStringConverter.CanConvertFromITypeDescriptorContextType">
            <summary>Задает stub TypeConverter.CanConvertFrom(ITypeDescriptorContext context, Type sourceType)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubMultilineStringConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>Задает заглушка TypeConverter.CanConvertTo(ITypeDescriptorContext context, Type destinationType)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubMultilineStringConverter.CanConvertToITypeDescriptorContextType">
            <summary>Задает stub TypeConverter.CanConvertTo(ITypeDescriptorContext context, Type destinationType)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubMultilineStringConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>Задает заглушка TypeConverter.ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, Object value)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubMultilineStringConverter.ConvertFromITypeDescriptorContextCultureInfoObject">
            <summary>Задает stub TypeConverter.ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, Object value)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubMultilineStringConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>Задает заглушка MultilineStringConverter.ConvertTo(ITypeDescriptorContext context, CultureInfo culture, Object value, Type destinationType)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubMultilineStringConverter.ConvertToITypeDescriptorContextCultureInfoObjectType">
            <summary>Задает stub MultilineStringConverter.ConvertTo(ITypeDescriptorContext context, CultureInfo culture, Object value, Type destinationType)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubMultilineStringConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
            <summary>Задает заглушка TypeConverter.CreateInstance(ITypeDescriptorContext context, IDictionary propertyValues)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubMultilineStringConverter.CreateInstanceITypeDescriptorContextIDictionary">
            <summary>Задает stub TypeConverter.CreateInstance(ITypeDescriptorContext context, IDictionary propertyValues)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubMultilineStringConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Задает заглушка TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubMultilineStringConverter.GetCreateInstanceSupportedITypeDescriptorContext">
            <summary>Задает stub TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubMultilineStringConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>Задает заглушка MultilineStringConverter.GetProperties(ITypeDescriptorContext context, Object value, Attribute[] attributes)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubMultilineStringConverter.GetPropertiesITypeDescriptorContextObjectAttributeArray">
            <summary>Задает stub MultilineStringConverter.GetProperties(ITypeDescriptorContext context, Object value, Attribute[] attributes)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubMultilineStringConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Задает заглушка MultilineStringConverter.GetPropertiesSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubMultilineStringConverter.GetPropertiesSupportedITypeDescriptorContext">
            <summary>Задает stub MultilineStringConverter.GetPropertiesSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubMultilineStringConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Задает заглушка TypeConverter.GetStandardValues(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubMultilineStringConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Задает заглушка TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubMultilineStringConverter.GetStandardValuesExclusiveITypeDescriptorContext">
            <summary>Задает stub TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubMultilineStringConverter.GetStandardValuesITypeDescriptorContext">
            <summary>Задает stub TypeConverter.GetStandardValues(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubMultilineStringConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Задает заглушка TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubMultilineStringConverter.GetStandardValuesSupportedITypeDescriptorContext">
            <summary>Задает stub TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubMultilineStringConverter.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubMultilineStringConverter</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubMultilineStringConverter.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubMultilineStringConverter.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubMultilineStringConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)">
            <summary>Задает заглушка TypeConverter.IsValid(ITypeDescriptorContext context, Object value)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubMultilineStringConverter.IsValidITypeDescriptorContextObject">
            <summary>Задает stub TypeConverter.IsValid(ITypeDescriptorContext context, Object value)</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.StubNestedContainer">
            <summary>Тип заглушки System.ComponentModel.NestedContainer</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubNestedContainer.#ctor(System.ComponentModel.IComponent)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubNestedContainer.Add(System.ComponentModel.IComponent)">
            <summary>Задает заглушка Container.Add(IComponent component)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubNestedContainer.Add(System.ComponentModel.IComponent,System.String)">
            <summary>Задает заглушка Container.Add(IComponent component, String name)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubNestedContainer.AddIComponent">
            <summary>Задает stub Container.Add(IComponent component)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubNestedContainer.AddIComponentString">
            <summary>Задает stub Container.Add(IComponent component, String name)</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubNestedContainer.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubNestedContainer.Components">
            <summary>Задает stub Container.get_Components()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubNestedContainer.ComponentsGet">
            <summary>Задает stub Container.get_Components()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubNestedContainer.CreateSite(System.ComponentModel.IComponent,System.String)">
            <summary>Задает заглушка NestedContainer.CreateSite(IComponent component, String name)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubNestedContainer.CreateSiteIComponentString">
            <summary>Задает stub NestedContainer.CreateSite(IComponent component, String name)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubNestedContainer.Dispose(System.Boolean)">
            <summary>Задает заглушка NestedContainer.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubNestedContainer.DisposeBoolean">
            <summary>Задает stub NestedContainer.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubNestedContainer.GetService(System.Type)">
            <summary>Задает заглушка NestedContainer.GetService(Type service)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubNestedContainer.GetServiceType">
            <summary>Задает stub NestedContainer.GetService(Type service)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubNestedContainer.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubNestedContainer</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubNestedContainer.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubNestedContainer.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubNestedContainer.OwnerName">
            <summary>Задает stub NestedContainer.get_OwnerName()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubNestedContainer.OwnerNameGet">
            <summary>Задает stub NestedContainer.get_OwnerName()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubNestedContainer.Remove(System.ComponentModel.IComponent)">
            <summary>Задает заглушка Container.Remove(IComponent component)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubNestedContainer.RemoveIComponent">
            <summary>Задает stub Container.Remove(IComponent component)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubNestedContainer.ValidateName(System.ComponentModel.IComponent,System.String)">
            <summary>Задает заглушка Container.ValidateName(IComponent component, String name)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubNestedContainer.ValidateNameIComponentString">
            <summary>Задает stub Container.ValidateName(IComponent component, String name)</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.StubNullableConverter">
            <summary>Тип заглушки System.ComponentModel.NullableConverter</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubNullableConverter.#ctor(System.Type)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubNullableConverter.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubNullableConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>Задает заглушка NullableConverter.CanConvertFrom(ITypeDescriptorContext context, Type sourceType)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubNullableConverter.CanConvertFromITypeDescriptorContextType">
            <summary>Задает stub NullableConverter.CanConvertFrom(ITypeDescriptorContext context, Type sourceType)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubNullableConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>Задает заглушка NullableConverter.CanConvertTo(ITypeDescriptorContext context, Type destinationType)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubNullableConverter.CanConvertToITypeDescriptorContextType">
            <summary>Задает stub NullableConverter.CanConvertTo(ITypeDescriptorContext context, Type destinationType)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubNullableConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>Задает заглушка NullableConverter.ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, Object value)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubNullableConverter.ConvertFromITypeDescriptorContextCultureInfoObject">
            <summary>Задает stub NullableConverter.ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, Object value)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubNullableConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>Задает заглушка NullableConverter.ConvertTo(ITypeDescriptorContext context, CultureInfo culture, Object value, Type destinationType)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubNullableConverter.ConvertToITypeDescriptorContextCultureInfoObjectType">
            <summary>Задает stub NullableConverter.ConvertTo(ITypeDescriptorContext context, CultureInfo culture, Object value, Type destinationType)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubNullableConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
            <summary>Задает заглушка NullableConverter.CreateInstance(ITypeDescriptorContext context, IDictionary propertyValues)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubNullableConverter.CreateInstanceITypeDescriptorContextIDictionary">
            <summary>Задает stub NullableConverter.CreateInstance(ITypeDescriptorContext context, IDictionary propertyValues)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubNullableConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Задает заглушка NullableConverter.GetCreateInstanceSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubNullableConverter.GetCreateInstanceSupportedITypeDescriptorContext">
            <summary>Задает stub NullableConverter.GetCreateInstanceSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubNullableConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>Задает заглушка NullableConverter.GetProperties(ITypeDescriptorContext context, Object value, Attribute[] attributes)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubNullableConverter.GetPropertiesITypeDescriptorContextObjectAttributeArray">
            <summary>Задает stub NullableConverter.GetProperties(ITypeDescriptorContext context, Object value, Attribute[] attributes)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubNullableConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Задает заглушка NullableConverter.GetPropertiesSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubNullableConverter.GetPropertiesSupportedITypeDescriptorContext">
            <summary>Задает stub NullableConverter.GetPropertiesSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubNullableConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Задает заглушка NullableConverter.GetStandardValues(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubNullableConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Задает заглушка NullableConverter.GetStandardValuesExclusive(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubNullableConverter.GetStandardValuesExclusiveITypeDescriptorContext">
            <summary>Задает stub NullableConverter.GetStandardValuesExclusive(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubNullableConverter.GetStandardValuesITypeDescriptorContext">
            <summary>Задает stub NullableConverter.GetStandardValues(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubNullableConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Задает заглушка NullableConverter.GetStandardValuesSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubNullableConverter.GetStandardValuesSupportedITypeDescriptorContext">
            <summary>Задает stub NullableConverter.GetStandardValuesSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubNullableConverter.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubNullableConverter</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubNullableConverter.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubNullableConverter.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubNullableConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)">
            <summary>Задает заглушка NullableConverter.IsValid(ITypeDescriptorContext context, Object value)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubNullableConverter.IsValidITypeDescriptorContextObject">
            <summary>Задает stub NullableConverter.IsValid(ITypeDescriptorContext context, Object value)</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.StubProgressChangedEventArgs">
            <summary>Тип заглушки System.ComponentModel.ProgressChangedEventArgs</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubProgressChangedEventArgs.#ctor(System.Int32,System.Object)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubProgressChangedEventArgs.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubProgressChangedEventArgs.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubProgressChangedEventArgs</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubProgressChangedEventArgs.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubProgressChangedEventArgs.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.StubPropertyChangedEventArgs">
            <summary>Тип заглушки System.ComponentModel.PropertyChangedEventArgs</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubPropertyChangedEventArgs.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubPropertyChangedEventArgs.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubPropertyChangedEventArgs.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubPropertyChangedEventArgs</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubPropertyChangedEventArgs.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubPropertyChangedEventArgs.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubPropertyChangedEventArgs.PropertyName">
            <summary>Задает stub PropertyChangedEventArgs.get_PropertyName()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubPropertyChangedEventArgs.PropertyNameGet">
            <summary>Задает stub PropertyChangedEventArgs.get_PropertyName()</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.StubPropertyChangingEventArgs">
            <summary>Тип заглушки System.ComponentModel.PropertyChangingEventArgs</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubPropertyChangingEventArgs.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubPropertyChangingEventArgs.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubPropertyChangingEventArgs.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubPropertyChangingEventArgs</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubPropertyChangingEventArgs.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubPropertyChangingEventArgs.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubPropertyChangingEventArgs.PropertyName">
            <summary>Задает stub PropertyChangingEventArgs.get_PropertyName()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubPropertyChangingEventArgs.PropertyNameGet">
            <summary>Задает stub PropertyChangingEventArgs.get_PropertyName()</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.StubPropertyDescriptor">
            <summary>Тип заглушки System.ComponentModel.PropertyDescriptor</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubPropertyDescriptor.#ctor(System.ComponentModel.MemberDescriptor)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubPropertyDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubPropertyDescriptor.#ctor(System.String,System.Attribute[])">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubPropertyDescriptor.AddValueChanged(System.Object,System.EventHandler)">
            <summary>Задает заглушка PropertyDescriptor.AddValueChanged(Object component, EventHandler handler)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubPropertyDescriptor.AddValueChangedObjectEventHandler">
            <summary>Задает stub PropertyDescriptor.AddValueChanged(Object component, EventHandler handler)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubPropertyDescriptor.AttachBackingFieldToAttributeArray">
            <summary>Присоединение делегатов для эмуляции StubPropertyDescriptor.AttributeArray как свойства с резервным полем.</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubPropertyDescriptor.AttributeArray">
            <summary>Задает stub MemberDescriptor.get_AttributeArray()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubPropertyDescriptor.AttributeArrayGet">
            <summary>Задает stub MemberDescriptor.get_AttributeArray()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubPropertyDescriptor.AttributeArraySetAttributeArray">
            <summary>Задает stub MemberDescriptor.set_AttributeArray(Attribute[] value)</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubPropertyDescriptor.Attributes">
            <summary>Задает stub MemberDescriptor.get_Attributes()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubPropertyDescriptor.AttributesGet">
            <summary>Задает stub MemberDescriptor.get_Attributes()</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubPropertyDescriptor.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubPropertyDescriptor.CanResetValue(System.Object)">
            <summary>Задает заглушка PropertyDescriptor.CanResetValue(Object component)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubPropertyDescriptor.CanResetValueObject">
            <summary>Задает stub PropertyDescriptor.CanResetValue(Object component)</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubPropertyDescriptor.Category">
            <summary>Задает stub MemberDescriptor.get_Category()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubPropertyDescriptor.CategoryGet">
            <summary>Задает stub MemberDescriptor.get_Category()</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubPropertyDescriptor.ComponentType">
            <summary>Задает stub PropertyDescriptor.get_ComponentType()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubPropertyDescriptor.ComponentTypeGet">
            <summary>Задает stub PropertyDescriptor.get_ComponentType()</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubPropertyDescriptor.Converter">
            <summary>Задает stub PropertyDescriptor.get_Converter()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubPropertyDescriptor.ConverterGet">
            <summary>Задает stub PropertyDescriptor.get_Converter()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubPropertyDescriptor.CreateAttributeCollection">
            <summary>Задает заглушка MemberDescriptor.CreateAttributeCollection()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubPropertyDescriptor.CreateAttributeCollection01">
            <summary>Задает stub MemberDescriptor.CreateAttributeCollection()</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubPropertyDescriptor.Description">
            <summary>Задает stub MemberDescriptor.get_Description()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubPropertyDescriptor.DescriptionGet">
            <summary>Задает stub MemberDescriptor.get_Description()</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubPropertyDescriptor.DesignTimeOnly">
            <summary>Задает stub MemberDescriptor.get_DesignTimeOnly()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubPropertyDescriptor.DesignTimeOnlyGet">
            <summary>Задает stub MemberDescriptor.get_DesignTimeOnly()</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubPropertyDescriptor.DisplayName">
            <summary>Задает stub MemberDescriptor.get_DisplayName()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubPropertyDescriptor.DisplayNameGet">
            <summary>Задает stub MemberDescriptor.get_DisplayName()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubPropertyDescriptor.Equals(System.Object)">
            <summary>Задает заглушка PropertyDescriptor.Equals(Object obj)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubPropertyDescriptor.EqualsObject">
            <summary>Задает stub PropertyDescriptor.Equals(Object obj)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubPropertyDescriptor.FillAttributes(System.Collections.IList)">
            <summary>Задает заглушка PropertyDescriptor.FillAttributes(IList attributeList)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubPropertyDescriptor.FillAttributesIList">
            <summary>Задает stub PropertyDescriptor.FillAttributes(IList attributeList)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubPropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])">
            <summary>Задает заглушка PropertyDescriptor.GetChildProperties(Object instance, Attribute[] filter)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubPropertyDescriptor.GetChildPropertiesObjectAttributeArray">
            <summary>Задает stub PropertyDescriptor.GetChildProperties(Object instance, Attribute[] filter)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubPropertyDescriptor.GetEditor(System.Type)">
            <summary>Задает заглушка PropertyDescriptor.GetEditor(Type editorBaseType)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubPropertyDescriptor.GetEditorType">
            <summary>Задает stub PropertyDescriptor.GetEditor(Type editorBaseType)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubPropertyDescriptor.GetHashCode">
            <summary>Задает заглушка PropertyDescriptor.GetHashCode()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubPropertyDescriptor.GetHashCode01">
            <summary>Задает stub PropertyDescriptor.GetHashCode()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubPropertyDescriptor.GetInvocationTarget(System.Type,System.Object)">
            <summary>Задает заглушка PropertyDescriptor.GetInvocationTarget(Type type, Object instance)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubPropertyDescriptor.GetInvocationTargetTypeObject">
            <summary>Задает stub PropertyDescriptor.GetInvocationTarget(Type type, Object instance)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubPropertyDescriptor.GetValue(System.Object)">
            <summary>Задает заглушка PropertyDescriptor.GetValue(Object component)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubPropertyDescriptor.GetValueObject">
            <summary>Задает stub PropertyDescriptor.GetValue(Object component)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubPropertyDescriptor.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubPropertyDescriptor</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubPropertyDescriptor.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubPropertyDescriptor.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubPropertyDescriptor.IsBrowsable">
            <summary>Задает stub MemberDescriptor.get_IsBrowsable()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubPropertyDescriptor.IsBrowsableGet">
            <summary>Задает stub MemberDescriptor.get_IsBrowsable()</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubPropertyDescriptor.IsLocalizable">
            <summary>Задает stub PropertyDescriptor.get_IsLocalizable()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubPropertyDescriptor.IsLocalizableGet">
            <summary>Задает stub PropertyDescriptor.get_IsLocalizable()</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubPropertyDescriptor.IsReadOnly">
            <summary>Задает stub PropertyDescriptor.get_IsReadOnly()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubPropertyDescriptor.IsReadOnlyGet">
            <summary>Задает stub PropertyDescriptor.get_IsReadOnly()</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubPropertyDescriptor.Name">
            <summary>Задает stub MemberDescriptor.get_Name()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubPropertyDescriptor.NameGet">
            <summary>Задает stub MemberDescriptor.get_Name()</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubPropertyDescriptor.NameHashCode">
            <summary>Задает stub MemberDescriptor.get_NameHashCode()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubPropertyDescriptor.NameHashCodeGet">
            <summary>Задает stub MemberDescriptor.get_NameHashCode()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubPropertyDescriptor.OnValueChanged(System.Object,System.EventArgs)">
            <summary>Задает заглушка PropertyDescriptor.OnValueChanged(Object component, EventArgs e)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubPropertyDescriptor.OnValueChangedObjectEventArgs">
            <summary>Задает stub PropertyDescriptor.OnValueChanged(Object component, EventArgs e)</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubPropertyDescriptor.PropertyType">
            <summary>Задает stub PropertyDescriptor.get_PropertyType()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubPropertyDescriptor.PropertyTypeGet">
            <summary>Задает stub PropertyDescriptor.get_PropertyType()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubPropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)">
            <summary>Задает заглушка PropertyDescriptor.RemoveValueChanged(Object component, EventHandler handler)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubPropertyDescriptor.RemoveValueChangedObjectEventHandler">
            <summary>Задает stub PropertyDescriptor.RemoveValueChanged(Object component, EventHandler handler)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubPropertyDescriptor.ResetValue(System.Object)">
            <summary>Задает заглушка PropertyDescriptor.ResetValue(Object component)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubPropertyDescriptor.ResetValueObject">
            <summary>Задает stub PropertyDescriptor.ResetValue(Object component)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubPropertyDescriptor.SetValue(System.Object,System.Object)">
            <summary>Задает заглушка PropertyDescriptor.SetValue(Object component, Object value)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubPropertyDescriptor.SetValueObjectObject">
            <summary>Задает stub PropertyDescriptor.SetValue(Object component, Object value)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubPropertyDescriptor.ShouldSerializeValue(System.Object)">
            <summary>Задает заглушка PropertyDescriptor.ShouldSerializeValue(Object component)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubPropertyDescriptor.ShouldSerializeValueObject">
            <summary>Задает stub PropertyDescriptor.ShouldSerializeValue(Object component)</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubPropertyDescriptor.SupportsChangeEvents">
            <summary>Задает stub PropertyDescriptor.get_SupportsChangeEvents()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubPropertyDescriptor.SupportsChangeEventsGet">
            <summary>Задает stub PropertyDescriptor.get_SupportsChangeEvents()</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.StubPropertyDescriptorCollection">
            <summary>Тип заглушки System.ComponentModel.PropertyDescriptorCollection</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubPropertyDescriptorCollection.#ctor(System.ComponentModel.PropertyDescriptor[])">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubPropertyDescriptorCollection.#ctor(System.ComponentModel.PropertyDescriptor[],System.Boolean)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubPropertyDescriptorCollection.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubPropertyDescriptorCollection.Find(System.String,System.Boolean)">
            <summary>Задает заглушка PropertyDescriptorCollection.Find(String name, Boolean ignoreCase)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubPropertyDescriptorCollection.FindStringBoolean">
            <summary>Задает stub PropertyDescriptorCollection.Find(String name, Boolean ignoreCase)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubPropertyDescriptorCollection.GetEnumerator">
            <summary>Задает заглушка PropertyDescriptorCollection.GetEnumerator()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubPropertyDescriptorCollection.GetEnumerator01">
            <summary>Задает stub PropertyDescriptorCollection.GetEnumerator()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubPropertyDescriptorCollection.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubPropertyDescriptorCollection</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubPropertyDescriptorCollection.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubPropertyDescriptorCollection.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubPropertyDescriptorCollection.Item(System.Int32)">
            <summary>Задает stub PropertyDescriptorCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubPropertyDescriptorCollection.Item(System.String)">
            <summary>Задает stub PropertyDescriptorCollection.get_Item(String name)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubPropertyDescriptorCollection.ItemGetInt32">
            <summary>Задает stub PropertyDescriptorCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubPropertyDescriptorCollection.ItemGetString">
            <summary>Задает stub PropertyDescriptorCollection.get_Item(String name)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubPropertyDescriptorCollection.Sort">
            <summary>Задает заглушка PropertyDescriptorCollection.Sort()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubPropertyDescriptorCollection.Sort(System.String[])">
            <summary>Задает заглушка PropertyDescriptorCollection.Sort(String[] names)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubPropertyDescriptorCollection.Sort(System.Collections.IComparer)">
            <summary>Задает заглушка PropertyDescriptorCollection.Sort(IComparer comparer)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubPropertyDescriptorCollection.Sort(System.String[],System.Collections.IComparer)">
            <summary>Задает заглушка PropertyDescriptorCollection.Sort(String[] names, IComparer comparer)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubPropertyDescriptorCollection.Sort01">
            <summary>Задает stub PropertyDescriptorCollection.Sort()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubPropertyDescriptorCollection.SortIComparer">
            <summary>Задает stub PropertyDescriptorCollection.Sort(IComparer comparer)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubPropertyDescriptorCollection.SortStringArray">
            <summary>Задает stub PropertyDescriptorCollection.Sort(String[] names)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubPropertyDescriptorCollection.SortStringArrayIComparer">
            <summary>Задает stub PropertyDescriptorCollection.Sort(String[] names, IComparer comparer)</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.StubPropertyTabAttribute">
            <summary>Тип заглушки System.ComponentModel.PropertyTabAttribute</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubPropertyTabAttribute.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubPropertyTabAttribute.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubPropertyTabAttribute.#ctor(System.Type)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubPropertyTabAttribute.#ctor(System.String,System.ComponentModel.PropertyTabScope)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubPropertyTabAttribute.#ctor(System.Type,System.ComponentModel.PropertyTabScope)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubPropertyTabAttribute.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubPropertyTabAttribute.Equals(System.Object)">
            <summary>Задает заглушка PropertyTabAttribute.Equals(Object other)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubPropertyTabAttribute.EqualsObject">
            <summary>Задает stub PropertyTabAttribute.Equals(Object other)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubPropertyTabAttribute.GetHashCode">
            <summary>Задает заглушка PropertyTabAttribute.GetHashCode()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubPropertyTabAttribute.GetHashCode01">
            <summary>Задает stub PropertyTabAttribute.GetHashCode()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubPropertyTabAttribute.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubPropertyTabAttribute</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubPropertyTabAttribute.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubPropertyTabAttribute.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubPropertyTabAttribute.IsDefaultAttribute">
            <summary>Задает заглушка Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubPropertyTabAttribute.IsDefaultAttribute01">
            <summary>Задает stub Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubPropertyTabAttribute.Match(System.Object)">
            <summary>Задает заглушка Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubPropertyTabAttribute.MatchObject">
            <summary>Задает stub Attribute.Match(Object obj)</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubPropertyTabAttribute.TypeId">
            <summary>Задает stub Attribute.get_TypeId()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubPropertyTabAttribute.TypeIdGet">
            <summary>Задает stub Attribute.get_TypeId()</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.StubReferenceConverter">
            <summary>Тип заглушки System.ComponentModel.ReferenceConverter</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubReferenceConverter.#ctor(System.Type)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubReferenceConverter.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubReferenceConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>Задает заглушка ReferenceConverter.CanConvertFrom(ITypeDescriptorContext context, Type sourceType)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubReferenceConverter.CanConvertFromITypeDescriptorContextType">
            <summary>Задает stub ReferenceConverter.CanConvertFrom(ITypeDescriptorContext context, Type sourceType)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubReferenceConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>Задает заглушка TypeConverter.CanConvertTo(ITypeDescriptorContext context, Type destinationType)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubReferenceConverter.CanConvertToITypeDescriptorContextType">
            <summary>Задает stub TypeConverter.CanConvertTo(ITypeDescriptorContext context, Type destinationType)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubReferenceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>Задает заглушка ReferenceConverter.ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, Object value)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubReferenceConverter.ConvertFromITypeDescriptorContextCultureInfoObject">
            <summary>Задает stub ReferenceConverter.ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, Object value)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubReferenceConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>Задает заглушка ReferenceConverter.ConvertTo(ITypeDescriptorContext context, CultureInfo culture, Object value, Type destinationType)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubReferenceConverter.ConvertToITypeDescriptorContextCultureInfoObjectType">
            <summary>Задает stub ReferenceConverter.ConvertTo(ITypeDescriptorContext context, CultureInfo culture, Object value, Type destinationType)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubReferenceConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
            <summary>Задает заглушка TypeConverter.CreateInstance(ITypeDescriptorContext context, IDictionary propertyValues)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubReferenceConverter.CreateInstanceITypeDescriptorContextIDictionary">
            <summary>Задает stub TypeConverter.CreateInstance(ITypeDescriptorContext context, IDictionary propertyValues)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubReferenceConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Задает заглушка TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubReferenceConverter.GetCreateInstanceSupportedITypeDescriptorContext">
            <summary>Задает stub TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubReferenceConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>Задает заглушка TypeConverter.GetProperties(ITypeDescriptorContext context, Object value, Attribute[] attributes)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubReferenceConverter.GetPropertiesITypeDescriptorContextObjectAttributeArray">
            <summary>Задает stub TypeConverter.GetProperties(ITypeDescriptorContext context, Object value, Attribute[] attributes)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubReferenceConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Задает заглушка TypeConverter.GetPropertiesSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubReferenceConverter.GetPropertiesSupportedITypeDescriptorContext">
            <summary>Задает stub TypeConverter.GetPropertiesSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubReferenceConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Задает заглушка ReferenceConverter.GetStandardValues(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubReferenceConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Задает заглушка ReferenceConverter.GetStandardValuesExclusive(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubReferenceConverter.GetStandardValuesExclusiveITypeDescriptorContext">
            <summary>Задает stub ReferenceConverter.GetStandardValuesExclusive(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubReferenceConverter.GetStandardValuesITypeDescriptorContext">
            <summary>Задает stub ReferenceConverter.GetStandardValues(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubReferenceConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Задает заглушка ReferenceConverter.GetStandardValuesSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubReferenceConverter.GetStandardValuesSupportedITypeDescriptorContext">
            <summary>Задает stub ReferenceConverter.GetStandardValuesSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubReferenceConverter.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubReferenceConverter</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubReferenceConverter.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubReferenceConverter.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubReferenceConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)">
            <summary>Задает заглушка TypeConverter.IsValid(ITypeDescriptorContext context, Object value)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubReferenceConverter.IsValidITypeDescriptorContextObject">
            <summary>Задает stub TypeConverter.IsValid(ITypeDescriptorContext context, Object value)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubReferenceConverter.IsValueAllowed(System.ComponentModel.ITypeDescriptorContext,System.Object)">
            <summary>Задает заглушка ReferenceConverter.IsValueAllowed(ITypeDescriptorContext context, Object value)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubReferenceConverter.IsValueAllowedITypeDescriptorContextObject">
            <summary>Задает stub ReferenceConverter.IsValueAllowed(ITypeDescriptorContext context, Object value)</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.StubRefreshEventArgs">
            <summary>Тип заглушки System.ComponentModel.RefreshEventArgs</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubRefreshEventArgs.#ctor(System.Object)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubRefreshEventArgs.#ctor(System.Type)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubRefreshEventArgs.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubRefreshEventArgs.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubRefreshEventArgs</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubRefreshEventArgs.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubRefreshEventArgs.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.StubRunInstallerAttribute">
            <summary>Тип заглушки System.ComponentModel.RunInstallerAttribute</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubRunInstallerAttribute.#ctor(System.Boolean)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubRunInstallerAttribute.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubRunInstallerAttribute.Equals(System.Object)">
            <summary>Задает заглушка RunInstallerAttribute.Equals(Object obj)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubRunInstallerAttribute.EqualsObject">
            <summary>Задает stub RunInstallerAttribute.Equals(Object obj)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubRunInstallerAttribute.GetHashCode">
            <summary>Задает заглушка RunInstallerAttribute.GetHashCode()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubRunInstallerAttribute.GetHashCode01">
            <summary>Задает stub RunInstallerAttribute.GetHashCode()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubRunInstallerAttribute.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubRunInstallerAttribute</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubRunInstallerAttribute.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubRunInstallerAttribute.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubRunInstallerAttribute.IsDefaultAttribute">
            <summary>Задает заглушка RunInstallerAttribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubRunInstallerAttribute.IsDefaultAttribute01">
            <summary>Задает stub RunInstallerAttribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubRunInstallerAttribute.Match(System.Object)">
            <summary>Задает заглушка Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubRunInstallerAttribute.MatchObject">
            <summary>Задает stub Attribute.Match(Object obj)</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubRunInstallerAttribute.TypeId">
            <summary>Задает stub Attribute.get_TypeId()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubRunInstallerAttribute.TypeIdGet">
            <summary>Задает stub Attribute.get_TypeId()</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.StubRunWorkerCompletedEventArgs">
            <summary>Тип заглушки System.ComponentModel.RunWorkerCompletedEventArgs</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubRunWorkerCompletedEventArgs.#ctor(System.Object,System.Exception,System.Boolean)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubRunWorkerCompletedEventArgs.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubRunWorkerCompletedEventArgs.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubRunWorkerCompletedEventArgs</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubRunWorkerCompletedEventArgs.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubRunWorkerCompletedEventArgs.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.StubStringConverter">
            <summary>Тип заглушки System.ComponentModel.StringConverter</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubStringConverter.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubStringConverter.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubStringConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>Задает заглушка StringConverter.CanConvertFrom(ITypeDescriptorContext context, Type sourceType)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubStringConverter.CanConvertFromITypeDescriptorContextType">
            <summary>Задает stub StringConverter.CanConvertFrom(ITypeDescriptorContext context, Type sourceType)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubStringConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>Задает заглушка TypeConverter.CanConvertTo(ITypeDescriptorContext context, Type destinationType)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubStringConverter.CanConvertToITypeDescriptorContextType">
            <summary>Задает stub TypeConverter.CanConvertTo(ITypeDescriptorContext context, Type destinationType)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubStringConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>Задает заглушка StringConverter.ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, Object value)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubStringConverter.ConvertFromITypeDescriptorContextCultureInfoObject">
            <summary>Задает stub StringConverter.ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, Object value)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubStringConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>Задает заглушка TypeConverter.ConvertTo(ITypeDescriptorContext context, CultureInfo culture, Object value, Type destinationType)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubStringConverter.ConvertToITypeDescriptorContextCultureInfoObjectType">
            <summary>Задает stub TypeConverter.ConvertTo(ITypeDescriptorContext context, CultureInfo culture, Object value, Type destinationType)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubStringConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
            <summary>Задает заглушка TypeConverter.CreateInstance(ITypeDescriptorContext context, IDictionary propertyValues)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubStringConverter.CreateInstanceITypeDescriptorContextIDictionary">
            <summary>Задает stub TypeConverter.CreateInstance(ITypeDescriptorContext context, IDictionary propertyValues)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubStringConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Задает заглушка TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubStringConverter.GetCreateInstanceSupportedITypeDescriptorContext">
            <summary>Задает stub TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubStringConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>Задает заглушка TypeConverter.GetProperties(ITypeDescriptorContext context, Object value, Attribute[] attributes)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubStringConverter.GetPropertiesITypeDescriptorContextObjectAttributeArray">
            <summary>Задает stub TypeConverter.GetProperties(ITypeDescriptorContext context, Object value, Attribute[] attributes)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubStringConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Задает заглушка TypeConverter.GetPropertiesSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubStringConverter.GetPropertiesSupportedITypeDescriptorContext">
            <summary>Задает stub TypeConverter.GetPropertiesSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubStringConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Задает заглушка TypeConverter.GetStandardValues(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubStringConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Задает заглушка TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubStringConverter.GetStandardValuesExclusiveITypeDescriptorContext">
            <summary>Задает stub TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubStringConverter.GetStandardValuesITypeDescriptorContext">
            <summary>Задает stub TypeConverter.GetStandardValues(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubStringConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Задает заглушка TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubStringConverter.GetStandardValuesSupportedITypeDescriptorContext">
            <summary>Задает stub TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubStringConverter.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubStringConverter</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubStringConverter.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubStringConverter.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubStringConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)">
            <summary>Задает заглушка TypeConverter.IsValid(ITypeDescriptorContext context, Object value)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubStringConverter.IsValidITypeDescriptorContextObject">
            <summary>Задает stub TypeConverter.IsValid(ITypeDescriptorContext context, Object value)</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.StubTimeSpanConverter">
            <summary>Тип заглушки System.ComponentModel.TimeSpanConverter</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubTimeSpanConverter.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubTimeSpanConverter.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubTimeSpanConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>Задает заглушка TimeSpanConverter.CanConvertFrom(ITypeDescriptorContext context, Type sourceType)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubTimeSpanConverter.CanConvertFromITypeDescriptorContextType">
            <summary>Задает stub TimeSpanConverter.CanConvertFrom(ITypeDescriptorContext context, Type sourceType)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubTimeSpanConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>Задает заглушка TimeSpanConverter.CanConvertTo(ITypeDescriptorContext context, Type destinationType)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubTimeSpanConverter.CanConvertToITypeDescriptorContextType">
            <summary>Задает stub TimeSpanConverter.CanConvertTo(ITypeDescriptorContext context, Type destinationType)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubTimeSpanConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>Задает заглушка TimeSpanConverter.ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, Object value)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubTimeSpanConverter.ConvertFromITypeDescriptorContextCultureInfoObject">
            <summary>Задает stub TimeSpanConverter.ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, Object value)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubTimeSpanConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>Задает заглушка TimeSpanConverter.ConvertTo(ITypeDescriptorContext context, CultureInfo culture, Object value, Type destinationType)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubTimeSpanConverter.ConvertToITypeDescriptorContextCultureInfoObjectType">
            <summary>Задает stub TimeSpanConverter.ConvertTo(ITypeDescriptorContext context, CultureInfo culture, Object value, Type destinationType)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubTimeSpanConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
            <summary>Задает заглушка TypeConverter.CreateInstance(ITypeDescriptorContext context, IDictionary propertyValues)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubTimeSpanConverter.CreateInstanceITypeDescriptorContextIDictionary">
            <summary>Задает stub TypeConverter.CreateInstance(ITypeDescriptorContext context, IDictionary propertyValues)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubTimeSpanConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Задает заглушка TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubTimeSpanConverter.GetCreateInstanceSupportedITypeDescriptorContext">
            <summary>Задает stub TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubTimeSpanConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>Задает заглушка TypeConverter.GetProperties(ITypeDescriptorContext context, Object value, Attribute[] attributes)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubTimeSpanConverter.GetPropertiesITypeDescriptorContextObjectAttributeArray">
            <summary>Задает stub TypeConverter.GetProperties(ITypeDescriptorContext context, Object value, Attribute[] attributes)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubTimeSpanConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Задает заглушка TypeConverter.GetPropertiesSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubTimeSpanConverter.GetPropertiesSupportedITypeDescriptorContext">
            <summary>Задает stub TypeConverter.GetPropertiesSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubTimeSpanConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Задает заглушка TypeConverter.GetStandardValues(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubTimeSpanConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Задает заглушка TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubTimeSpanConverter.GetStandardValuesExclusiveITypeDescriptorContext">
            <summary>Задает stub TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubTimeSpanConverter.GetStandardValuesITypeDescriptorContext">
            <summary>Задает stub TypeConverter.GetStandardValues(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubTimeSpanConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Задает заглушка TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubTimeSpanConverter.GetStandardValuesSupportedITypeDescriptorContext">
            <summary>Задает stub TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubTimeSpanConverter.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubTimeSpanConverter</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubTimeSpanConverter.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubTimeSpanConverter.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubTimeSpanConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)">
            <summary>Задает заглушка TypeConverter.IsValid(ITypeDescriptorContext context, Object value)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubTimeSpanConverter.IsValidITypeDescriptorContextObject">
            <summary>Задает stub TypeConverter.IsValid(ITypeDescriptorContext context, Object value)</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.StubToolboxItemAttribute">
            <summary>Тип заглушки System.ComponentModel.ToolboxItemAttribute</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubToolboxItemAttribute.#ctor(System.Boolean)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubToolboxItemAttribute.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubToolboxItemAttribute.#ctor(System.Type)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubToolboxItemAttribute.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubToolboxItemAttribute.Equals(System.Object)">
            <summary>Задает заглушка ToolboxItemAttribute.Equals(Object obj)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubToolboxItemAttribute.EqualsObject">
            <summary>Задает stub ToolboxItemAttribute.Equals(Object obj)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubToolboxItemAttribute.GetHashCode">
            <summary>Задает заглушка ToolboxItemAttribute.GetHashCode()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubToolboxItemAttribute.GetHashCode01">
            <summary>Задает stub ToolboxItemAttribute.GetHashCode()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubToolboxItemAttribute.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubToolboxItemAttribute</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubToolboxItemAttribute.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubToolboxItemAttribute.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubToolboxItemAttribute.IsDefaultAttribute">
            <summary>Задает заглушка ToolboxItemAttribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubToolboxItemAttribute.IsDefaultAttribute01">
            <summary>Задает stub ToolboxItemAttribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubToolboxItemAttribute.Match(System.Object)">
            <summary>Задает заглушка Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubToolboxItemAttribute.MatchObject">
            <summary>Задает stub Attribute.Match(Object obj)</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubToolboxItemAttribute.TypeId">
            <summary>Задает stub Attribute.get_TypeId()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubToolboxItemAttribute.TypeIdGet">
            <summary>Задает stub Attribute.get_TypeId()</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.StubTypeConverter">
            <summary>Тип заглушки System.ComponentModel.TypeConverter</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubTypeConverter.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubTypeConverter.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>Задает заглушка TypeConverter.CanConvertFrom(ITypeDescriptorContext context, Type sourceType)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubTypeConverter.CanConvertFromITypeDescriptorContextType">
            <summary>Задает stub TypeConverter.CanConvertFrom(ITypeDescriptorContext context, Type sourceType)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>Задает заглушка TypeConverter.CanConvertTo(ITypeDescriptorContext context, Type destinationType)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubTypeConverter.CanConvertToITypeDescriptorContextType">
            <summary>Задает stub TypeConverter.CanConvertTo(ITypeDescriptorContext context, Type destinationType)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>Задает заглушка TypeConverter.ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, Object value)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubTypeConverter.ConvertFromITypeDescriptorContextCultureInfoObject">
            <summary>Задает stub TypeConverter.ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, Object value)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>Задает заглушка TypeConverter.ConvertTo(ITypeDescriptorContext context, CultureInfo culture, Object value, Type destinationType)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubTypeConverter.ConvertToITypeDescriptorContextCultureInfoObjectType">
            <summary>Задает stub TypeConverter.ConvertTo(ITypeDescriptorContext context, CultureInfo culture, Object value, Type destinationType)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubTypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
            <summary>Задает заглушка TypeConverter.CreateInstance(ITypeDescriptorContext context, IDictionary propertyValues)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubTypeConverter.CreateInstanceITypeDescriptorContextIDictionary">
            <summary>Задает stub TypeConverter.CreateInstance(ITypeDescriptorContext context, IDictionary propertyValues)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubTypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Задает заглушка TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubTypeConverter.GetCreateInstanceSupportedITypeDescriptorContext">
            <summary>Задает stub TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubTypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>Задает заглушка TypeConverter.GetProperties(ITypeDescriptorContext context, Object value, Attribute[] attributes)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubTypeConverter.GetPropertiesITypeDescriptorContextObjectAttributeArray">
            <summary>Задает stub TypeConverter.GetProperties(ITypeDescriptorContext context, Object value, Attribute[] attributes)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubTypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Задает заглушка TypeConverter.GetPropertiesSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubTypeConverter.GetPropertiesSupportedITypeDescriptorContext">
            <summary>Задает stub TypeConverter.GetPropertiesSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubTypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Задает заглушка TypeConverter.GetStandardValues(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubTypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Задает заглушка TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubTypeConverter.GetStandardValuesExclusiveITypeDescriptorContext">
            <summary>Задает stub TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubTypeConverter.GetStandardValuesITypeDescriptorContext">
            <summary>Задает stub TypeConverter.GetStandardValues(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubTypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Задает заглушка TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubTypeConverter.GetStandardValuesSupportedITypeDescriptorContext">
            <summary>Задает stub TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubTypeConverter.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubTypeConverter</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubTypeConverter.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubTypeConverter.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubTypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)">
            <summary>Задает заглушка TypeConverter.IsValid(ITypeDescriptorContext context, Object value)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubTypeConverter.IsValidITypeDescriptorContextObject">
            <summary>Задает stub TypeConverter.IsValid(ITypeDescriptorContext context, Object value)</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.StubTypeDescriptionProvider">
            <summary>Тип заглушки System.ComponentModel.TypeDescriptionProvider</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubTypeDescriptionProvider.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubTypeDescriptionProvider.#ctor(System.ComponentModel.TypeDescriptionProvider)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubTypeDescriptionProvider.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubTypeDescriptionProvider.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
            <summary>Задает заглушка TypeDescriptionProvider.CreateInstance(IServiceProvider provider, Type objectType, Type[] argTypes, Object[] args)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubTypeDescriptionProvider.CreateInstanceIServiceProviderTypeTypeArrayObjectArray">
            <summary>Задает stub TypeDescriptionProvider.CreateInstance(IServiceProvider provider, Type objectType, Type[] argTypes, Object[] args)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubTypeDescriptionProvider.GetCache(System.Object)">
            <summary>Задает заглушка TypeDescriptionProvider.GetCache(Object instance)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubTypeDescriptionProvider.GetCacheObject">
            <summary>Задает stub TypeDescriptionProvider.GetCache(Object instance)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubTypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)">
            <summary>Задает заглушка TypeDescriptionProvider.GetExtendedTypeDescriptor(Object instance)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubTypeDescriptionProvider.GetExtendedTypeDescriptorObject">
            <summary>Задает stub TypeDescriptionProvider.GetExtendedTypeDescriptor(Object instance)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubTypeDescriptionProvider.GetExtenderProviders(System.Object)">
            <summary>Задает заглушка TypeDescriptionProvider.GetExtenderProviders(Object instance)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubTypeDescriptionProvider.GetExtenderProvidersObject">
            <summary>Задает stub TypeDescriptionProvider.GetExtenderProviders(Object instance)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubTypeDescriptionProvider.GetFullComponentName(System.Object)">
            <summary>Задает заглушка TypeDescriptionProvider.GetFullComponentName(Object component)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubTypeDescriptionProvider.GetFullComponentNameObject">
            <summary>Задает stub TypeDescriptionProvider.GetFullComponentName(Object component)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubTypeDescriptionProvider.GetReflectionType(System.Type,System.Object)">
            <summary>Задает заглушка TypeDescriptionProvider.GetReflectionType(Type objectType, Object instance)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubTypeDescriptionProvider.GetReflectionTypeTypeObject">
            <summary>Задает stub TypeDescriptionProvider.GetReflectionType(Type objectType, Object instance)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubTypeDescriptionProvider.GetRuntimeType(System.Type)">
            <summary>Задает заглушка TypeDescriptionProvider.GetRuntimeType(Type reflectionType)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubTypeDescriptionProvider.GetRuntimeTypeType">
            <summary>Задает stub TypeDescriptionProvider.GetRuntimeType(Type reflectionType)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubTypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)">
            <summary>Задает заглушка TypeDescriptionProvider.GetTypeDescriptor(Type objectType, Object instance)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubTypeDescriptionProvider.GetTypeDescriptorTypeObject">
            <summary>Задает stub TypeDescriptionProvider.GetTypeDescriptor(Type objectType, Object instance)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubTypeDescriptionProvider.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubTypeDescriptionProvider</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubTypeDescriptionProvider.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubTypeDescriptionProvider.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubTypeDescriptionProvider.IsSupportedType(System.Type)">
            <summary>Задает заглушка TypeDescriptionProvider.IsSupportedType(Type type)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubTypeDescriptionProvider.IsSupportedTypeType">
            <summary>Задает stub TypeDescriptionProvider.IsSupportedType(Type type)</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.StubTypeListConverter">
            <summary>Тип заглушки System.ComponentModel.TypeListConverter</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubTypeListConverter.#ctor(System.Type[])">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubTypeListConverter.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubTypeListConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>Задает заглушка TypeListConverter.CanConvertFrom(ITypeDescriptorContext context, Type sourceType)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubTypeListConverter.CanConvertFromITypeDescriptorContextType">
            <summary>Задает stub TypeListConverter.CanConvertFrom(ITypeDescriptorContext context, Type sourceType)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubTypeListConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>Задает заглушка TypeListConverter.CanConvertTo(ITypeDescriptorContext context, Type destinationType)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubTypeListConverter.CanConvertToITypeDescriptorContextType">
            <summary>Задает stub TypeListConverter.CanConvertTo(ITypeDescriptorContext context, Type destinationType)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubTypeListConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>Задает заглушка TypeListConverter.ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, Object value)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubTypeListConverter.ConvertFromITypeDescriptorContextCultureInfoObject">
            <summary>Задает stub TypeListConverter.ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, Object value)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubTypeListConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>Задает заглушка TypeListConverter.ConvertTo(ITypeDescriptorContext context, CultureInfo culture, Object value, Type destinationType)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubTypeListConverter.ConvertToITypeDescriptorContextCultureInfoObjectType">
            <summary>Задает stub TypeListConverter.ConvertTo(ITypeDescriptorContext context, CultureInfo culture, Object value, Type destinationType)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubTypeListConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
            <summary>Задает заглушка TypeConverter.CreateInstance(ITypeDescriptorContext context, IDictionary propertyValues)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubTypeListConverter.CreateInstanceITypeDescriptorContextIDictionary">
            <summary>Задает stub TypeConverter.CreateInstance(ITypeDescriptorContext context, IDictionary propertyValues)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubTypeListConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Задает заглушка TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubTypeListConverter.GetCreateInstanceSupportedITypeDescriptorContext">
            <summary>Задает stub TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubTypeListConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>Задает заглушка TypeConverter.GetProperties(ITypeDescriptorContext context, Object value, Attribute[] attributes)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubTypeListConverter.GetPropertiesITypeDescriptorContextObjectAttributeArray">
            <summary>Задает stub TypeConverter.GetProperties(ITypeDescriptorContext context, Object value, Attribute[] attributes)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubTypeListConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Задает заглушка TypeConverter.GetPropertiesSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubTypeListConverter.GetPropertiesSupportedITypeDescriptorContext">
            <summary>Задает stub TypeConverter.GetPropertiesSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubTypeListConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Задает заглушка TypeListConverter.GetStandardValues(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubTypeListConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Задает заглушка TypeListConverter.GetStandardValuesExclusive(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubTypeListConverter.GetStandardValuesExclusiveITypeDescriptorContext">
            <summary>Задает stub TypeListConverter.GetStandardValuesExclusive(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubTypeListConverter.GetStandardValuesITypeDescriptorContext">
            <summary>Задает stub TypeListConverter.GetStandardValues(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubTypeListConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Задает заглушка TypeListConverter.GetStandardValuesSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubTypeListConverter.GetStandardValuesSupportedITypeDescriptorContext">
            <summary>Задает stub TypeListConverter.GetStandardValuesSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubTypeListConverter.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubTypeListConverter</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubTypeListConverter.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubTypeListConverter.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubTypeListConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)">
            <summary>Задает заглушка TypeConverter.IsValid(ITypeDescriptorContext context, Object value)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubTypeListConverter.IsValidITypeDescriptorContextObject">
            <summary>Задает stub TypeConverter.IsValid(ITypeDescriptorContext context, Object value)</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.StubWarningException">
            <summary>Тип заглушки System.ComponentModel.WarningException</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubWarningException.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubWarningException.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubWarningException.#ctor(System.String,System.Exception)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubWarningException.#ctor(System.String,System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubWarningException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubWarningException.#ctor(System.String,System.String,System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubWarningException.AttachBackingFieldToHelpLink">
            <summary>Присоединение делегатов для эмуляции StubWarningException.HelpLink как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubWarningException.AttachBackingFieldToSource">
            <summary>Присоединение делегатов для эмуляции StubWarningException.Source как свойства с резервным полем.</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubWarningException.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubWarningException.Data">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubWarningException.DataGet">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubWarningException.GetBaseException">
            <summary>Задает заглушка Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubWarningException.GetBaseException01">
            <summary>Задает stub Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubWarningException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка WarningException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubWarningException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub WarningException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubWarningException.HelpLink">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubWarningException.HelpLinkGet">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubWarningException.HelpLinkSetString">
            <summary>Задает stub Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubWarningException.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubWarningException</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubWarningException.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubWarningException.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubWarningException.Message">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubWarningException.MessageGet">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubWarningException.Source">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubWarningException.SourceGet">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubWarningException.SourceSetString">
            <summary>Задает stub Exception.set_Source(String value)</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubWarningException.StackTrace">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubWarningException.StackTraceGet">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubWarningException.ToString">
            <summary>Задает заглушка Exception.ToString()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubWarningException.ToString01">
            <summary>Задает stub Exception.ToString()</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.StubWin32Exception">
            <summary>Тип заглушки System.ComponentModel.Win32Exception</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubWin32Exception.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubWin32Exception.#ctor(System.Int32)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubWin32Exception.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubWin32Exception.#ctor(System.String,System.Exception)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubWin32Exception.#ctor(System.Int32,System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubWin32Exception.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubWin32Exception.AttachBackingFieldToHelpLink">
            <summary>Присоединение делегатов для эмуляции StubWin32Exception.HelpLink как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubWin32Exception.AttachBackingFieldToSource">
            <summary>Присоединение делегатов для эмуляции StubWin32Exception.Source как свойства с резервным полем.</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubWin32Exception.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubWin32Exception.Data">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubWin32Exception.DataGet">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubWin32Exception.ErrorCode">
            <summary>Задает stub ExternalException.get_ErrorCode()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubWin32Exception.ErrorCodeGet">
            <summary>Задает stub ExternalException.get_ErrorCode()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubWin32Exception.GetBaseException">
            <summary>Задает заглушка Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubWin32Exception.GetBaseException01">
            <summary>Задает stub Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubWin32Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка Win32Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubWin32Exception.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub Win32Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubWin32Exception.HelpLink">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubWin32Exception.HelpLinkGet">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubWin32Exception.HelpLinkSetString">
            <summary>Задает stub Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubWin32Exception.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubWin32Exception</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubWin32Exception.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubWin32Exception.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubWin32Exception.Message">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubWin32Exception.MessageGet">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubWin32Exception.Source">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubWin32Exception.SourceGet">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubWin32Exception.SourceSetString">
            <summary>Задает stub Exception.set_Source(String value)</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubWin32Exception.StackTrace">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubWin32Exception.StackTraceGet">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubWin32Exception.ToString">
            <summary>Задает заглушка ExternalException.ToString()</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubWin32Exception.ToString01">
            <summary>Задает stub ExternalException.ToString()</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimConfigurationSettings">
            <summary>Тип оболочки совместимости для System.Configuration.ConfigurationSettings</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationSettings.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationSettings.#ctor(System.Configuration.ConfigurationSettings)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="T:System.Configuration.Fakes.ShimConfigurationSettings.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSettings.AppSettingsGet">
            <summary>Задает оболочка совместимости ConfigurationSettings.get_AppSettings()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationSettings.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:System.Configuration.Fakes.ShimConfigurationSettings.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSettings.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSettings.Constructor">
            <summary>Задает оболочка совместимости ConfigurationSettings.ConfigurationSettings()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.ShimConfigurationSettings.GetConfigString">
            <summary>Задает оболочка совместимости ConfigurationSettings.GetConfig(String sectionName)</summary>
        </member>
        <member name="T:System.Configuration.Fakes.StubAppSettingsReader">
            <summary>Тип заглушки System.Configuration.AppSettingsReader</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubAppSettingsReader.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubAppSettingsReader.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubAppSettingsReader.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubAppSettingsReader</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubAppSettingsReader.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubAppSettingsReader.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Configuration.Fakes.StubApplicationSettingsBase">
            <summary>Тип заглушки System.Configuration.ApplicationSettingsBase</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubApplicationSettingsBase.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubApplicationSettingsBase.#ctor(System.ComponentModel.IComponent)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubApplicationSettingsBase.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubApplicationSettingsBase.#ctor(System.ComponentModel.IComponent,System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubApplicationSettingsBase.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubApplicationSettingsBase.Context">
            <summary>Задает stub ApplicationSettingsBase.get_Context()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubApplicationSettingsBase.ContextGet">
            <summary>Задает stub ApplicationSettingsBase.get_Context()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubApplicationSettingsBase.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubApplicationSettingsBase</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubApplicationSettingsBase.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubApplicationSettingsBase.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubApplicationSettingsBase.Item(System.String)">
            <summary>Задает stub ApplicationSettingsBase.get_Item(String propertyName)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubApplicationSettingsBase.ItemGetString">
            <summary>Задает stub ApplicationSettingsBase.get_Item(String propertyName)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubApplicationSettingsBase.ItemSetStringObject">
            <summary>Задает stub ApplicationSettingsBase.set_Item(String propertyName, Object value)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>Задает заглушка ApplicationSettingsBase.OnPropertyChanged(Object sender, PropertyChangedEventArgs e)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubApplicationSettingsBase.OnPropertyChangedObjectPropertyChangedEventArgs">
            <summary>Задает stub ApplicationSettingsBase.OnPropertyChanged(Object sender, PropertyChangedEventArgs e)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)">
            <summary>Задает заглушка ApplicationSettingsBase.OnSettingChanging(Object sender, SettingChangingEventArgs e)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubApplicationSettingsBase.OnSettingChangingObjectSettingChangingEventArgs">
            <summary>Задает stub ApplicationSettingsBase.OnSettingChanging(Object sender, SettingChangingEventArgs e)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)">
            <summary>Задает заглушка ApplicationSettingsBase.OnSettingsLoaded(Object sender, SettingsLoadedEventArgs e)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubApplicationSettingsBase.OnSettingsLoadedObjectSettingsLoadedEventArgs">
            <summary>Задает stub ApplicationSettingsBase.OnSettingsLoaded(Object sender, SettingsLoadedEventArgs e)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)">
            <summary>Задает заглушка ApplicationSettingsBase.OnSettingsSaving(Object sender, CancelEventArgs e)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubApplicationSettingsBase.OnSettingsSavingObjectCancelEventArgs">
            <summary>Задает stub ApplicationSettingsBase.OnSettingsSaving(Object sender, CancelEventArgs e)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubApplicationSettingsBase.Properties">
            <summary>Задает stub ApplicationSettingsBase.get_Properties()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubApplicationSettingsBase.PropertiesGet">
            <summary>Задает stub ApplicationSettingsBase.get_Properties()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubApplicationSettingsBase.PropertyValues">
            <summary>Задает stub ApplicationSettingsBase.get_PropertyValues()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubApplicationSettingsBase.PropertyValuesGet">
            <summary>Задает stub ApplicationSettingsBase.get_PropertyValues()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubApplicationSettingsBase.Providers">
            <summary>Задает stub ApplicationSettingsBase.get_Providers()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubApplicationSettingsBase.ProvidersGet">
            <summary>Задает stub ApplicationSettingsBase.get_Providers()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubApplicationSettingsBase.Save">
            <summary>Задает заглушка ApplicationSettingsBase.Save()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubApplicationSettingsBase.Save01">
            <summary>Задает stub ApplicationSettingsBase.Save()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubApplicationSettingsBase.Upgrade">
            <summary>Задает заглушка ApplicationSettingsBase.Upgrade()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubApplicationSettingsBase.Upgrade01">
            <summary>Задает stub ApplicationSettingsBase.Upgrade()</summary>
        </member>
        <member name="T:System.Configuration.Fakes.StubConfigurationException">
            <summary>Тип заглушки System.Configuration.ConfigurationException</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationException.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationException.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationException.#ctor(System.String,System.Xml.XmlNode)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationException.#ctor(System.String,System.Exception)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationException.#ctor(System.String,System.Exception,System.Xml.XmlNode)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationException.#ctor(System.String,System.String,System.Int32)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationException.#ctor(System.String,System.Exception,System.String,System.Int32)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationException.AttachBackingFieldToHelpLink">
            <summary>Присоединение делегатов для эмуляции StubConfigurationException.HelpLink как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationException.AttachBackingFieldToSource">
            <summary>Присоединение делегатов для эмуляции StubConfigurationException.Source как свойства с резервным полем.</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubConfigurationException.BareMessage">
            <summary>Задает stub ConfigurationException.get_BareMessage()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationException.BareMessageGet">
            <summary>Задает stub ConfigurationException.get_BareMessage()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubConfigurationException.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubConfigurationException.Data">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationException.DataGet">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubConfigurationException.Filename">
            <summary>Задает stub ConfigurationException.get_Filename()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationException.FilenameGet">
            <summary>Задает stub ConfigurationException.get_Filename()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationException.GetBaseException">
            <summary>Задает заглушка Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationException.GetBaseException01">
            <summary>Задает stub Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка ConfigurationException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub ConfigurationException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubConfigurationException.HelpLink">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationException.HelpLinkGet">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationException.HelpLinkSetString">
            <summary>Задает stub Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationException.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubConfigurationException</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubConfigurationException.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubConfigurationException.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubConfigurationException.Line">
            <summary>Задает stub ConfigurationException.get_Line()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationException.LineGet">
            <summary>Задает stub ConfigurationException.get_Line()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubConfigurationException.Message">
            <summary>Задает stub ConfigurationException.get_Message()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationException.MessageGet">
            <summary>Задает stub ConfigurationException.get_Message()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubConfigurationException.Source">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationException.SourceGet">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationException.SourceSetString">
            <summary>Задает stub Exception.set_Source(String value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubConfigurationException.StackTrace">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationException.StackTraceGet">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubConfigurationException.ToString">
            <summary>Задает заглушка Exception.ToString()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubConfigurationException.ToString01">
            <summary>Задает stub Exception.ToString()</summary>
        </member>
        <member name="T:System.Configuration.Fakes.StubDictionarySectionHandler">
            <summary>Тип заглушки System.Configuration.DictionarySectionHandler</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubDictionarySectionHandler.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubDictionarySectionHandler.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubDictionarySectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)">
            <summary>Задает заглушка DictionarySectionHandler.Create(Object parent, Object context, XmlNode section)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubDictionarySectionHandler.CreateObjectObjectXmlNode">
            <summary>Задает stub DictionarySectionHandler.Create(Object parent, Object context, XmlNode section)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubDictionarySectionHandler.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubDictionarySectionHandler</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubDictionarySectionHandler.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubDictionarySectionHandler.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubDictionarySectionHandler.KeyAttributeName">
            <summary>Задает stub DictionarySectionHandler.get_KeyAttributeName()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubDictionarySectionHandler.KeyAttributeNameGet">
            <summary>Задает stub DictionarySectionHandler.get_KeyAttributeName()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubDictionarySectionHandler.ValueAttributeName">
            <summary>Задает stub DictionarySectionHandler.get_ValueAttributeName()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubDictionarySectionHandler.ValueAttributeNameGet">
            <summary>Задает stub DictionarySectionHandler.get_ValueAttributeName()</summary>
        </member>
        <member name="T:System.Configuration.Fakes.StubIApplicationSettingsProvider">
            <summary>Тип заглушки System.Configuration.IApplicationSettingsProvider</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubIApplicationSettingsProvider.#ctor">
            <summary>Инициализирует новый экземпляр type StubIApplicationSettingsProvider</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubIApplicationSettingsProvider.GetPreviousVersionSettingsContextSettingsProperty">
            <summary>Задает stub IApplicationSettingsProvider.GetPreviousVersion(SettingsContext context, SettingsProperty property)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubIApplicationSettingsProvider.ResetSettingsContext">
            <summary>Задает stub IApplicationSettingsProvider.Reset(SettingsContext context)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubIApplicationSettingsProvider.System#Configuration#IApplicationSettingsProvider#GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)">
            <summary>Задает заглушка IApplicationSettingsProvider.GetPreviousVersion(SettingsContext context, SettingsProperty property)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubIApplicationSettingsProvider.System#Configuration#IApplicationSettingsProvider#Reset(System.Configuration.SettingsContext)">
            <summary>Задает заглушка IApplicationSettingsProvider.Reset(SettingsContext context)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubIApplicationSettingsProvider.System#Configuration#IApplicationSettingsProvider#Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)">
            <summary>Задает заглушка IApplicationSettingsProvider.Upgrade(SettingsContext context, SettingsPropertyCollection properties)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubIApplicationSettingsProvider.UpgradeSettingsContextSettingsPropertyCollection">
            <summary>Задает stub IApplicationSettingsProvider.Upgrade(SettingsContext context, SettingsPropertyCollection properties)</summary>
        </member>
        <member name="T:System.Configuration.Fakes.StubIConfigurationSectionHandler">
            <summary>Тип заглушки System.Configuration.IConfigurationSectionHandler</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubIConfigurationSectionHandler.#ctor">
            <summary>Инициализирует новый экземпляр type StubIConfigurationSectionHandler</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubIConfigurationSectionHandler.CreateObjectObjectXmlNode">
            <summary>Задает stub IConfigurationSectionHandler.Create(Object parent, Object configContext, XmlNode section)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubIConfigurationSectionHandler.System#Configuration#IConfigurationSectionHandler#Create(System.Object,System.Object,System.Xml.XmlNode)">
            <summary>Задает заглушка IConfigurationSectionHandler.Create(Object parent, Object configContext, XmlNode section)</summary>
        </member>
        <member name="T:System.Configuration.Fakes.StubIConfigurationSystem">
            <summary>Тип заглушки System.Configuration.IConfigurationSystem</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubIConfigurationSystem.#ctor">
            <summary>Инициализирует новый экземпляр type StubIConfigurationSystem</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubIConfigurationSystem.GetConfigString">
            <summary>Задает stub IConfigurationSystem.GetConfig(String configKey)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubIConfigurationSystem.Init">
            <summary>Задает stub IConfigurationSystem.Init()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubIConfigurationSystem.System#Configuration#IConfigurationSystem#GetConfig(System.String)">
            <summary>Задает заглушка IConfigurationSystem.GetConfig(String configKey)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubIConfigurationSystem.System#Configuration#IConfigurationSystem#Init">
            <summary>Задает заглушка IConfigurationSystem.Init()</summary>
        </member>
        <member name="T:System.Configuration.Fakes.StubIPersistComponentSettings">
            <summary>Тип заглушки System.Configuration.IPersistComponentSettings</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubIPersistComponentSettings.#ctor">
            <summary>Инициализирует новый экземпляр type StubIPersistComponentSettings</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubIPersistComponentSettings.AttachBackingFieldToSaveSettings">
            <summary>Присоединение делегатов для эмуляции StubIPersistComponentSettings.SaveSettings как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubIPersistComponentSettings.AttachBackingFieldToSettingsKey">
            <summary>Присоединение делегатов для эмуляции StubIPersistComponentSettings.SettingsKey как свойства с резервным полем.</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubIPersistComponentSettings.LoadComponentSettings">
            <summary>Задает stub IPersistComponentSettings.LoadComponentSettings()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubIPersistComponentSettings.ResetComponentSettings">
            <summary>Задает stub IPersistComponentSettings.ResetComponentSettings()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubIPersistComponentSettings.SaveComponentSettings">
            <summary>Задает stub IPersistComponentSettings.SaveComponentSettings()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubIPersistComponentSettings.System#Configuration#IPersistComponentSettings#SaveSettings">
            <summary>Задает stub IPersistComponentSettings.get_SaveSettings()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubIPersistComponentSettings.SaveSettingsGet">
            <summary>Задает stub IPersistComponentSettings.get_SaveSettings()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubIPersistComponentSettings.SaveSettingsSetBoolean">
            <summary>Задает stub IPersistComponentSettings.set_SaveSettings(Boolean value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubIPersistComponentSettings.System#Configuration#IPersistComponentSettings#SettingsKey">
            <summary>Задает stub IPersistComponentSettings.get_SettingsKey()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubIPersistComponentSettings.SettingsKeyGet">
            <summary>Задает stub IPersistComponentSettings.get_SettingsKey()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubIPersistComponentSettings.SettingsKeySetString">
            <summary>Задает stub IPersistComponentSettings.set_SettingsKey(String value)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubIPersistComponentSettings.System#Configuration#IPersistComponentSettings#LoadComponentSettings">
            <summary>Задает заглушка IPersistComponentSettings.LoadComponentSettings()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubIPersistComponentSettings.System#Configuration#IPersistComponentSettings#ResetComponentSettings">
            <summary>Задает заглушка IPersistComponentSettings.ResetComponentSettings()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubIPersistComponentSettings.System#Configuration#IPersistComponentSettings#SaveComponentSettings">
            <summary>Задает заглушка IPersistComponentSettings.SaveComponentSettings()</summary>
        </member>
        <member name="T:System.Configuration.Fakes.StubISettingsProviderService">
            <summary>Тип заглушки System.Configuration.ISettingsProviderService</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubISettingsProviderService.#ctor">
            <summary>Инициализирует новый экземпляр type StubISettingsProviderService</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubISettingsProviderService.GetSettingsProviderSettingsProperty">
            <summary>Задает stub ISettingsProviderService.GetSettingsProvider(SettingsProperty property)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubISettingsProviderService.System#Configuration#ISettingsProviderService#GetSettingsProvider(System.Configuration.SettingsProperty)">
            <summary>Задает заглушка ISettingsProviderService.GetSettingsProvider(SettingsProperty property)</summary>
        </member>
        <member name="T:System.Configuration.Fakes.StubIgnoreSectionHandler">
            <summary>Тип заглушки System.Configuration.IgnoreSectionHandler</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubIgnoreSectionHandler.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubIgnoreSectionHandler.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubIgnoreSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)">
            <summary>Задает заглушка IgnoreSectionHandler.Create(Object parent, Object configContext, XmlNode section)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubIgnoreSectionHandler.CreateObjectObjectXmlNode">
            <summary>Задает stub IgnoreSectionHandler.Create(Object parent, Object configContext, XmlNode section)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubIgnoreSectionHandler.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubIgnoreSectionHandler</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubIgnoreSectionHandler.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubIgnoreSectionHandler.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Configuration.Fakes.StubLocalFileSettingsProvider">
            <summary>Тип заглушки System.Configuration.LocalFileSettingsProvider</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubLocalFileSettingsProvider.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubLocalFileSettingsProvider.ApplicationName">
            <summary>Задает stub LocalFileSettingsProvider.get_ApplicationName()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubLocalFileSettingsProvider.ApplicationNameGet">
            <summary>Задает stub LocalFileSettingsProvider.get_ApplicationName()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubLocalFileSettingsProvider.ApplicationNameSetString">
            <summary>Задает stub LocalFileSettingsProvider.set_ApplicationName(String value)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubLocalFileSettingsProvider.AttachBackingFieldToApplicationName">
            <summary>Присоединение делегатов для эмуляции StubLocalFileSettingsProvider.ApplicationName как свойства с резервным полем.</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubLocalFileSettingsProvider.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubLocalFileSettingsProvider.Description">
            <summary>Задает stub ProviderBase.get_Description()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubLocalFileSettingsProvider.DescriptionGet">
            <summary>Задает stub ProviderBase.get_Description()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubLocalFileSettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)">
            <summary>Задает заглушка LocalFileSettingsProvider.GetPropertyValues(SettingsContext context, SettingsPropertyCollection properties)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubLocalFileSettingsProvider.GetPropertyValuesSettingsContextSettingsPropertyCollection">
            <summary>Задает stub LocalFileSettingsProvider.GetPropertyValues(SettingsContext context, SettingsPropertyCollection properties)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubLocalFileSettingsProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>Задает заглушка LocalFileSettingsProvider.Initialize(String name, NameValueCollection values)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubLocalFileSettingsProvider.InitializeStringNameValueCollection">
            <summary>Задает stub LocalFileSettingsProvider.Initialize(String name, NameValueCollection values)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubLocalFileSettingsProvider.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubLocalFileSettingsProvider</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubLocalFileSettingsProvider.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubLocalFileSettingsProvider.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubLocalFileSettingsProvider.Name">
            <summary>Задает stub ProviderBase.get_Name()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubLocalFileSettingsProvider.NameGet">
            <summary>Задает stub ProviderBase.get_Name()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubLocalFileSettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)">
            <summary>Задает заглушка LocalFileSettingsProvider.SetPropertyValues(SettingsContext context, SettingsPropertyValueCollection values)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubLocalFileSettingsProvider.SetPropertyValuesSettingsContextSettingsPropertyValueCollection">
            <summary>Задает stub LocalFileSettingsProvider.SetPropertyValues(SettingsContext context, SettingsPropertyValueCollection values)</summary>
        </member>
        <member name="T:System.Configuration.Fakes.StubNameValueFileSectionHandler">
            <summary>Тип заглушки System.Configuration.NameValueFileSectionHandler</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubNameValueFileSectionHandler.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubNameValueFileSectionHandler.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubNameValueFileSectionHandler.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubNameValueFileSectionHandler</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubNameValueFileSectionHandler.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubNameValueFileSectionHandler.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Configuration.Fakes.StubNameValueSectionHandler">
            <summary>Тип заглушки System.Configuration.NameValueSectionHandler</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubNameValueSectionHandler.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubNameValueSectionHandler.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubNameValueSectionHandler.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubNameValueSectionHandler</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubNameValueSectionHandler.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubNameValueSectionHandler.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubNameValueSectionHandler.KeyAttributeName">
            <summary>Задает stub NameValueSectionHandler.get_KeyAttributeName()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubNameValueSectionHandler.KeyAttributeNameGet">
            <summary>Задает stub NameValueSectionHandler.get_KeyAttributeName()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubNameValueSectionHandler.ValueAttributeName">
            <summary>Задает stub NameValueSectionHandler.get_ValueAttributeName()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubNameValueSectionHandler.ValueAttributeNameGet">
            <summary>Задает stub NameValueSectionHandler.get_ValueAttributeName()</summary>
        </member>
        <member name="T:System.Configuration.Fakes.StubSettingAttribute">
            <summary>Тип заглушки System.Configuration.SettingAttribute</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSettingAttribute.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubSettingAttribute.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSettingAttribute.Equals(System.Object)">
            <summary>Задает заглушка Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingAttribute.EqualsObject">
            <summary>Задает stub Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSettingAttribute.GetHashCode">
            <summary>Задает заглушка Attribute.GetHashCode()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingAttribute.GetHashCode01">
            <summary>Задает stub Attribute.GetHashCode()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSettingAttribute.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubSettingAttribute</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubSettingAttribute.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubSettingAttribute.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSettingAttribute.IsDefaultAttribute">
            <summary>Задает заглушка Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingAttribute.IsDefaultAttribute01">
            <summary>Задает stub Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSettingAttribute.Match(System.Object)">
            <summary>Задает заглушка Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingAttribute.MatchObject">
            <summary>Задает stub Attribute.Match(Object obj)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubSettingAttribute.TypeId">
            <summary>Задает stub Attribute.get_TypeId()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingAttribute.TypeIdGet">
            <summary>Задает stub Attribute.get_TypeId()</summary>
        </member>
        <member name="T:System.Configuration.Fakes.StubSettingChangingEventArgs">
            <summary>Тип заглушки System.Configuration.SettingChangingEventArgs</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSettingChangingEventArgs.#ctor(System.String,System.String,System.String,System.Object,System.Boolean)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubSettingChangingEventArgs.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSettingChangingEventArgs.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubSettingChangingEventArgs</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubSettingChangingEventArgs.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubSettingChangingEventArgs.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Configuration.Fakes.StubSettingsAttributeDictionary">
            <summary>Тип заглушки System.Configuration.SettingsAttributeDictionary</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSettingsAttributeDictionary.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSettingsAttributeDictionary.#ctor(System.Configuration.SettingsAttributeDictionary)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSettingsAttributeDictionary.Add(System.Object,System.Object)">
            <summary>Задает заглушка Hashtable.Add(Object key, Object value)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsAttributeDictionary.AddObjectObject">
            <summary>Задает stub Hashtable.Add(Object key, Object value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubSettingsAttributeDictionary.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSettingsAttributeDictionary.Clear">
            <summary>Задает заглушка Hashtable.Clear()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsAttributeDictionary.Clear01">
            <summary>Задает stub Hashtable.Clear()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSettingsAttributeDictionary.Clone">
            <summary>Задает заглушка Hashtable.Clone()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsAttributeDictionary.Clone01">
            <summary>Задает stub Hashtable.Clone()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSettingsAttributeDictionary.Contains(System.Object)">
            <summary>Задает заглушка Hashtable.Contains(Object key)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSettingsAttributeDictionary.ContainsKey(System.Object)">
            <summary>Задает заглушка Hashtable.ContainsKey(Object key)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsAttributeDictionary.ContainsKeyObject">
            <summary>Задает stub Hashtable.ContainsKey(Object key)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsAttributeDictionary.ContainsObject">
            <summary>Задает stub Hashtable.Contains(Object key)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSettingsAttributeDictionary.ContainsValue(System.Object)">
            <summary>Задает заглушка Hashtable.ContainsValue(Object value)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsAttributeDictionary.ContainsValueObject">
            <summary>Задает stub Hashtable.ContainsValue(Object value)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSettingsAttributeDictionary.CopyTo(System.Array,System.Int32)">
            <summary>Задает заглушка Hashtable.CopyTo(Array array, Int32 arrayIndex)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsAttributeDictionary.CopyToArrayInt32">
            <summary>Задает stub Hashtable.CopyTo(Array array, Int32 arrayIndex)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubSettingsAttributeDictionary.Count">
            <summary>Задает stub Hashtable.get_Count()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsAttributeDictionary.CountGet">
            <summary>Задает stub Hashtable.get_Count()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSettingsAttributeDictionary.GetEnumerator">
            <summary>Задает заглушка Hashtable.GetEnumerator()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsAttributeDictionary.GetEnumerator01">
            <summary>Задает stub Hashtable.GetEnumerator()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSettingsAttributeDictionary.GetHash(System.Object)">
            <summary>Задает заглушка Hashtable.GetHash(Object key)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsAttributeDictionary.GetHashObject">
            <summary>Задает stub Hashtable.GetHash(Object key)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSettingsAttributeDictionary.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка Hashtable.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsAttributeDictionary.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub Hashtable.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSettingsAttributeDictionary.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubSettingsAttributeDictionary</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubSettingsAttributeDictionary.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubSettingsAttributeDictionary.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubSettingsAttributeDictionary.IsFixedSize">
            <summary>Задает stub Hashtable.get_IsFixedSize()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsAttributeDictionary.IsFixedSizeGet">
            <summary>Задает stub Hashtable.get_IsFixedSize()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubSettingsAttributeDictionary.IsReadOnly">
            <summary>Задает stub Hashtable.get_IsReadOnly()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsAttributeDictionary.IsReadOnlyGet">
            <summary>Задает stub Hashtable.get_IsReadOnly()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubSettingsAttributeDictionary.IsSynchronized">
            <summary>Задает stub Hashtable.get_IsSynchronized()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsAttributeDictionary.IsSynchronizedGet">
            <summary>Задает stub Hashtable.get_IsSynchronized()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubSettingsAttributeDictionary.Item(System.Object)">
            <summary>Задает stub Hashtable.get_Item(Object key)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsAttributeDictionary.ItemGetObject">
            <summary>Задает stub Hashtable.get_Item(Object key)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsAttributeDictionary.ItemSetObjectObject">
            <summary>Задает stub Hashtable.set_Item(Object key, Object value)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSettingsAttributeDictionary.KeyEquals(System.Object,System.Object)">
            <summary>Задает заглушка Hashtable.KeyEquals(Object item, Object key)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsAttributeDictionary.KeyEqualsObjectObject">
            <summary>Задает stub Hashtable.KeyEquals(Object item, Object key)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubSettingsAttributeDictionary.Keys">
            <summary>Задает stub Hashtable.get_Keys()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsAttributeDictionary.KeysGet">
            <summary>Задает stub Hashtable.get_Keys()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSettingsAttributeDictionary.OnDeserialization(System.Object)">
            <summary>Задает заглушка Hashtable.OnDeserialization(Object sender)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsAttributeDictionary.OnDeserializationObject">
            <summary>Задает stub Hashtable.OnDeserialization(Object sender)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSettingsAttributeDictionary.Remove(System.Object)">
            <summary>Задает заглушка Hashtable.Remove(Object key)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsAttributeDictionary.RemoveObject">
            <summary>Задает stub Hashtable.Remove(Object key)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubSettingsAttributeDictionary.SyncRoot">
            <summary>Задает stub Hashtable.get_SyncRoot()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsAttributeDictionary.SyncRootGet">
            <summary>Задает stub Hashtable.get_SyncRoot()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubSettingsAttributeDictionary.Values">
            <summary>Задает stub Hashtable.get_Values()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsAttributeDictionary.ValuesGet">
            <summary>Задает stub Hashtable.get_Values()</summary>
        </member>
        <member name="T:System.Configuration.Fakes.StubSettingsBase">
            <summary>Тип заглушки System.Configuration.SettingsBase</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSettingsBase.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubSettingsBase.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubSettingsBase.Context">
            <summary>Задает stub SettingsBase.get_Context()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsBase.ContextGet">
            <summary>Задает stub SettingsBase.get_Context()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSettingsBase.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubSettingsBase</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubSettingsBase.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubSettingsBase.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubSettingsBase.Item(System.String)">
            <summary>Задает stub SettingsBase.get_Item(String propertyName)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsBase.ItemGetString">
            <summary>Задает stub SettingsBase.get_Item(String propertyName)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsBase.ItemSetStringObject">
            <summary>Задает stub SettingsBase.set_Item(String propertyName, Object value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubSettingsBase.Properties">
            <summary>Задает stub SettingsBase.get_Properties()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsBase.PropertiesGet">
            <summary>Задает stub SettingsBase.get_Properties()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubSettingsBase.PropertyValues">
            <summary>Задает stub SettingsBase.get_PropertyValues()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsBase.PropertyValuesGet">
            <summary>Задает stub SettingsBase.get_PropertyValues()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubSettingsBase.Providers">
            <summary>Задает stub SettingsBase.get_Providers()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsBase.ProvidersGet">
            <summary>Задает stub SettingsBase.get_Providers()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSettingsBase.Save">
            <summary>Задает заглушка SettingsBase.Save()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsBase.Save01">
            <summary>Задает stub SettingsBase.Save()</summary>
        </member>
        <member name="T:System.Configuration.Fakes.StubSettingsContext">
            <summary>Тип заглушки System.Configuration.SettingsContext</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSettingsContext.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSettingsContext.Add(System.Object,System.Object)">
            <summary>Задает заглушка Hashtable.Add(Object key, Object value)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsContext.AddObjectObject">
            <summary>Задает stub Hashtable.Add(Object key, Object value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubSettingsContext.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSettingsContext.Clear">
            <summary>Задает заглушка Hashtable.Clear()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsContext.Clear01">
            <summary>Задает stub Hashtable.Clear()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSettingsContext.Clone">
            <summary>Задает заглушка Hashtable.Clone()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsContext.Clone01">
            <summary>Задает stub Hashtable.Clone()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSettingsContext.Contains(System.Object)">
            <summary>Задает заглушка Hashtable.Contains(Object key)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSettingsContext.ContainsKey(System.Object)">
            <summary>Задает заглушка Hashtable.ContainsKey(Object key)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsContext.ContainsKeyObject">
            <summary>Задает stub Hashtable.ContainsKey(Object key)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsContext.ContainsObject">
            <summary>Задает stub Hashtable.Contains(Object key)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSettingsContext.ContainsValue(System.Object)">
            <summary>Задает заглушка Hashtable.ContainsValue(Object value)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsContext.ContainsValueObject">
            <summary>Задает stub Hashtable.ContainsValue(Object value)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSettingsContext.CopyTo(System.Array,System.Int32)">
            <summary>Задает заглушка Hashtable.CopyTo(Array array, Int32 arrayIndex)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsContext.CopyToArrayInt32">
            <summary>Задает stub Hashtable.CopyTo(Array array, Int32 arrayIndex)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubSettingsContext.Count">
            <summary>Задает stub Hashtable.get_Count()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsContext.CountGet">
            <summary>Задает stub Hashtable.get_Count()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSettingsContext.GetEnumerator">
            <summary>Задает заглушка Hashtable.GetEnumerator()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsContext.GetEnumerator01">
            <summary>Задает stub Hashtable.GetEnumerator()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSettingsContext.GetHash(System.Object)">
            <summary>Задает заглушка Hashtable.GetHash(Object key)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsContext.GetHashObject">
            <summary>Задает stub Hashtable.GetHash(Object key)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSettingsContext.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка Hashtable.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsContext.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub Hashtable.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSettingsContext.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubSettingsContext</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubSettingsContext.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubSettingsContext.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubSettingsContext.IsFixedSize">
            <summary>Задает stub Hashtable.get_IsFixedSize()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsContext.IsFixedSizeGet">
            <summary>Задает stub Hashtable.get_IsFixedSize()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubSettingsContext.IsReadOnly">
            <summary>Задает stub Hashtable.get_IsReadOnly()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsContext.IsReadOnlyGet">
            <summary>Задает stub Hashtable.get_IsReadOnly()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubSettingsContext.IsSynchronized">
            <summary>Задает stub Hashtable.get_IsSynchronized()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsContext.IsSynchronizedGet">
            <summary>Задает stub Hashtable.get_IsSynchronized()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubSettingsContext.Item(System.Object)">
            <summary>Задает stub Hashtable.get_Item(Object key)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsContext.ItemGetObject">
            <summary>Задает stub Hashtable.get_Item(Object key)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsContext.ItemSetObjectObject">
            <summary>Задает stub Hashtable.set_Item(Object key, Object value)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSettingsContext.KeyEquals(System.Object,System.Object)">
            <summary>Задает заглушка Hashtable.KeyEquals(Object item, Object key)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsContext.KeyEqualsObjectObject">
            <summary>Задает stub Hashtable.KeyEquals(Object item, Object key)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubSettingsContext.Keys">
            <summary>Задает stub Hashtable.get_Keys()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsContext.KeysGet">
            <summary>Задает stub Hashtable.get_Keys()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSettingsContext.OnDeserialization(System.Object)">
            <summary>Задает заглушка Hashtable.OnDeserialization(Object sender)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsContext.OnDeserializationObject">
            <summary>Задает stub Hashtable.OnDeserialization(Object sender)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSettingsContext.Remove(System.Object)">
            <summary>Задает заглушка Hashtable.Remove(Object key)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsContext.RemoveObject">
            <summary>Задает stub Hashtable.Remove(Object key)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubSettingsContext.SyncRoot">
            <summary>Задает stub Hashtable.get_SyncRoot()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsContext.SyncRootGet">
            <summary>Задает stub Hashtable.get_SyncRoot()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubSettingsContext.Values">
            <summary>Задает stub Hashtable.get_Values()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsContext.ValuesGet">
            <summary>Задает stub Hashtable.get_Values()</summary>
        </member>
        <member name="T:System.Configuration.Fakes.StubSettingsLoadedEventArgs">
            <summary>Тип заглушки System.Configuration.SettingsLoadedEventArgs</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSettingsLoadedEventArgs.#ctor(System.Configuration.SettingsProvider)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubSettingsLoadedEventArgs.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSettingsLoadedEventArgs.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubSettingsLoadedEventArgs</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubSettingsLoadedEventArgs.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubSettingsLoadedEventArgs.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Configuration.Fakes.StubSettingsProperty">
            <summary>Тип заглушки System.Configuration.SettingsProperty</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSettingsProperty.#ctor(System.Configuration.SettingsProperty)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSettingsProperty.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSettingsProperty.#ctor(System.String,System.Type,System.Configuration.SettingsProvider,System.Boolean,System.Object,System.Configuration.SettingsSerializeAs,System.Configuration.SettingsAttributeDictionary,System.Boolean,System.Boolean)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSettingsProperty.AttachBackingFieldToDefaultValue">
            <summary>Присоединение делегатов для эмуляции StubSettingsProperty.DefaultValue как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSettingsProperty.AttachBackingFieldToIsReadOnly">
            <summary>Присоединение делегатов для эмуляции StubSettingsProperty.IsReadOnly как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSettingsProperty.AttachBackingFieldToName">
            <summary>Присоединение делегатов для эмуляции StubSettingsProperty.Name как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSettingsProperty.AttachBackingFieldToPropertyType">
            <summary>Присоединение делегатов для эмуляции StubSettingsProperty.PropertyType как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSettingsProperty.AttachBackingFieldToProvider">
            <summary>Присоединение делегатов для эмуляции StubSettingsProperty.Provider как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSettingsProperty.AttachBackingFieldToSerializeAs">
            <summary>Присоединение делегатов для эмуляции StubSettingsProperty.SerializeAs как свойства с резервным полем.</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubSettingsProperty.Attributes">
            <summary>Задает stub SettingsProperty.get_Attributes()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsProperty.AttributesGet">
            <summary>Задает stub SettingsProperty.get_Attributes()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubSettingsProperty.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubSettingsProperty.DefaultValue">
            <summary>Задает stub SettingsProperty.get_DefaultValue()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsProperty.DefaultValueGet">
            <summary>Задает stub SettingsProperty.get_DefaultValue()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsProperty.DefaultValueSetObject">
            <summary>Задает stub SettingsProperty.set_DefaultValue(Object value)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSettingsProperty.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubSettingsProperty</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubSettingsProperty.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubSettingsProperty.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubSettingsProperty.IsReadOnly">
            <summary>Задает stub SettingsProperty.get_IsReadOnly()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsProperty.IsReadOnlyGet">
            <summary>Задает stub SettingsProperty.get_IsReadOnly()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsProperty.IsReadOnlySetBoolean">
            <summary>Задает stub SettingsProperty.set_IsReadOnly(Boolean value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubSettingsProperty.Name">
            <summary>Задает stub SettingsProperty.get_Name()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsProperty.NameGet">
            <summary>Задает stub SettingsProperty.get_Name()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsProperty.NameSetString">
            <summary>Задает stub SettingsProperty.set_Name(String value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubSettingsProperty.PropertyType">
            <summary>Задает stub SettingsProperty.get_PropertyType()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsProperty.PropertyTypeGet">
            <summary>Задает stub SettingsProperty.get_PropertyType()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsProperty.PropertyTypeSetType">
            <summary>Задает stub SettingsProperty.set_PropertyType(Type value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubSettingsProperty.Provider">
            <summary>Задает stub SettingsProperty.get_Provider()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsProperty.ProviderGet">
            <summary>Задает stub SettingsProperty.get_Provider()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsProperty.ProviderSetSettingsProvider">
            <summary>Задает stub SettingsProperty.set_Provider(SettingsProvider value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubSettingsProperty.SerializeAs">
            <summary>Задает stub SettingsProperty.get_SerializeAs()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsProperty.SerializeAsGet">
            <summary>Задает stub SettingsProperty.get_SerializeAs()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsProperty.SerializeAsSetSettingsSerializeAs">
            <summary>Задает stub SettingsProperty.set_SerializeAs(SettingsSerializeAs value)</summary>
        </member>
        <member name="T:System.Configuration.Fakes.StubSettingsPropertyCollection">
            <summary>Тип заглушки System.Configuration.SettingsPropertyCollection</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSettingsPropertyCollection.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubSettingsPropertyCollection.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSettingsPropertyCollection.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubSettingsPropertyCollection</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubSettingsPropertyCollection.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubSettingsPropertyCollection.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSettingsPropertyCollection.OnAdd(System.Configuration.SettingsProperty)">
            <summary>Задает заглушка SettingsPropertyCollection.OnAdd(SettingsProperty property)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSettingsPropertyCollection.OnAddComplete(System.Configuration.SettingsProperty)">
            <summary>Задает заглушка SettingsPropertyCollection.OnAddComplete(SettingsProperty property)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsPropertyCollection.OnAddCompleteSettingsProperty">
            <summary>Задает stub SettingsPropertyCollection.OnAddComplete(SettingsProperty property)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsPropertyCollection.OnAddSettingsProperty">
            <summary>Задает stub SettingsPropertyCollection.OnAdd(SettingsProperty property)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSettingsPropertyCollection.OnClear">
            <summary>Задает заглушка SettingsPropertyCollection.OnClear()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsPropertyCollection.OnClear01">
            <summary>Задает stub SettingsPropertyCollection.OnClear()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSettingsPropertyCollection.OnClearComplete">
            <summary>Задает заглушка SettingsPropertyCollection.OnClearComplete()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsPropertyCollection.OnClearComplete01">
            <summary>Задает stub SettingsPropertyCollection.OnClearComplete()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSettingsPropertyCollection.OnRemove(System.Configuration.SettingsProperty)">
            <summary>Задает заглушка SettingsPropertyCollection.OnRemove(SettingsProperty property)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSettingsPropertyCollection.OnRemoveComplete(System.Configuration.SettingsProperty)">
            <summary>Задает заглушка SettingsPropertyCollection.OnRemoveComplete(SettingsProperty property)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsPropertyCollection.OnRemoveCompleteSettingsProperty">
            <summary>Задает stub SettingsPropertyCollection.OnRemoveComplete(SettingsProperty property)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsPropertyCollection.OnRemoveSettingsProperty">
            <summary>Задает stub SettingsPropertyCollection.OnRemove(SettingsProperty property)</summary>
        </member>
        <member name="T:System.Configuration.Fakes.StubSettingsPropertyIsReadOnlyException">
            <summary>Тип заглушки System.Configuration.SettingsPropertyIsReadOnlyException</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSettingsPropertyIsReadOnlyException.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSettingsPropertyIsReadOnlyException.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSettingsPropertyIsReadOnlyException.#ctor(System.String,System.Exception)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSettingsPropertyIsReadOnlyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSettingsPropertyIsReadOnlyException.AttachBackingFieldToHelpLink">
            <summary>Присоединение делегатов для эмуляции StubSettingsPropertyIsReadOnlyException.HelpLink как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSettingsPropertyIsReadOnlyException.AttachBackingFieldToSource">
            <summary>Присоединение делегатов для эмуляции StubSettingsPropertyIsReadOnlyException.Source как свойства с резервным полем.</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubSettingsPropertyIsReadOnlyException.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubSettingsPropertyIsReadOnlyException.Data">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsPropertyIsReadOnlyException.DataGet">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSettingsPropertyIsReadOnlyException.GetBaseException">
            <summary>Задает заглушка Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsPropertyIsReadOnlyException.GetBaseException01">
            <summary>Задает stub Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSettingsPropertyIsReadOnlyException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsPropertyIsReadOnlyException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubSettingsPropertyIsReadOnlyException.HelpLink">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsPropertyIsReadOnlyException.HelpLinkGet">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsPropertyIsReadOnlyException.HelpLinkSetString">
            <summary>Задает stub Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSettingsPropertyIsReadOnlyException.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubSettingsPropertyIsReadOnlyException</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubSettingsPropertyIsReadOnlyException.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubSettingsPropertyIsReadOnlyException.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubSettingsPropertyIsReadOnlyException.Message">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsPropertyIsReadOnlyException.MessageGet">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubSettingsPropertyIsReadOnlyException.Source">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsPropertyIsReadOnlyException.SourceGet">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsPropertyIsReadOnlyException.SourceSetString">
            <summary>Задает stub Exception.set_Source(String value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubSettingsPropertyIsReadOnlyException.StackTrace">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsPropertyIsReadOnlyException.StackTraceGet">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSettingsPropertyIsReadOnlyException.ToString">
            <summary>Задает заглушка Exception.ToString()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsPropertyIsReadOnlyException.ToString01">
            <summary>Задает stub Exception.ToString()</summary>
        </member>
        <member name="T:System.Configuration.Fakes.StubSettingsPropertyNotFoundException">
            <summary>Тип заглушки System.Configuration.SettingsPropertyNotFoundException</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSettingsPropertyNotFoundException.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSettingsPropertyNotFoundException.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSettingsPropertyNotFoundException.#ctor(System.String,System.Exception)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSettingsPropertyNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSettingsPropertyNotFoundException.AttachBackingFieldToHelpLink">
            <summary>Присоединение делегатов для эмуляции StubSettingsPropertyNotFoundException.HelpLink как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSettingsPropertyNotFoundException.AttachBackingFieldToSource">
            <summary>Присоединение делегатов для эмуляции StubSettingsPropertyNotFoundException.Source как свойства с резервным полем.</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubSettingsPropertyNotFoundException.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubSettingsPropertyNotFoundException.Data">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsPropertyNotFoundException.DataGet">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSettingsPropertyNotFoundException.GetBaseException">
            <summary>Задает заглушка Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsPropertyNotFoundException.GetBaseException01">
            <summary>Задает stub Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSettingsPropertyNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsPropertyNotFoundException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubSettingsPropertyNotFoundException.HelpLink">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsPropertyNotFoundException.HelpLinkGet">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsPropertyNotFoundException.HelpLinkSetString">
            <summary>Задает stub Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSettingsPropertyNotFoundException.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubSettingsPropertyNotFoundException</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubSettingsPropertyNotFoundException.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubSettingsPropertyNotFoundException.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubSettingsPropertyNotFoundException.Message">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsPropertyNotFoundException.MessageGet">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubSettingsPropertyNotFoundException.Source">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsPropertyNotFoundException.SourceGet">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsPropertyNotFoundException.SourceSetString">
            <summary>Задает stub Exception.set_Source(String value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubSettingsPropertyNotFoundException.StackTrace">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsPropertyNotFoundException.StackTraceGet">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSettingsPropertyNotFoundException.ToString">
            <summary>Задает заглушка Exception.ToString()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsPropertyNotFoundException.ToString01">
            <summary>Задает stub Exception.ToString()</summary>
        </member>
        <member name="T:System.Configuration.Fakes.StubSettingsPropertyValue">
            <summary>Тип заглушки System.Configuration.SettingsPropertyValue</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSettingsPropertyValue.#ctor(System.Configuration.SettingsProperty)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubSettingsPropertyValue.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSettingsPropertyValue.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubSettingsPropertyValue</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubSettingsPropertyValue.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubSettingsPropertyValue.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Configuration.Fakes.StubSettingsPropertyValueCollection">
            <summary>Тип заглушки System.Configuration.SettingsPropertyValueCollection</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSettingsPropertyValueCollection.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubSettingsPropertyValueCollection.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSettingsPropertyValueCollection.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubSettingsPropertyValueCollection</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubSettingsPropertyValueCollection.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubSettingsPropertyValueCollection.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Configuration.Fakes.StubSettingsPropertyWrongTypeException">
            <summary>Тип заглушки System.Configuration.SettingsPropertyWrongTypeException</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSettingsPropertyWrongTypeException.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSettingsPropertyWrongTypeException.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSettingsPropertyWrongTypeException.#ctor(System.String,System.Exception)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSettingsPropertyWrongTypeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSettingsPropertyWrongTypeException.AttachBackingFieldToHelpLink">
            <summary>Присоединение делегатов для эмуляции StubSettingsPropertyWrongTypeException.HelpLink как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSettingsPropertyWrongTypeException.AttachBackingFieldToSource">
            <summary>Присоединение делегатов для эмуляции StubSettingsPropertyWrongTypeException.Source как свойства с резервным полем.</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubSettingsPropertyWrongTypeException.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubSettingsPropertyWrongTypeException.Data">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsPropertyWrongTypeException.DataGet">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSettingsPropertyWrongTypeException.GetBaseException">
            <summary>Задает заглушка Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsPropertyWrongTypeException.GetBaseException01">
            <summary>Задает stub Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSettingsPropertyWrongTypeException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsPropertyWrongTypeException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubSettingsPropertyWrongTypeException.HelpLink">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsPropertyWrongTypeException.HelpLinkGet">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsPropertyWrongTypeException.HelpLinkSetString">
            <summary>Задает stub Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSettingsPropertyWrongTypeException.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubSettingsPropertyWrongTypeException</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubSettingsPropertyWrongTypeException.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubSettingsPropertyWrongTypeException.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubSettingsPropertyWrongTypeException.Message">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsPropertyWrongTypeException.MessageGet">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubSettingsPropertyWrongTypeException.Source">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsPropertyWrongTypeException.SourceGet">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsPropertyWrongTypeException.SourceSetString">
            <summary>Задает stub Exception.set_Source(String value)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubSettingsPropertyWrongTypeException.StackTrace">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsPropertyWrongTypeException.StackTraceGet">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSettingsPropertyWrongTypeException.ToString">
            <summary>Задает заглушка Exception.ToString()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsPropertyWrongTypeException.ToString01">
            <summary>Задает stub Exception.ToString()</summary>
        </member>
        <member name="T:System.Configuration.Fakes.StubSettingsProvider">
            <summary>Тип заглушки System.Configuration.SettingsProvider</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSettingsProvider.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubSettingsProvider.ApplicationName">
            <summary>Задает stub SettingsProvider.get_ApplicationName()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsProvider.ApplicationNameGet">
            <summary>Задает stub SettingsProvider.get_ApplicationName()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsProvider.ApplicationNameSetString">
            <summary>Задает stub SettingsProvider.set_ApplicationName(String value)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSettingsProvider.AttachBackingFieldToApplicationName">
            <summary>Присоединение делегатов для эмуляции StubSettingsProvider.ApplicationName как свойства с резервным полем.</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubSettingsProvider.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubSettingsProvider.Description">
            <summary>Задает stub ProviderBase.get_Description()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsProvider.DescriptionGet">
            <summary>Задает stub ProviderBase.get_Description()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)">
            <summary>Задает заглушка SettingsProvider.GetPropertyValues(SettingsContext context, SettingsPropertyCollection collection)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsProvider.GetPropertyValuesSettingsContextSettingsPropertyCollection">
            <summary>Задает stub SettingsProvider.GetPropertyValues(SettingsContext context, SettingsPropertyCollection collection)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSettingsProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>Задает заглушка ProviderBase.Initialize(String name, NameValueCollection config)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsProvider.InitializeStringNameValueCollection">
            <summary>Задает stub ProviderBase.Initialize(String name, NameValueCollection config)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSettingsProvider.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubSettingsProvider</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubSettingsProvider.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubSettingsProvider.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubSettingsProvider.Name">
            <summary>Задает stub ProviderBase.get_Name()</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsProvider.NameGet">
            <summary>Задает stub ProviderBase.get_Name()</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)">
            <summary>Задает заглушка SettingsProvider.SetPropertyValues(SettingsContext context, SettingsPropertyValueCollection collection)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsProvider.SetPropertyValuesSettingsContextSettingsPropertyValueCollection">
            <summary>Задает stub SettingsProvider.SetPropertyValues(SettingsContext context, SettingsPropertyValueCollection collection)</summary>
        </member>
        <member name="T:System.Configuration.Fakes.StubSettingsProviderCollection">
            <summary>Тип заглушки System.Configuration.SettingsProviderCollection</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSettingsProviderCollection.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSettingsProviderCollection.Add(System.Configuration.Provider.ProviderBase)">
            <summary>Задает заглушка SettingsProviderCollection.Add(ProviderBase provider)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSettingsProviderCollection.AddProviderBase">
            <summary>Задает stub SettingsProviderCollection.Add(ProviderBase provider)</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubSettingsProviderCollection.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSettingsProviderCollection.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubSettingsProviderCollection</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubSettingsProviderCollection.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubSettingsProviderCollection.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Configuration.Fakes.StubSingleTagSectionHandler">
            <summary>Тип заглушки System.Configuration.SingleTagSectionHandler</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSingleTagSectionHandler.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubSingleTagSectionHandler.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSingleTagSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)">
            <summary>Задает заглушка SingleTagSectionHandler.Create(Object parent, Object context, XmlNode section)</summary>
        </member>
        <member name="F:System.Configuration.Fakes.StubSingleTagSectionHandler.CreateObjectObjectXmlNode">
            <summary>Задает stub SingleTagSectionHandler.Create(Object parent, Object context, XmlNode section)</summary>
        </member>
        <member name="M:System.Configuration.Fakes.StubSingleTagSectionHandler.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubSingleTagSectionHandler</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubSingleTagSectionHandler.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Configuration.Fakes.StubSingleTagSectionHandler.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Diagnostics.Fakes.ShimEventLog">
            <summary>Тип оболочки совместимости для System.Diagnostics.EventLog</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.ShimEventLog.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.ShimEventLog.#ctor(System.Diagnostics.EventLog)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="T:System.Diagnostics.Fakes.ShimEventLog.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLog.AllInstances.BeginInit">
            <summary>Задает оболочка совместимости EventLog.BeginInit()</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLog.AllInstances.Clear">
            <summary>Задает оболочка совместимости EventLog.Clear()</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLog.AllInstances.Close">
            <summary>Задает оболочка совместимости EventLog.Close()</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLog.AllInstances.ComponentDesignModeGet">
            <summary>Задает оболочка совместимости EventLog.get_ComponentDesignMode()</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLog.AllInstances.ComponentGetServiceType">
            <summary>Задает оболочка совместимости EventLog.ComponentGetService(Type service)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLog.AllInstances.DisposeBoolean">
            <summary>Задает оболочка совместимости EventLog.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLog.AllInstances.EnableRaisingEventsGet">
            <summary>Задает оболочка совместимости EventLog.get_EnableRaisingEvents()</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLog.AllInstances.EnableRaisingEventsSetBoolean">
            <summary>Задает оболочка совместимости EventLog.set_EnableRaisingEvents(Boolean value)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLog.AllInstances.EndInit">
            <summary>Задает оболочка совместимости EventLog.EndInit()</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLog.AllInstances.EntriesGet">
            <summary>Задает оболочка совместимости EventLog.get_Entries()</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLog.AllInstances.EntryWrittenAddEntryWrittenEventHandler">
            <summary>Задает оболочка совместимости EventLog.add_EntryWritten(EntryWrittenEventHandler value)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLog.AllInstances.EntryWrittenRemoveEntryWrittenEventHandler">
            <summary>Задает оболочка совместимости EventLog.remove_EntryWritten(EntryWrittenEventHandler value)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLog.AllInstances.LogDisplayNameGet">
            <summary>Задает оболочка совместимости EventLog.get_LogDisplayName()</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLog.AllInstances.LogGet">
            <summary>Задает оболочка совместимости EventLog.get_Log()</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLog.AllInstances.LogSetString">
            <summary>Задает оболочка совместимости EventLog.set_Log(String value)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLog.AllInstances.MachineNameGet">
            <summary>Задает оболочка совместимости EventLog.get_MachineName()</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLog.AllInstances.MachineNameSetString">
            <summary>Задает оболочка совместимости EventLog.set_MachineName(String value)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLog.AllInstances.MaximumKilobytesGet">
            <summary>Задает оболочка совместимости EventLog.get_MaximumKilobytes()</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLog.AllInstances.MaximumKilobytesSetInt64">
            <summary>Задает оболочка совместимости EventLog.set_MaximumKilobytes(Int64 value)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLog.AllInstances.MinimumRetentionDaysGet">
            <summary>Задает оболочка совместимости EventLog.get_MinimumRetentionDays()</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLog.AllInstances.ModifyOverflowPolicyOverflowActionInt32">
            <summary>Задает оболочка совместимости EventLog.ModifyOverflowPolicy(OverflowAction action, Int32 retentionDays)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLog.AllInstances.OverflowActionGet">
            <summary>Задает оболочка совместимости EventLog.get_OverflowAction()</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLog.AllInstances.RegisterDisplayNameStringInt64">
            <summary>Задает оболочка совместимости EventLog.RegisterDisplayName(String resourceFile, Int64 resourceId)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLog.AllInstances.SourceGet">
            <summary>Задает оболочка совместимости EventLog.get_Source()</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLog.AllInstances.SourceSetString">
            <summary>Задает оболочка совместимости EventLog.set_Source(String value)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLog.AllInstances.SynchronizingObjectGet">
            <summary>Задает оболочка совместимости EventLog.get_SynchronizingObject()</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLog.AllInstances.SynchronizingObjectSetISynchronizeInvoke">
            <summary>Задает оболочка совместимости EventLog.set_SynchronizingObject(ISynchronizeInvoke value)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLog.AllInstances.WriteEntryString">
            <summary>Задает оболочка совместимости EventLog.WriteEntry(String message)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLog.AllInstances.WriteEntryStringEventLogEntryType">
            <summary>Задает оболочка совместимости EventLog.WriteEntry(String message, EventLogEntryType type)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLog.AllInstances.WriteEntryStringEventLogEntryTypeInt32">
            <summary>Задает оболочка совместимости EventLog.WriteEntry(String message, EventLogEntryType type, Int32 eventID)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLog.AllInstances.WriteEntryStringEventLogEntryTypeInt32Int16">
            <summary>Задает оболочка совместимости EventLog.WriteEntry(String message, EventLogEntryType type, Int32 eventID, Int16 category)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLog.AllInstances.WriteEntryStringEventLogEntryTypeInt32Int16ByteArray">
            <summary>Задает оболочка совместимости EventLog.WriteEntry(String message, EventLogEntryType type, Int32 eventID, Int16 category, Byte[] rawData)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLog.AllInstances.WriteEventEventInstanceByteArrayObjectArray">
            <summary>Задает оболочка совместимости EventLog.WriteEvent(EventInstance instance, Byte[] data, Object[] values)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLog.AllInstances.WriteEventEventInstanceObjectArray">
            <summary>Задает оболочка совместимости EventLog.WriteEvent(EventInstance instance, Object[] values)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLog.BeginInit">
            <summary>Задает оболочка совместимости EventLog.BeginInit()</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.ShimEventLog.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.ShimEventLog.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLog.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.ShimEventLog.Bind(System.ComponentModel.IComponent)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.ShimEventLog.Bind(System.ComponentModel.ISupportInitialize)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.ShimEventLog.Bind(System.IDisposable)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLog.Clear">
            <summary>Задает оболочка совместимости EventLog.Clear()</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLog.Close">
            <summary>Задает оболочка совместимости EventLog.Close()</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLog.ComponentDesignModeGet">
            <summary>Задает оболочка совместимости EventLog.get_ComponentDesignMode()</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLog.ComponentGetServiceType">
            <summary>Задает оболочка совместимости EventLog.ComponentGetService(Type service)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLog.Constructor">
            <summary>Задает оболочка совместимости EventLog.EventLog()</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLog.ConstructorString">
            <summary>Задает оболочка совместимости EventLog.EventLog(String logName)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLog.ConstructorStringString">
            <summary>Задает оболочка совместимости EventLog.EventLog(String logName, String machineName)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLog.ConstructorStringStringString">
            <summary>Задает оболочка совместимости EventLog.EventLog(String logName, String machineName, String source)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLog.CreateEventSourceEventSourceCreationData">
            <summary>Задает оболочка совместимости EventLog.CreateEventSource(EventSourceCreationData sourceData)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLog.CreateEventSourceStringString">
            <summary>Задает оболочка совместимости EventLog.CreateEventSource(String source, String logName)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLog.CreateEventSourceStringStringString">
            <summary>Задает оболочка совместимости EventLog.CreateEventSource(String source, String logName, String machineName)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLog.DeleteEventSourceString">
            <summary>Задает оболочка совместимости EventLog.DeleteEventSource(String source)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLog.DeleteEventSourceStringString">
            <summary>Задает оболочка совместимости EventLog.DeleteEventSource(String source, String machineName)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLog.DeleteString">
            <summary>Задает оболочка совместимости EventLog.Delete(String logName)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLog.DeleteStringString">
            <summary>Задает оболочка совместимости EventLog.Delete(String logName, String machineName)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLog.DisposeBoolean">
            <summary>Задает оболочка совместимости EventLog.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLog.EnableRaisingEventsGet">
            <summary>Задает оболочка совместимости EventLog.get_EnableRaisingEvents()</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLog.EnableRaisingEventsSetBoolean">
            <summary>Задает оболочка совместимости EventLog.set_EnableRaisingEvents(Boolean value)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLog.EndInit">
            <summary>Задает оболочка совместимости EventLog.EndInit()</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLog.EntriesGet">
            <summary>Задает оболочка совместимости EventLog.get_Entries()</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLog.EntryWrittenAddEntryWrittenEventHandler">
            <summary>Задает оболочка совместимости EventLog.add_EntryWritten(EntryWrittenEventHandler value)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLog.EntryWrittenRemoveEntryWrittenEventHandler">
            <summary>Задает оболочка совместимости EventLog.remove_EntryWritten(EntryWrittenEventHandler value)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLog.ExistsString">
            <summary>Задает оболочка совместимости EventLog.Exists(String logName)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLog.ExistsStringString">
            <summary>Задает оболочка совместимости EventLog.Exists(String logName, String machineName)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLog.GetDllPathString">
            <summary>Задает оболочка совместимости EventLog.GetDllPath(String machineName)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLog.GetEventLogRegKeyStringBoolean">
            <summary>Задает оболочка совместимости EventLog.GetEventLogRegKey(String machine, Boolean writable)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLog.GetEventLogs">
            <summary>Задает оболочка совместимости EventLog.GetEventLogs()</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLog.GetEventLogsString">
            <summary>Задает оболочка совместимости EventLog.GetEventLogs(String machineName)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLog.LogDisplayNameGet">
            <summary>Задает оболочка совместимости EventLog.get_LogDisplayName()</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLog.LogGet">
            <summary>Задает оболочка совместимости EventLog.get_Log()</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLog.LogNameFromSourceNameStringString">
            <summary>Задает оболочка совместимости EventLog.LogNameFromSourceName(String source, String machineName)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLog.LogSetString">
            <summary>Задает оболочка совместимости EventLog.set_Log(String value)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLog.MachineNameGet">
            <summary>Задает оболочка совместимости EventLog.get_MachineName()</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLog.MachineNameSetString">
            <summary>Задает оболочка совместимости EventLog.set_MachineName(String value)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLog.MaximumKilobytesGet">
            <summary>Задает оболочка совместимости EventLog.get_MaximumKilobytes()</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLog.MaximumKilobytesSetInt64">
            <summary>Задает оболочка совместимости EventLog.set_MaximumKilobytes(Int64 value)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLog.MinimumRetentionDaysGet">
            <summary>Задает оболочка совместимости EventLog.get_MinimumRetentionDays()</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLog.ModifyOverflowPolicyOverflowActionInt32">
            <summary>Задает оболочка совместимости EventLog.ModifyOverflowPolicy(OverflowAction action, Int32 retentionDays)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLog.OverflowActionGet">
            <summary>Задает оболочка совместимости EventLog.get_OverflowAction()</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLog.RegisterDisplayNameStringInt64">
            <summary>Задает оболочка совместимости EventLog.RegisterDisplayName(String resourceFile, Int64 resourceId)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLog.SourceExistsString">
            <summary>Задает оболочка совместимости EventLog.SourceExists(String source)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLog.SourceExistsStringString">
            <summary>Задает оболочка совместимости EventLog.SourceExists(String source, String machineName)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLog.SourceExistsStringStringBoolean">
            <summary>Задает оболочка совместимости EventLog.SourceExists(String source, String machineName, Boolean wantToCreate)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLog.SourceGet">
            <summary>Задает оболочка совместимости EventLog.get_Source()</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLog.SourceSetString">
            <summary>Задает оболочка совместимости EventLog.set_Source(String value)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLog.SynchronizingObjectGet">
            <summary>Задает оболочка совместимости EventLog.get_SynchronizingObject()</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLog.SynchronizingObjectSetISynchronizeInvoke">
            <summary>Задает оболочка совместимости EventLog.set_SynchronizingObject(ISynchronizeInvoke value)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLog.ValidLogNameStringBoolean">
            <summary>Задает оболочка совместимости EventLog.ValidLogName(String logName, Boolean ignoreEmpty)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLog.WriteEntryString">
            <summary>Задает оболочка совместимости EventLog.WriteEntry(String message)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLog.WriteEntryStringEventLogEntryType">
            <summary>Задает оболочка совместимости EventLog.WriteEntry(String message, EventLogEntryType type)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLog.WriteEntryStringEventLogEntryTypeInt32">
            <summary>Задает оболочка совместимости EventLog.WriteEntry(String message, EventLogEntryType type, Int32 eventID)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLog.WriteEntryStringEventLogEntryTypeInt32Int16">
            <summary>Задает оболочка совместимости EventLog.WriteEntry(String message, EventLogEntryType type, Int32 eventID, Int16 category)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLog.WriteEntryStringEventLogEntryTypeInt32Int16ByteArray">
            <summary>Задает оболочка совместимости EventLog.WriteEntry(String message, EventLogEntryType type, Int32 eventID, Int16 category, Byte[] rawData)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLog.WriteEntryStringString">
            <summary>Задает оболочка совместимости EventLog.WriteEntry(String source, String message)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLog.WriteEntryStringStringEventLogEntryType">
            <summary>Задает оболочка совместимости EventLog.WriteEntry(String source, String message, EventLogEntryType type)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLog.WriteEntryStringStringEventLogEntryTypeInt32">
            <summary>Задает оболочка совместимости EventLog.WriteEntry(String source, String message, EventLogEntryType type, Int32 eventID)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLog.WriteEntryStringStringEventLogEntryTypeInt32Int16">
            <summary>Задает оболочка совместимости EventLog.WriteEntry(String source, String message, EventLogEntryType type, Int32 eventID, Int16 category)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLog.WriteEntryStringStringEventLogEntryTypeInt32Int16ByteArray">
            <summary>Задает оболочка совместимости EventLog.WriteEntry(String source, String message, EventLogEntryType type, Int32 eventID, Int16 category, Byte[] rawData)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLog.WriteEventEventInstanceByteArrayObjectArray">
            <summary>Задает оболочка совместимости EventLog.WriteEvent(EventInstance instance, Byte[] data, Object[] values)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLog.WriteEventEventInstanceObjectArray">
            <summary>Задает оболочка совместимости EventLog.WriteEvent(EventInstance instance, Object[] values)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLog.WriteEventStringEventInstanceByteArrayObjectArray">
            <summary>Задает оболочка совместимости EventLog.WriteEvent(String source, EventInstance instance, Byte[] data, Object[] values)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLog.WriteEventStringEventInstanceObjectArray">
            <summary>Задает оболочка совместимости EventLog.WriteEvent(String source, EventInstance instance, Object[] values)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLog._InternalLogNameFromSourceNameStringString">
            <summary>Задает оболочка совместимости EventLog._InternalLogNameFromSourceName(String source, String machineName)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLog._UnsafeGetAssertPermSet">
            <summary>Задает оболочка совместимости EventLog._UnsafeGetAssertPermSet()</summary>
        </member>
        <member name="T:System.Diagnostics.Fakes.ShimEventLogEntry">
            <summary>Тип оболочки совместимости для System.Diagnostics.EventLogEntry</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.ShimEventLogEntry.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.ShimEventLogEntry.#ctor(System.Diagnostics.EventLogEntry)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="T:System.Diagnostics.Fakes.ShimEventLogEntry.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLogEntry.AllInstances.CategoryGet">
            <summary>Задает оболочка совместимости EventLogEntry.get_Category()</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLogEntry.AllInstances.CategoryNumberGet">
            <summary>Задает оболочка совместимости EventLogEntry.get_CategoryNumber()</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLogEntry.AllInstances.DataGet">
            <summary>Задает оболочка совместимости EventLogEntry.get_Data()</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLogEntry.AllInstances.EntryTypeGet">
            <summary>Задает оболочка совместимости EventLogEntry.get_EntryType()</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLogEntry.AllInstances.EqualsEventLogEntry">
            <summary>Задает оболочка совместимости EventLogEntry.Equals(EventLogEntry otherEntry)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLogEntry.AllInstances.EventIDGet">
            <summary>Задает оболочка совместимости EventLogEntry.get_EventID()</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLogEntry.AllInstances.IndexGet">
            <summary>Задает оболочка совместимости EventLogEntry.get_Index()</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLogEntry.AllInstances.InstanceIdGet">
            <summary>Задает оболочка совместимости EventLogEntry.get_InstanceId()</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLogEntry.AllInstances.MachineNameGet">
            <summary>Задает оболочка совместимости EventLogEntry.get_MachineName()</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLogEntry.AllInstances.MessageGet">
            <summary>Задает оболочка совместимости EventLogEntry.get_Message()</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLogEntry.AllInstances.ReplaceMessageParametersStringStringArray">
            <summary>Задает оболочка совместимости EventLogEntry.ReplaceMessageParameters(String msg, String[] insertionStrings)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLogEntry.AllInstances.ReplacementStringsGet">
            <summary>Задает оболочка совместимости EventLogEntry.get_ReplacementStrings()</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLogEntry.AllInstances.SourceGet">
            <summary>Задает оболочка совместимости EventLogEntry.get_Source()</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLogEntry.AllInstances.SystemRuntimeSerializationISerializableGetObjectDataSerializationInfoStreamingContext">
            <summary>Задает оболочка совместимости EventLogEntry.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLogEntry.AllInstances.TimeGeneratedGet">
            <summary>Задает оболочка совместимости EventLogEntry.get_TimeGenerated()</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLogEntry.AllInstances.TimeWrittenGet">
            <summary>Задает оболочка совместимости EventLogEntry.get_TimeWritten()</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLogEntry.AllInstances.UserNameGet">
            <summary>Задает оболочка совместимости EventLogEntry.get_UserName()</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.ShimEventLogEntry.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.ShimEventLogEntry.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLogEntry.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.ShimEventLogEntry.Bind(System.ComponentModel.IComponent)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.ShimEventLogEntry.Bind(System.IDisposable)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.ShimEventLogEntry.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLogEntry.CategoryGet">
            <summary>Задает оболочка совместимости EventLogEntry.get_Category()</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLogEntry.CategoryNumberGet">
            <summary>Задает оболочка совместимости EventLogEntry.get_CategoryNumber()</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLogEntry.DataGet">
            <summary>Задает оболочка совместимости EventLogEntry.get_Data()</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLogEntry.EntryTypeGet">
            <summary>Задает оболочка совместимости EventLogEntry.get_EntryType()</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLogEntry.EqualsEventLogEntry">
            <summary>Задает оболочка совместимости EventLogEntry.Equals(EventLogEntry otherEntry)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLogEntry.EventIDGet">
            <summary>Задает оболочка совместимости EventLogEntry.get_EventID()</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLogEntry.IndexGet">
            <summary>Задает оболочка совместимости EventLogEntry.get_Index()</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLogEntry.InstanceIdGet">
            <summary>Задает оболочка совместимости EventLogEntry.get_InstanceId()</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLogEntry.MachineNameGet">
            <summary>Задает оболочка совместимости EventLogEntry.get_MachineName()</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLogEntry.MessageGet">
            <summary>Задает оболочка совместимости EventLogEntry.get_Message()</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLogEntry.ReplaceMessageParametersStringStringArray">
            <summary>Задает оболочка совместимости EventLogEntry.ReplaceMessageParameters(String msg, String[] insertionStrings)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLogEntry.ReplacementStringsGet">
            <summary>Задает оболочка совместимости EventLogEntry.get_ReplacementStrings()</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLogEntry.SourceGet">
            <summary>Задает оболочка совместимости EventLogEntry.get_Source()</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLogEntry.StaticConstructor">
            <summary>Задает оболочка совместимости EventLogEntry.EventLogEntry()</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLogEntry.SystemRuntimeSerializationISerializableGetObjectDataSerializationInfoStreamingContext">
            <summary>Задает оболочка совместимости EventLogEntry.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLogEntry.TimeGeneratedGet">
            <summary>Задает оболочка совместимости EventLogEntry.get_TimeGenerated()</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLogEntry.TimeWrittenGet">
            <summary>Задает оболочка совместимости EventLogEntry.get_TimeWritten()</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLogEntry.UserNameGet">
            <summary>Задает оболочка совместимости EventLogEntry.get_UserName()</summary>
        </member>
        <member name="T:System.Diagnostics.Fakes.ShimEventLogEntryCollection">
            <summary>Тип оболочки совместимости для System.Diagnostics.EventLogEntryCollection</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.ShimEventLogEntryCollection.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.ShimEventLogEntryCollection.#ctor(System.Diagnostics.EventLogEntryCollection)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="T:System.Diagnostics.Fakes.ShimEventLogEntryCollection.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLogEntryCollection.AllInstances.CopyToEventLogEntryArrayInt32">
            <summary>Задает оболочка совместимости EventLogEntryCollection.CopyTo(EventLogEntry[] entries, Int32 index)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLogEntryCollection.AllInstances.CountGet">
            <summary>Задает оболочка совместимости EventLogEntryCollection.get_Count()</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLogEntryCollection.AllInstances.GetEntryAtNoThrowInt32">
            <summary>Задает оболочка совместимости EventLogEntryCollection.GetEntryAtNoThrow(Int32 index)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLogEntryCollection.AllInstances.GetEnumerator">
            <summary>Задает оболочка совместимости EventLogEntryCollection.GetEnumerator()</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLogEntryCollection.AllInstances.IsSynchronizedSystemCollectionsICollectionget">
            <summary>Задает оболочка совместимости EventLogEntryCollection.System.Collections.ICollection.get_IsSynchronized()</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLogEntryCollection.AllInstances.ItemGetInt32">
            <summary>Задает оболочка совместимости EventLogEntryCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLogEntryCollection.AllInstances.SyncRootSystemCollectionsICollectionget">
            <summary>Задает оболочка совместимости EventLogEntryCollection.System.Collections.ICollection.get_SyncRoot()</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLogEntryCollection.AllInstances.SystemCollectionsICollectionCopyToArrayInt32">
            <summary>Задает оболочка совместимости EventLogEntryCollection.System.Collections.ICollection.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.ShimEventLogEntryCollection.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.ShimEventLogEntryCollection.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLogEntryCollection.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.ShimEventLogEntryCollection.Bind(System.Collections.ICollection)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.ShimEventLogEntryCollection.Bind(System.Collections.IEnumerable)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLogEntryCollection.CopyToEventLogEntryArrayInt32">
            <summary>Задает оболочка совместимости EventLogEntryCollection.CopyTo(EventLogEntry[] entries, Int32 index)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLogEntryCollection.CountGet">
            <summary>Задает оболочка совместимости EventLogEntryCollection.get_Count()</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLogEntryCollection.GetEntryAtNoThrowInt32">
            <summary>Задает оболочка совместимости EventLogEntryCollection.GetEntryAtNoThrow(Int32 index)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLogEntryCollection.GetEnumerator">
            <summary>Задает оболочка совместимости EventLogEntryCollection.GetEnumerator()</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLogEntryCollection.IsSynchronizedSystemCollectionsICollectionget">
            <summary>Задает оболочка совместимости EventLogEntryCollection.System.Collections.ICollection.get_IsSynchronized()</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLogEntryCollection.ItemGetInt32">
            <summary>Задает оболочка совместимости EventLogEntryCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLogEntryCollection.SyncRootSystemCollectionsICollectionget">
            <summary>Задает оболочка совместимости EventLogEntryCollection.System.Collections.ICollection.get_SyncRoot()</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimEventLogEntryCollection.SystemCollectionsICollectionCopyToArrayInt32">
            <summary>Задает оболочка совместимости EventLogEntryCollection.System.Collections.ICollection.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="T:System.Diagnostics.Fakes.StubBooleanSwitch">
            <summary>Тип заглушки System.Diagnostics.BooleanSwitch</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubBooleanSwitch.#ctor(System.String,System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubBooleanSwitch.#ctor(System.String,System.String,System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubBooleanSwitch.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubBooleanSwitch.GetSupportedAttributes">
            <summary>Задает заглушка Switch.GetSupportedAttributes()</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubBooleanSwitch.GetSupportedAttributes01">
            <summary>Задает stub Switch.GetSupportedAttributes()</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubBooleanSwitch.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubBooleanSwitch</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubBooleanSwitch.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubBooleanSwitch.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubBooleanSwitch.OnSwitchSettingChanged">
            <summary>Задает заглушка Switch.OnSwitchSettingChanged()</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubBooleanSwitch.OnSwitchSettingChanged01">
            <summary>Задает stub Switch.OnSwitchSettingChanged()</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubBooleanSwitch.OnValueChanged">
            <summary>Задает заглушка BooleanSwitch.OnValueChanged()</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubBooleanSwitch.OnValueChanged01">
            <summary>Задает stub BooleanSwitch.OnValueChanged()</summary>
        </member>
        <member name="T:System.Diagnostics.Fakes.StubConsoleTraceListener">
            <summary>Тип заглушки System.Diagnostics.ConsoleTraceListener</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubConsoleTraceListener.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubConsoleTraceListener.#ctor(System.Boolean)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubConsoleTraceListener.AttachBackingFieldToName">
            <summary>Присоединение делегатов для эмуляции StubConsoleTraceListener.Name как свойства с резервным полем.</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubConsoleTraceListener.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubConsoleTraceListener.Close">
            <summary>Задает заглушка ConsoleTraceListener.Close()</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubConsoleTraceListener.Close01">
            <summary>Задает stub ConsoleTraceListener.Close()</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubConsoleTraceListener.Dispose(System.Boolean)">
            <summary>Задает заглушка TextWriterTraceListener.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubConsoleTraceListener.DisposeBoolean">
            <summary>Задает stub TextWriterTraceListener.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubConsoleTraceListener.Fail(System.String)">
            <summary>Задает заглушка TraceListener.Fail(String message)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubConsoleTraceListener.Fail(System.String,System.String)">
            <summary>Задает заглушка TraceListener.Fail(String message, String detailMessage)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubConsoleTraceListener.FailString">
            <summary>Задает stub TraceListener.Fail(String message)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubConsoleTraceListener.FailStringString">
            <summary>Задает stub TraceListener.Fail(String message, String detailMessage)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubConsoleTraceListener.Flush">
            <summary>Задает заглушка TextWriterTraceListener.Flush()</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubConsoleTraceListener.Flush01">
            <summary>Задает stub TextWriterTraceListener.Flush()</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubConsoleTraceListener.GetSupportedAttributes">
            <summary>Задает заглушка TraceListener.GetSupportedAttributes()</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubConsoleTraceListener.GetSupportedAttributes01">
            <summary>Задает stub TraceListener.GetSupportedAttributes()</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubConsoleTraceListener.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubConsoleTraceListener</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubConsoleTraceListener.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubConsoleTraceListener.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubConsoleTraceListener.IsThreadSafe">
            <summary>Задает stub TraceListener.get_IsThreadSafe()</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubConsoleTraceListener.IsThreadSafeGet">
            <summary>Задает stub TraceListener.get_IsThreadSafe()</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubConsoleTraceListener.Name">
            <summary>Задает stub TraceListener.get_Name()</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubConsoleTraceListener.NameGet">
            <summary>Задает stub TraceListener.get_Name()</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubConsoleTraceListener.NameSetString">
            <summary>Задает stub TraceListener.set_Name(String value)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubConsoleTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
            <summary>Задает заглушка TraceListener.TraceData(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, Object data)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubConsoleTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
            <summary>Задает заглушка TraceListener.TraceData(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, Object[] data)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubConsoleTraceListener.TraceDataTraceEventCacheStringTraceEventTypeInt32Object">
            <summary>Задает stub TraceListener.TraceData(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, Object data)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubConsoleTraceListener.TraceDataTraceEventCacheStringTraceEventTypeInt32ObjectArray">
            <summary>Задает stub TraceListener.TraceData(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, Object[] data)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubConsoleTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)">
            <summary>Задает заглушка TraceListener.TraceEvent(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubConsoleTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
            <summary>Задает заглушка TraceListener.TraceEvent(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, String message)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubConsoleTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
            <summary>Задает заглушка TraceListener.TraceEvent(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, String format, Object[] args)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubConsoleTraceListener.TraceEventTraceEventCacheStringTraceEventTypeInt32">
            <summary>Задает stub TraceListener.TraceEvent(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubConsoleTraceListener.TraceEventTraceEventCacheStringTraceEventTypeInt32String">
            <summary>Задает stub TraceListener.TraceEvent(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, String message)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubConsoleTraceListener.TraceEventTraceEventCacheStringTraceEventTypeInt32StringObjectArray">
            <summary>Задает stub TraceListener.TraceEvent(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, String format, Object[] args)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubConsoleTraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)">
            <summary>Задает заглушка TraceListener.TraceTransfer(TraceEventCache eventCache, String source, Int32 id, String message, Guid relatedActivityId)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubConsoleTraceListener.TraceTransferTraceEventCacheStringInt32StringGuid">
            <summary>Задает stub TraceListener.TraceTransfer(TraceEventCache eventCache, String source, Int32 id, String message, Guid relatedActivityId)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubConsoleTraceListener.Write(System.Object)">
            <summary>Задает заглушка TraceListener.Write(Object o)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubConsoleTraceListener.Write(System.String)">
            <summary>Задает заглушка TextWriterTraceListener.Write(String message)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubConsoleTraceListener.Write(System.Object,System.String)">
            <summary>Задает заглушка TraceListener.Write(Object o, String category)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubConsoleTraceListener.Write(System.String,System.String)">
            <summary>Задает заглушка TraceListener.Write(String message, String category)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubConsoleTraceListener.WriteIndent">
            <summary>Задает заглушка TraceListener.WriteIndent()</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubConsoleTraceListener.WriteIndent01">
            <summary>Задает stub TraceListener.WriteIndent()</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubConsoleTraceListener.WriteLine(System.Object)">
            <summary>Задает заглушка TraceListener.WriteLine(Object o)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubConsoleTraceListener.WriteLine(System.String)">
            <summary>Задает заглушка TextWriterTraceListener.WriteLine(String message)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubConsoleTraceListener.WriteLine(System.Object,System.String)">
            <summary>Задает заглушка TraceListener.WriteLine(Object o, String category)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubConsoleTraceListener.WriteLine(System.String,System.String)">
            <summary>Задает заглушка TraceListener.WriteLine(String message, String category)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubConsoleTraceListener.WriteLineObject">
            <summary>Задает stub TraceListener.WriteLine(Object o)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubConsoleTraceListener.WriteLineObjectString">
            <summary>Задает stub TraceListener.WriteLine(Object o, String category)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubConsoleTraceListener.WriteLineString">
            <summary>Задает stub TextWriterTraceListener.WriteLine(String message)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubConsoleTraceListener.WriteLineStringString">
            <summary>Задает stub TraceListener.WriteLine(String message, String category)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubConsoleTraceListener.WriteObject">
            <summary>Задает stub TraceListener.Write(Object o)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubConsoleTraceListener.WriteObjectString">
            <summary>Задает stub TraceListener.Write(Object o, String category)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubConsoleTraceListener.WriteString">
            <summary>Задает stub TextWriterTraceListener.Write(String message)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubConsoleTraceListener.WriteStringString">
            <summary>Задает stub TraceListener.Write(String message, String category)</summary>
        </member>
        <member name="T:System.Diagnostics.Fakes.StubCounterCreationData">
            <summary>Тип заглушки System.Diagnostics.CounterCreationData</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubCounterCreationData.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubCounterCreationData.#ctor(System.String,System.String,System.Diagnostics.PerformanceCounterType)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubCounterCreationData.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubCounterCreationData.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCounterCreationData</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubCounterCreationData.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubCounterCreationData.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Diagnostics.Fakes.StubCounterCreationDataCollection">
            <summary>Тип заглушки System.Diagnostics.CounterCreationDataCollection</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubCounterCreationDataCollection.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubCounterCreationDataCollection.#ctor(System.Diagnostics.CounterCreationDataCollection)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubCounterCreationDataCollection.#ctor(System.Diagnostics.CounterCreationData[])">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubCounterCreationDataCollection.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubCounterCreationDataCollection.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCounterCreationDataCollection</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubCounterCreationDataCollection.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubCounterCreationDataCollection.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubCounterCreationDataCollection.OnClear">
            <summary>Задает заглушка CollectionBase.OnClear()</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubCounterCreationDataCollection.OnClear01">
            <summary>Задает stub CollectionBase.OnClear()</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubCounterCreationDataCollection.OnClearComplete">
            <summary>Задает заглушка CollectionBase.OnClearComplete()</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubCounterCreationDataCollection.OnClearComplete01">
            <summary>Задает stub CollectionBase.OnClearComplete()</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubCounterCreationDataCollection.OnInsert(System.Int32,System.Object)">
            <summary>Задает заглушка CollectionBase.OnInsert(Int32 index, Object value)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubCounterCreationDataCollection.OnInsertComplete(System.Int32,System.Object)">
            <summary>Задает заглушка CollectionBase.OnInsertComplete(Int32 index, Object value)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubCounterCreationDataCollection.OnInsertCompleteInt32Object">
            <summary>Задает stub CollectionBase.OnInsertComplete(Int32 index, Object value)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubCounterCreationDataCollection.OnInsertInt32Object">
            <summary>Задает stub CollectionBase.OnInsert(Int32 index, Object value)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubCounterCreationDataCollection.OnRemove(System.Int32,System.Object)">
            <summary>Задает заглушка CollectionBase.OnRemove(Int32 index, Object value)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubCounterCreationDataCollection.OnRemoveComplete(System.Int32,System.Object)">
            <summary>Задает заглушка CollectionBase.OnRemoveComplete(Int32 index, Object value)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubCounterCreationDataCollection.OnRemoveCompleteInt32Object">
            <summary>Задает stub CollectionBase.OnRemoveComplete(Int32 index, Object value)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubCounterCreationDataCollection.OnRemoveInt32Object">
            <summary>Задает stub CollectionBase.OnRemove(Int32 index, Object value)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubCounterCreationDataCollection.OnSet(System.Int32,System.Object,System.Object)">
            <summary>Задает заглушка CollectionBase.OnSet(Int32 index, Object oldValue, Object newValue)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubCounterCreationDataCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
            <summary>Задает заглушка CollectionBase.OnSetComplete(Int32 index, Object oldValue, Object newValue)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubCounterCreationDataCollection.OnSetCompleteInt32ObjectObject">
            <summary>Задает stub CollectionBase.OnSetComplete(Int32 index, Object oldValue, Object newValue)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubCounterCreationDataCollection.OnSetInt32ObjectObject">
            <summary>Задает stub CollectionBase.OnSet(Int32 index, Object oldValue, Object newValue)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubCounterCreationDataCollection.OnValidate(System.Object)">
            <summary>Задает заглушка CounterCreationDataCollection.OnValidate(Object value)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubCounterCreationDataCollection.OnValidateObject">
            <summary>Задает stub CounterCreationDataCollection.OnValidate(Object value)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubCounterCreationDataCollection.Remove(System.Diagnostics.CounterCreationData)">
            <summary>Задает заглушка CounterCreationDataCollection.Remove(CounterCreationData value)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubCounterCreationDataCollection.RemoveCounterCreationData">
            <summary>Задает stub CounterCreationDataCollection.Remove(CounterCreationData value)</summary>
        </member>
        <member name="T:System.Diagnostics.Fakes.StubDefaultTraceListener">
            <summary>Тип заглушки System.Diagnostics.DefaultTraceListener</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubDefaultTraceListener.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubDefaultTraceListener.AttachBackingFieldToName">
            <summary>Присоединение делегатов для эмуляции StubDefaultTraceListener.Name как свойства с резервным полем.</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubDefaultTraceListener.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubDefaultTraceListener.Close">
            <summary>Задает заглушка TraceListener.Close()</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubDefaultTraceListener.Close01">
            <summary>Задает stub TraceListener.Close()</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubDefaultTraceListener.Dispose(System.Boolean)">
            <summary>Задает заглушка TraceListener.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubDefaultTraceListener.DisposeBoolean">
            <summary>Задает stub TraceListener.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubDefaultTraceListener.Fail(System.String)">
            <summary>Задает заглушка DefaultTraceListener.Fail(String message)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubDefaultTraceListener.Fail(System.String,System.String)">
            <summary>Задает заглушка DefaultTraceListener.Fail(String message, String detailMessage)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubDefaultTraceListener.FailString">
            <summary>Задает stub DefaultTraceListener.Fail(String message)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubDefaultTraceListener.FailStringString">
            <summary>Задает stub DefaultTraceListener.Fail(String message, String detailMessage)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubDefaultTraceListener.Flush">
            <summary>Задает заглушка TraceListener.Flush()</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubDefaultTraceListener.Flush01">
            <summary>Задает stub TraceListener.Flush()</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubDefaultTraceListener.GetSupportedAttributes">
            <summary>Задает заглушка TraceListener.GetSupportedAttributes()</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubDefaultTraceListener.GetSupportedAttributes01">
            <summary>Задает stub TraceListener.GetSupportedAttributes()</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubDefaultTraceListener.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubDefaultTraceListener</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubDefaultTraceListener.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubDefaultTraceListener.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubDefaultTraceListener.IsThreadSafe">
            <summary>Задает stub TraceListener.get_IsThreadSafe()</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubDefaultTraceListener.IsThreadSafeGet">
            <summary>Задает stub TraceListener.get_IsThreadSafe()</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubDefaultTraceListener.Name">
            <summary>Задает stub TraceListener.get_Name()</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubDefaultTraceListener.NameGet">
            <summary>Задает stub TraceListener.get_Name()</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubDefaultTraceListener.NameSetString">
            <summary>Задает stub TraceListener.set_Name(String value)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubDefaultTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
            <summary>Задает заглушка TraceListener.TraceData(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, Object[] data)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubDefaultTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
            <summary>Задает заглушка TraceListener.TraceData(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, Object data)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubDefaultTraceListener.TraceDataTraceEventCacheStringTraceEventTypeInt32Object">
            <summary>Задает stub TraceListener.TraceData(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, Object data)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubDefaultTraceListener.TraceDataTraceEventCacheStringTraceEventTypeInt32ObjectArray">
            <summary>Задает stub TraceListener.TraceData(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, Object[] data)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubDefaultTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)">
            <summary>Задает заглушка TraceListener.TraceEvent(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubDefaultTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
            <summary>Задает заглушка TraceListener.TraceEvent(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, String message)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubDefaultTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
            <summary>Задает заглушка TraceListener.TraceEvent(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, String format, Object[] args)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubDefaultTraceListener.TraceEventTraceEventCacheStringTraceEventTypeInt32">
            <summary>Задает stub TraceListener.TraceEvent(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubDefaultTraceListener.TraceEventTraceEventCacheStringTraceEventTypeInt32String">
            <summary>Задает stub TraceListener.TraceEvent(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, String message)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubDefaultTraceListener.TraceEventTraceEventCacheStringTraceEventTypeInt32StringObjectArray">
            <summary>Задает stub TraceListener.TraceEvent(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, String format, Object[] args)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubDefaultTraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)">
            <summary>Задает заглушка TraceListener.TraceTransfer(TraceEventCache eventCache, String source, Int32 id, String message, Guid relatedActivityId)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubDefaultTraceListener.TraceTransferTraceEventCacheStringInt32StringGuid">
            <summary>Задает stub TraceListener.TraceTransfer(TraceEventCache eventCache, String source, Int32 id, String message, Guid relatedActivityId)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubDefaultTraceListener.Write(System.Object)">
            <summary>Задает заглушка TraceListener.Write(Object o)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubDefaultTraceListener.Write(System.String)">
            <summary>Задает заглушка DefaultTraceListener.Write(String message)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubDefaultTraceListener.Write(System.Object,System.String)">
            <summary>Задает заглушка TraceListener.Write(Object o, String category)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubDefaultTraceListener.Write(System.String,System.String)">
            <summary>Задает заглушка TraceListener.Write(String message, String category)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubDefaultTraceListener.WriteIndent">
            <summary>Задает заглушка TraceListener.WriteIndent()</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubDefaultTraceListener.WriteIndent01">
            <summary>Задает stub TraceListener.WriteIndent()</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubDefaultTraceListener.WriteLine(System.Object)">
            <summary>Задает заглушка TraceListener.WriteLine(Object o)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubDefaultTraceListener.WriteLine(System.String)">
            <summary>Задает заглушка DefaultTraceListener.WriteLine(String message)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubDefaultTraceListener.WriteLine(System.Object,System.String)">
            <summary>Задает заглушка TraceListener.WriteLine(Object o, String category)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubDefaultTraceListener.WriteLine(System.String,System.String)">
            <summary>Задает заглушка TraceListener.WriteLine(String message, String category)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubDefaultTraceListener.WriteLineObject">
            <summary>Задает stub TraceListener.WriteLine(Object o)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubDefaultTraceListener.WriteLineObjectString">
            <summary>Задает stub TraceListener.WriteLine(Object o, String category)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubDefaultTraceListener.WriteLineString">
            <summary>Задает stub DefaultTraceListener.WriteLine(String message)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubDefaultTraceListener.WriteLineStringString">
            <summary>Задает stub TraceListener.WriteLine(String message, String category)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubDefaultTraceListener.WriteObject">
            <summary>Задает stub TraceListener.Write(Object o)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubDefaultTraceListener.WriteObjectString">
            <summary>Задает stub TraceListener.Write(Object o, String category)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubDefaultTraceListener.WriteString">
            <summary>Задает stub DefaultTraceListener.Write(String message)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubDefaultTraceListener.WriteStringString">
            <summary>Задает stub TraceListener.Write(String message, String category)</summary>
        </member>
        <member name="T:System.Diagnostics.Fakes.StubDelimitedListTraceListener">
            <summary>Тип заглушки System.Diagnostics.DelimitedListTraceListener</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubDelimitedListTraceListener.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubDelimitedListTraceListener.#ctor(System.IO.Stream)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubDelimitedListTraceListener.#ctor(System.IO.TextWriter)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubDelimitedListTraceListener.#ctor(System.String,System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubDelimitedListTraceListener.#ctor(System.IO.Stream,System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubDelimitedListTraceListener.#ctor(System.IO.TextWriter,System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubDelimitedListTraceListener.AttachBackingFieldToName">
            <summary>Присоединение делегатов для эмуляции StubDelimitedListTraceListener.Name как свойства с резервным полем.</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubDelimitedListTraceListener.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubDelimitedListTraceListener.Close">
            <summary>Задает заглушка TextWriterTraceListener.Close()</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubDelimitedListTraceListener.Close01">
            <summary>Задает stub TextWriterTraceListener.Close()</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubDelimitedListTraceListener.Dispose(System.Boolean)">
            <summary>Задает заглушка TextWriterTraceListener.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubDelimitedListTraceListener.DisposeBoolean">
            <summary>Задает stub TextWriterTraceListener.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubDelimitedListTraceListener.Fail(System.String)">
            <summary>Задает заглушка TraceListener.Fail(String message)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubDelimitedListTraceListener.Fail(System.String,System.String)">
            <summary>Задает заглушка TraceListener.Fail(String message, String detailMessage)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubDelimitedListTraceListener.FailString">
            <summary>Задает stub TraceListener.Fail(String message)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubDelimitedListTraceListener.FailStringString">
            <summary>Задает stub TraceListener.Fail(String message, String detailMessage)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubDelimitedListTraceListener.Flush">
            <summary>Задает заглушка TextWriterTraceListener.Flush()</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubDelimitedListTraceListener.Flush01">
            <summary>Задает stub TextWriterTraceListener.Flush()</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubDelimitedListTraceListener.GetSupportedAttributes">
            <summary>Задает заглушка DelimitedListTraceListener.GetSupportedAttributes()</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubDelimitedListTraceListener.GetSupportedAttributes01">
            <summary>Задает stub DelimitedListTraceListener.GetSupportedAttributes()</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubDelimitedListTraceListener.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubDelimitedListTraceListener</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubDelimitedListTraceListener.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubDelimitedListTraceListener.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubDelimitedListTraceListener.IsThreadSafe">
            <summary>Задает stub TraceListener.get_IsThreadSafe()</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubDelimitedListTraceListener.IsThreadSafeGet">
            <summary>Задает stub TraceListener.get_IsThreadSafe()</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubDelimitedListTraceListener.Name">
            <summary>Задает stub TraceListener.get_Name()</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubDelimitedListTraceListener.NameGet">
            <summary>Задает stub TraceListener.get_Name()</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubDelimitedListTraceListener.NameSetString">
            <summary>Задает stub TraceListener.set_Name(String value)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubDelimitedListTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
            <summary>Задает заглушка DelimitedListTraceListener.TraceData(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, Object[] data)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubDelimitedListTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
            <summary>Задает заглушка DelimitedListTraceListener.TraceData(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, Object data)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubDelimitedListTraceListener.TraceDataTraceEventCacheStringTraceEventTypeInt32Object">
            <summary>Задает stub DelimitedListTraceListener.TraceData(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, Object data)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubDelimitedListTraceListener.TraceDataTraceEventCacheStringTraceEventTypeInt32ObjectArray">
            <summary>Задает stub DelimitedListTraceListener.TraceData(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, Object[] data)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubDelimitedListTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)">
            <summary>Задает заглушка TraceListener.TraceEvent(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubDelimitedListTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
            <summary>Задает заглушка DelimitedListTraceListener.TraceEvent(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, String message)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubDelimitedListTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
            <summary>Задает заглушка DelimitedListTraceListener.TraceEvent(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, String format, Object[] args)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubDelimitedListTraceListener.TraceEventTraceEventCacheStringTraceEventTypeInt32">
            <summary>Задает stub TraceListener.TraceEvent(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubDelimitedListTraceListener.TraceEventTraceEventCacheStringTraceEventTypeInt32String">
            <summary>Задает stub DelimitedListTraceListener.TraceEvent(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, String message)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubDelimitedListTraceListener.TraceEventTraceEventCacheStringTraceEventTypeInt32StringObjectArray">
            <summary>Задает stub DelimitedListTraceListener.TraceEvent(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, String format, Object[] args)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubDelimitedListTraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)">
            <summary>Задает заглушка TraceListener.TraceTransfer(TraceEventCache eventCache, String source, Int32 id, String message, Guid relatedActivityId)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubDelimitedListTraceListener.TraceTransferTraceEventCacheStringInt32StringGuid">
            <summary>Задает stub TraceListener.TraceTransfer(TraceEventCache eventCache, String source, Int32 id, String message, Guid relatedActivityId)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubDelimitedListTraceListener.Write(System.Object)">
            <summary>Задает заглушка TraceListener.Write(Object o)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubDelimitedListTraceListener.Write(System.String)">
            <summary>Задает заглушка TextWriterTraceListener.Write(String message)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubDelimitedListTraceListener.Write(System.Object,System.String)">
            <summary>Задает заглушка TraceListener.Write(Object o, String category)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubDelimitedListTraceListener.Write(System.String,System.String)">
            <summary>Задает заглушка TraceListener.Write(String message, String category)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubDelimitedListTraceListener.WriteIndent">
            <summary>Задает заглушка TraceListener.WriteIndent()</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubDelimitedListTraceListener.WriteIndent01">
            <summary>Задает stub TraceListener.WriteIndent()</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubDelimitedListTraceListener.WriteLine(System.Object)">
            <summary>Задает заглушка TraceListener.WriteLine(Object o)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubDelimitedListTraceListener.WriteLine(System.String)">
            <summary>Задает заглушка TextWriterTraceListener.WriteLine(String message)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubDelimitedListTraceListener.WriteLine(System.Object,System.String)">
            <summary>Задает заглушка TraceListener.WriteLine(Object o, String category)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubDelimitedListTraceListener.WriteLine(System.String,System.String)">
            <summary>Задает заглушка TraceListener.WriteLine(String message, String category)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubDelimitedListTraceListener.WriteLineObject">
            <summary>Задает stub TraceListener.WriteLine(Object o)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubDelimitedListTraceListener.WriteLineObjectString">
            <summary>Задает stub TraceListener.WriteLine(Object o, String category)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubDelimitedListTraceListener.WriteLineString">
            <summary>Задает stub TextWriterTraceListener.WriteLine(String message)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubDelimitedListTraceListener.WriteLineStringString">
            <summary>Задает stub TraceListener.WriteLine(String message, String category)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubDelimitedListTraceListener.WriteObject">
            <summary>Задает stub TraceListener.Write(Object o)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubDelimitedListTraceListener.WriteObjectString">
            <summary>Задает stub TraceListener.Write(Object o, String category)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubDelimitedListTraceListener.WriteString">
            <summary>Задает stub TextWriterTraceListener.Write(String message)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubDelimitedListTraceListener.WriteStringString">
            <summary>Задает stub TraceListener.Write(String message, String category)</summary>
        </member>
        <member name="T:System.Diagnostics.Fakes.StubEntryWrittenEventArgs">
            <summary>Тип заглушки System.Diagnostics.EntryWrittenEventArgs</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubEntryWrittenEventArgs.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubEntryWrittenEventArgs.#ctor(System.Diagnostics.EventLogEntry)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubEntryWrittenEventArgs.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubEntryWrittenEventArgs.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubEntryWrittenEventArgs</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubEntryWrittenEventArgs.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubEntryWrittenEventArgs.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Diagnostics.Fakes.StubEventInstance">
            <summary>Тип заглушки System.Diagnostics.EventInstance</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubEventInstance.#ctor(System.Int64,System.Int32)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubEventInstance.#ctor(System.Int64,System.Int32,System.Diagnostics.EventLogEntryType)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubEventInstance.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubEventInstance.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubEventInstance</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubEventInstance.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubEventInstance.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Diagnostics.Fakes.StubEventLog">
            <summary>Тип заглушки System.Diagnostics.EventLog</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubEventLog.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubEventLog.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubEventLog.#ctor(System.String,System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubEventLog.#ctor(System.String,System.String,System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubEventLog.AttachBackingFieldToSite">
            <summary>Присоединение делегатов для эмуляции StubEventLog.Site как свойства с резервным полем.</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubEventLog.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubEventLog.CanRaiseEvents">
            <summary>Задает stub Component.get_CanRaiseEvents()</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubEventLog.CanRaiseEventsGet">
            <summary>Задает stub Component.get_CanRaiseEvents()</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubEventLog.Dispose(System.Boolean)">
            <summary>Задает заглушка EventLog.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubEventLog.DisposeBoolean">
            <summary>Задает stub EventLog.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubEventLog.GetService(System.Type)">
            <summary>Задает заглушка Component.GetService(Type service)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubEventLog.GetServiceType">
            <summary>Задает stub Component.GetService(Type service)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubEventLog.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubEventLog</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubEventLog.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubEventLog.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubEventLog.Site">
            <summary>Задает stub Component.get_Site()</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubEventLog.SiteGet">
            <summary>Задает stub Component.get_Site()</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubEventLog.SiteSetISite">
            <summary>Задает stub Component.set_Site(ISite value)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubEventLog.ToString">
            <summary>Задает заглушка Component.ToString()</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubEventLog.ToString01">
            <summary>Задает stub Component.ToString()</summary>
        </member>
        <member name="T:System.Diagnostics.Fakes.StubEventLogPermissionAttribute">
            <summary>Тип заглушки System.Diagnostics.EventLogPermissionAttribute</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubEventLogPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubEventLogPermissionAttribute.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubEventLogPermissionAttribute.CreatePermission">
            <summary>Задает заглушка EventLogPermissionAttribute.CreatePermission()</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubEventLogPermissionAttribute.CreatePermission01">
            <summary>Задает stub EventLogPermissionAttribute.CreatePermission()</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubEventLogPermissionAttribute.Equals(System.Object)">
            <summary>Задает заглушка Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubEventLogPermissionAttribute.EqualsObject">
            <summary>Задает stub Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubEventLogPermissionAttribute.GetHashCode">
            <summary>Задает заглушка Attribute.GetHashCode()</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubEventLogPermissionAttribute.GetHashCode01">
            <summary>Задает stub Attribute.GetHashCode()</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubEventLogPermissionAttribute.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubEventLogPermissionAttribute</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubEventLogPermissionAttribute.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubEventLogPermissionAttribute.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubEventLogPermissionAttribute.IsDefaultAttribute">
            <summary>Задает заглушка Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubEventLogPermissionAttribute.IsDefaultAttribute01">
            <summary>Задает stub Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubEventLogPermissionAttribute.Match(System.Object)">
            <summary>Задает заглушка Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubEventLogPermissionAttribute.MatchObject">
            <summary>Задает stub Attribute.Match(Object obj)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubEventLogPermissionAttribute.TypeId">
            <summary>Задает stub Attribute.get_TypeId()</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubEventLogPermissionAttribute.TypeIdGet">
            <summary>Задает stub Attribute.get_TypeId()</summary>
        </member>
        <member name="T:System.Diagnostics.Fakes.StubEventLogPermissionEntry">
            <summary>Тип заглушки System.Diagnostics.EventLogPermissionEntry</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubEventLogPermissionEntry.#ctor(System.Diagnostics.EventLogPermissionAccess,System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubEventLogPermissionEntry.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubEventLogPermissionEntry.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubEventLogPermissionEntry</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubEventLogPermissionEntry.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubEventLogPermissionEntry.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Diagnostics.Fakes.StubEventSourceCreationData">
            <summary>Тип заглушки System.Diagnostics.EventSourceCreationData</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubEventSourceCreationData.#ctor(System.String,System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubEventSourceCreationData.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubEventSourceCreationData.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubEventSourceCreationData</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubEventSourceCreationData.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubEventSourceCreationData.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Diagnostics.Fakes.StubEventTypeFilter">
            <summary>Тип заглушки System.Diagnostics.EventTypeFilter</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubEventTypeFilter.#ctor(System.Diagnostics.SourceLevels)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubEventTypeFilter.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubEventTypeFilter.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubEventTypeFilter</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubEventTypeFilter.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubEventTypeFilter.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubEventTypeFilter.ShouldTrace(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[],System.Object,System.Object[])">
            <summary>Задает заглушка EventTypeFilter.ShouldTrace(TraceEventCache cache, String source, TraceEventType eventType, Int32 id, String formatOrMessage, Object[] args, Object data1, Object[] data)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubEventTypeFilter.ShouldTraceTraceEventCacheStringTraceEventTypeInt32StringObjectArrayObjectObjectArray">
            <summary>Задает stub EventTypeFilter.ShouldTrace(TraceEventCache cache, String source, TraceEventType eventType, Int32 id, String formatOrMessage, Object[] args, Object data1, Object[] data)</summary>
        </member>
        <member name="T:System.Diagnostics.Fakes.StubICollectData">
            <summary>Тип заглушки System.Diagnostics.ICollectData</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubICollectData.#ctor">
            <summary>Инициализирует новый экземпляр type StubICollectData</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubICollectData.CloseData">
            <summary>Задает stub ICollectData.CloseData()</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubICollectData.CollectDataInt32IntPtrIntPtrInt32IntPtrOut">
            <summary>Задает stub ICollectData.CollectData(Int32 id, IntPtr valueName, IntPtr data, Int32 totalBytes, IntPtr&amp; res)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubICollectData.System#Diagnostics#ICollectData#CloseData">
            <summary>Задает заглушка ICollectData.CloseData()</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubICollectData.System#Diagnostics#ICollectData#CollectData(System.Int32,System.IntPtr,System.IntPtr,System.Int32,System.IntPtr@)">
            <summary>Задает заглушка ICollectData.CollectData(Int32 id, IntPtr valueName, IntPtr data, Int32 totalBytes, IntPtr&amp; res)</summary>
        </member>
        <member name="T:System.Diagnostics.Fakes.StubInstanceData">
            <summary>Тип заглушки System.Diagnostics.InstanceData</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubInstanceData.#ctor(System.String,System.Diagnostics.CounterSample)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubInstanceData.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubInstanceData.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubInstanceData</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubInstanceData.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubInstanceData.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Diagnostics.Fakes.StubInstanceDataCollection">
            <summary>Тип заглушки System.Diagnostics.InstanceDataCollection</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubInstanceDataCollection.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubInstanceDataCollection.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubInstanceDataCollection.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubInstanceDataCollection</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubInstanceDataCollection.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubInstanceDataCollection.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubInstanceDataCollection.OnClear">
            <summary>Задает заглушка DictionaryBase.OnClear()</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubInstanceDataCollection.OnClear01">
            <summary>Задает stub DictionaryBase.OnClear()</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubInstanceDataCollection.OnClearComplete">
            <summary>Задает заглушка DictionaryBase.OnClearComplete()</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubInstanceDataCollection.OnClearComplete01">
            <summary>Задает stub DictionaryBase.OnClearComplete()</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubInstanceDataCollection.OnGet(System.Object,System.Object)">
            <summary>Задает заглушка DictionaryBase.OnGet(Object key, Object currentValue)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubInstanceDataCollection.OnGetObjectObject">
            <summary>Задает stub DictionaryBase.OnGet(Object key, Object currentValue)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubInstanceDataCollection.OnInsert(System.Object,System.Object)">
            <summary>Задает заглушка DictionaryBase.OnInsert(Object key, Object value)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubInstanceDataCollection.OnInsertComplete(System.Object,System.Object)">
            <summary>Задает заглушка DictionaryBase.OnInsertComplete(Object key, Object value)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubInstanceDataCollection.OnInsertCompleteObjectObject">
            <summary>Задает stub DictionaryBase.OnInsertComplete(Object key, Object value)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubInstanceDataCollection.OnInsertObjectObject">
            <summary>Задает stub DictionaryBase.OnInsert(Object key, Object value)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubInstanceDataCollection.OnRemove(System.Object,System.Object)">
            <summary>Задает заглушка DictionaryBase.OnRemove(Object key, Object value)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubInstanceDataCollection.OnRemoveComplete(System.Object,System.Object)">
            <summary>Задает заглушка DictionaryBase.OnRemoveComplete(Object key, Object value)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubInstanceDataCollection.OnRemoveCompleteObjectObject">
            <summary>Задает stub DictionaryBase.OnRemoveComplete(Object key, Object value)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubInstanceDataCollection.OnRemoveObjectObject">
            <summary>Задает stub DictionaryBase.OnRemove(Object key, Object value)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubInstanceDataCollection.OnSet(System.Object,System.Object,System.Object)">
            <summary>Задает заглушка DictionaryBase.OnSet(Object key, Object oldValue, Object newValue)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubInstanceDataCollection.OnSetComplete(System.Object,System.Object,System.Object)">
            <summary>Задает заглушка DictionaryBase.OnSetComplete(Object key, Object oldValue, Object newValue)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubInstanceDataCollection.OnSetCompleteObjectObjectObject">
            <summary>Задает stub DictionaryBase.OnSetComplete(Object key, Object oldValue, Object newValue)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubInstanceDataCollection.OnSetObjectObjectObject">
            <summary>Задает stub DictionaryBase.OnSet(Object key, Object oldValue, Object newValue)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubInstanceDataCollection.OnValidate(System.Object,System.Object)">
            <summary>Задает заглушка DictionaryBase.OnValidate(Object key, Object value)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubInstanceDataCollection.OnValidateObjectObject">
            <summary>Задает stub DictionaryBase.OnValidate(Object key, Object value)</summary>
        </member>
        <member name="T:System.Diagnostics.Fakes.StubInstanceDataCollectionCollection">
            <summary>Тип заглушки System.Diagnostics.InstanceDataCollectionCollection</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubInstanceDataCollectionCollection.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubInstanceDataCollectionCollection.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubInstanceDataCollectionCollection.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubInstanceDataCollectionCollection</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubInstanceDataCollectionCollection.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubInstanceDataCollectionCollection.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubInstanceDataCollectionCollection.OnClear">
            <summary>Задает заглушка DictionaryBase.OnClear()</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubInstanceDataCollectionCollection.OnClear01">
            <summary>Задает stub DictionaryBase.OnClear()</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubInstanceDataCollectionCollection.OnClearComplete">
            <summary>Задает заглушка DictionaryBase.OnClearComplete()</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubInstanceDataCollectionCollection.OnClearComplete01">
            <summary>Задает stub DictionaryBase.OnClearComplete()</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubInstanceDataCollectionCollection.OnGet(System.Object,System.Object)">
            <summary>Задает заглушка DictionaryBase.OnGet(Object key, Object currentValue)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubInstanceDataCollectionCollection.OnGetObjectObject">
            <summary>Задает stub DictionaryBase.OnGet(Object key, Object currentValue)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubInstanceDataCollectionCollection.OnInsert(System.Object,System.Object)">
            <summary>Задает заглушка DictionaryBase.OnInsert(Object key, Object value)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubInstanceDataCollectionCollection.OnInsertComplete(System.Object,System.Object)">
            <summary>Задает заглушка DictionaryBase.OnInsertComplete(Object key, Object value)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubInstanceDataCollectionCollection.OnInsertCompleteObjectObject">
            <summary>Задает stub DictionaryBase.OnInsertComplete(Object key, Object value)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubInstanceDataCollectionCollection.OnInsertObjectObject">
            <summary>Задает stub DictionaryBase.OnInsert(Object key, Object value)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubInstanceDataCollectionCollection.OnRemove(System.Object,System.Object)">
            <summary>Задает заглушка DictionaryBase.OnRemove(Object key, Object value)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubInstanceDataCollectionCollection.OnRemoveComplete(System.Object,System.Object)">
            <summary>Задает заглушка DictionaryBase.OnRemoveComplete(Object key, Object value)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubInstanceDataCollectionCollection.OnRemoveCompleteObjectObject">
            <summary>Задает stub DictionaryBase.OnRemoveComplete(Object key, Object value)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubInstanceDataCollectionCollection.OnRemoveObjectObject">
            <summary>Задает stub DictionaryBase.OnRemove(Object key, Object value)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubInstanceDataCollectionCollection.OnSet(System.Object,System.Object,System.Object)">
            <summary>Задает заглушка DictionaryBase.OnSet(Object key, Object oldValue, Object newValue)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubInstanceDataCollectionCollection.OnSetComplete(System.Object,System.Object,System.Object)">
            <summary>Задает заглушка DictionaryBase.OnSetComplete(Object key, Object oldValue, Object newValue)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubInstanceDataCollectionCollection.OnSetCompleteObjectObjectObject">
            <summary>Задает stub DictionaryBase.OnSetComplete(Object key, Object oldValue, Object newValue)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubInstanceDataCollectionCollection.OnSetObjectObjectObject">
            <summary>Задает stub DictionaryBase.OnSet(Object key, Object oldValue, Object newValue)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubInstanceDataCollectionCollection.OnValidate(System.Object,System.Object)">
            <summary>Задает заглушка DictionaryBase.OnValidate(Object key, Object value)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubInstanceDataCollectionCollection.OnValidateObjectObject">
            <summary>Задает stub DictionaryBase.OnValidate(Object key, Object value)</summary>
        </member>
        <member name="T:System.Diagnostics.Fakes.StubMonitoringDescriptionAttribute">
            <summary>Тип заглушки System.Diagnostics.MonitoringDescriptionAttribute</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubMonitoringDescriptionAttribute.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubMonitoringDescriptionAttribute.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubMonitoringDescriptionAttribute.Description">
            <summary>Задает stub MonitoringDescriptionAttribute.get_Description()</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubMonitoringDescriptionAttribute.DescriptionGet">
            <summary>Задает stub MonitoringDescriptionAttribute.get_Description()</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubMonitoringDescriptionAttribute.Equals(System.Object)">
            <summary>Задает заглушка DescriptionAttribute.Equals(Object obj)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubMonitoringDescriptionAttribute.EqualsObject">
            <summary>Задает stub DescriptionAttribute.Equals(Object obj)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubMonitoringDescriptionAttribute.GetHashCode">
            <summary>Задает заглушка DescriptionAttribute.GetHashCode()</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubMonitoringDescriptionAttribute.GetHashCode01">
            <summary>Задает stub DescriptionAttribute.GetHashCode()</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubMonitoringDescriptionAttribute.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubMonitoringDescriptionAttribute</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubMonitoringDescriptionAttribute.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubMonitoringDescriptionAttribute.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubMonitoringDescriptionAttribute.IsDefaultAttribute">
            <summary>Задает заглушка DescriptionAttribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubMonitoringDescriptionAttribute.IsDefaultAttribute01">
            <summary>Задает stub DescriptionAttribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubMonitoringDescriptionAttribute.Match(System.Object)">
            <summary>Задает заглушка Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubMonitoringDescriptionAttribute.MatchObject">
            <summary>Задает stub Attribute.Match(Object obj)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubMonitoringDescriptionAttribute.TypeId">
            <summary>Задает stub Attribute.get_TypeId()</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubMonitoringDescriptionAttribute.TypeIdGet">
            <summary>Задает stub Attribute.get_TypeId()</summary>
        </member>
        <member name="T:System.Diagnostics.Fakes.StubPerformanceCounterPermissionAttribute">
            <summary>Тип заглушки System.Diagnostics.PerformanceCounterPermissionAttribute</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubPerformanceCounterPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubPerformanceCounterPermissionAttribute.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubPerformanceCounterPermissionAttribute.CreatePermission">
            <summary>Задает заглушка PerformanceCounterPermissionAttribute.CreatePermission()</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubPerformanceCounterPermissionAttribute.CreatePermission01">
            <summary>Задает stub PerformanceCounterPermissionAttribute.CreatePermission()</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubPerformanceCounterPermissionAttribute.Equals(System.Object)">
            <summary>Задает заглушка Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubPerformanceCounterPermissionAttribute.EqualsObject">
            <summary>Задает stub Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubPerformanceCounterPermissionAttribute.GetHashCode">
            <summary>Задает заглушка Attribute.GetHashCode()</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubPerformanceCounterPermissionAttribute.GetHashCode01">
            <summary>Задает stub Attribute.GetHashCode()</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubPerformanceCounterPermissionAttribute.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubPerformanceCounterPermissionAttribute</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubPerformanceCounterPermissionAttribute.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubPerformanceCounterPermissionAttribute.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubPerformanceCounterPermissionAttribute.IsDefaultAttribute">
            <summary>Задает заглушка Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubPerformanceCounterPermissionAttribute.IsDefaultAttribute01">
            <summary>Задает stub Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubPerformanceCounterPermissionAttribute.Match(System.Object)">
            <summary>Задает заглушка Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubPerformanceCounterPermissionAttribute.MatchObject">
            <summary>Задает stub Attribute.Match(Object obj)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubPerformanceCounterPermissionAttribute.TypeId">
            <summary>Задает stub Attribute.get_TypeId()</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubPerformanceCounterPermissionAttribute.TypeIdGet">
            <summary>Задает stub Attribute.get_TypeId()</summary>
        </member>
        <member name="T:System.Diagnostics.Fakes.StubPerformanceCounterPermissionEntry">
            <summary>Тип заглушки System.Diagnostics.PerformanceCounterPermissionEntry</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubPerformanceCounterPermissionEntry.#ctor(System.Diagnostics.PerformanceCounterPermissionAccess,System.String,System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubPerformanceCounterPermissionEntry.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubPerformanceCounterPermissionEntry.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubPerformanceCounterPermissionEntry</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubPerformanceCounterPermissionEntry.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubPerformanceCounterPermissionEntry.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Diagnostics.Fakes.StubProcess">
            <summary>Тип заглушки System.Diagnostics.Process</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubProcess.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubProcess.AttachBackingFieldToSite">
            <summary>Присоединение делегатов для эмуляции StubProcess.Site как свойства с резервным полем.</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubProcess.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubProcess.CanRaiseEvents">
            <summary>Задает stub Component.get_CanRaiseEvents()</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubProcess.CanRaiseEventsGet">
            <summary>Задает stub Component.get_CanRaiseEvents()</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubProcess.Dispose(System.Boolean)">
            <summary>Задает заглушка Process.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubProcess.DisposeBoolean">
            <summary>Задает stub Process.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubProcess.GetService(System.Type)">
            <summary>Задает заглушка Component.GetService(Type service)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubProcess.GetServiceType">
            <summary>Задает stub Component.GetService(Type service)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubProcess.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubProcess</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubProcess.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubProcess.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubProcess.Site">
            <summary>Задает stub Component.get_Site()</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubProcess.SiteGet">
            <summary>Задает stub Component.get_Site()</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubProcess.SiteSetISite">
            <summary>Задает stub Component.set_Site(ISite value)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubProcess.ToString">
            <summary>Задает заглушка Process.ToString()</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubProcess.ToString01">
            <summary>Задает stub Process.ToString()</summary>
        </member>
        <member name="T:System.Diagnostics.Fakes.StubProcessModuleCollection">
            <summary>Тип заглушки System.Diagnostics.ProcessModuleCollection</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubProcessModuleCollection.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubProcessModuleCollection.#ctor(System.Diagnostics.ProcessModule[])">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubProcessModuleCollection.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubProcessModuleCollection.Count">
            <summary>Задает stub ReadOnlyCollectionBase.get_Count()</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubProcessModuleCollection.CountGet">
            <summary>Задает stub ReadOnlyCollectionBase.get_Count()</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubProcessModuleCollection.GetEnumerator">
            <summary>Задает заглушка ReadOnlyCollectionBase.GetEnumerator()</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubProcessModuleCollection.GetEnumerator01">
            <summary>Задает stub ReadOnlyCollectionBase.GetEnumerator()</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubProcessModuleCollection.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubProcessModuleCollection</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubProcessModuleCollection.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubProcessModuleCollection.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Diagnostics.Fakes.StubProcessThreadCollection">
            <summary>Тип заглушки System.Diagnostics.ProcessThreadCollection</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubProcessThreadCollection.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubProcessThreadCollection.#ctor(System.Diagnostics.ProcessThread[])">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubProcessThreadCollection.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubProcessThreadCollection.Count">
            <summary>Задает stub ReadOnlyCollectionBase.get_Count()</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubProcessThreadCollection.CountGet">
            <summary>Задает stub ReadOnlyCollectionBase.get_Count()</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubProcessThreadCollection.GetEnumerator">
            <summary>Задает заглушка ReadOnlyCollectionBase.GetEnumerator()</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubProcessThreadCollection.GetEnumerator01">
            <summary>Задает stub ReadOnlyCollectionBase.GetEnumerator()</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubProcessThreadCollection.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubProcessThreadCollection</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubProcessThreadCollection.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubProcessThreadCollection.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Diagnostics.Fakes.StubSourceFilter">
            <summary>Тип заглушки System.Diagnostics.SourceFilter</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubSourceFilter.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubSourceFilter.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubSourceFilter.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubSourceFilter</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubSourceFilter.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubSourceFilter.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubSourceFilter.ShouldTrace(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[],System.Object,System.Object[])">
            <summary>Задает заглушка SourceFilter.ShouldTrace(TraceEventCache cache, String source, TraceEventType eventType, Int32 id, String formatOrMessage, Object[] args, Object data1, Object[] data)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubSourceFilter.ShouldTraceTraceEventCacheStringTraceEventTypeInt32StringObjectArrayObjectObjectArray">
            <summary>Задает stub SourceFilter.ShouldTrace(TraceEventCache cache, String source, TraceEventType eventType, Int32 id, String formatOrMessage, Object[] args, Object data1, Object[] data)</summary>
        </member>
        <member name="T:System.Diagnostics.Fakes.StubSourceSwitch">
            <summary>Тип заглушки System.Diagnostics.SourceSwitch</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubSourceSwitch.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubSourceSwitch.#ctor(System.String,System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubSourceSwitch.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubSourceSwitch.GetSupportedAttributes">
            <summary>Задает заглушка Switch.GetSupportedAttributes()</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubSourceSwitch.GetSupportedAttributes01">
            <summary>Задает stub Switch.GetSupportedAttributes()</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubSourceSwitch.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubSourceSwitch</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubSourceSwitch.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubSourceSwitch.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubSourceSwitch.OnSwitchSettingChanged">
            <summary>Задает заглушка Switch.OnSwitchSettingChanged()</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubSourceSwitch.OnSwitchSettingChanged01">
            <summary>Задает stub Switch.OnSwitchSettingChanged()</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubSourceSwitch.OnValueChanged">
            <summary>Задает заглушка SourceSwitch.OnValueChanged()</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubSourceSwitch.OnValueChanged01">
            <summary>Задает stub SourceSwitch.OnValueChanged()</summary>
        </member>
        <member name="T:System.Diagnostics.Fakes.StubStopwatch">
            <summary>Тип заглушки System.Diagnostics.Stopwatch</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubStopwatch.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubStopwatch.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubStopwatch.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubStopwatch</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubStopwatch.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubStopwatch.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Diagnostics.Fakes.StubSwitch">
            <summary>Тип заглушки System.Diagnostics.Switch</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubSwitch.#ctor(System.String,System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubSwitch.#ctor(System.String,System.String,System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubSwitch.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubSwitch.GetSupportedAttributes">
            <summary>Задает заглушка Switch.GetSupportedAttributes()</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubSwitch.GetSupportedAttributes01">
            <summary>Задает stub Switch.GetSupportedAttributes()</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubSwitch.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubSwitch</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubSwitch.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubSwitch.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubSwitch.OnSwitchSettingChanged">
            <summary>Задает заглушка Switch.OnSwitchSettingChanged()</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubSwitch.OnSwitchSettingChanged01">
            <summary>Задает stub Switch.OnSwitchSettingChanged()</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubSwitch.OnValueChanged">
            <summary>Задает заглушка Switch.OnValueChanged()</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubSwitch.OnValueChanged01">
            <summary>Задает stub Switch.OnValueChanged()</summary>
        </member>
        <member name="T:System.Diagnostics.Fakes.StubTextWriterTraceListener">
            <summary>Тип заглушки System.Diagnostics.TextWriterTraceListener</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubTextWriterTraceListener.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubTextWriterTraceListener.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubTextWriterTraceListener.#ctor(System.IO.Stream)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubTextWriterTraceListener.#ctor(System.IO.TextWriter)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubTextWriterTraceListener.#ctor(System.String,System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubTextWriterTraceListener.#ctor(System.IO.Stream,System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubTextWriterTraceListener.#ctor(System.IO.TextWriter,System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubTextWriterTraceListener.AttachBackingFieldToName">
            <summary>Присоединение делегатов для эмуляции StubTextWriterTraceListener.Name как свойства с резервным полем.</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubTextWriterTraceListener.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubTextWriterTraceListener.Close">
            <summary>Задает заглушка TextWriterTraceListener.Close()</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubTextWriterTraceListener.Close01">
            <summary>Задает stub TextWriterTraceListener.Close()</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubTextWriterTraceListener.Dispose(System.Boolean)">
            <summary>Задает заглушка TextWriterTraceListener.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubTextWriterTraceListener.DisposeBoolean">
            <summary>Задает stub TextWriterTraceListener.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubTextWriterTraceListener.Fail(System.String)">
            <summary>Задает заглушка TraceListener.Fail(String message)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubTextWriterTraceListener.Fail(System.String,System.String)">
            <summary>Задает заглушка TraceListener.Fail(String message, String detailMessage)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubTextWriterTraceListener.FailString">
            <summary>Задает stub TraceListener.Fail(String message)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubTextWriterTraceListener.FailStringString">
            <summary>Задает stub TraceListener.Fail(String message, String detailMessage)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubTextWriterTraceListener.Flush">
            <summary>Задает заглушка TextWriterTraceListener.Flush()</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubTextWriterTraceListener.Flush01">
            <summary>Задает stub TextWriterTraceListener.Flush()</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubTextWriterTraceListener.GetSupportedAttributes">
            <summary>Задает заглушка TraceListener.GetSupportedAttributes()</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubTextWriterTraceListener.GetSupportedAttributes01">
            <summary>Задает stub TraceListener.GetSupportedAttributes()</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubTextWriterTraceListener.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubTextWriterTraceListener</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubTextWriterTraceListener.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubTextWriterTraceListener.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubTextWriterTraceListener.IsThreadSafe">
            <summary>Задает stub TraceListener.get_IsThreadSafe()</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubTextWriterTraceListener.IsThreadSafeGet">
            <summary>Задает stub TraceListener.get_IsThreadSafe()</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubTextWriterTraceListener.Name">
            <summary>Задает stub TraceListener.get_Name()</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubTextWriterTraceListener.NameGet">
            <summary>Задает stub TraceListener.get_Name()</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubTextWriterTraceListener.NameSetString">
            <summary>Задает stub TraceListener.set_Name(String value)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubTextWriterTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
            <summary>Задает заглушка TraceListener.TraceData(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, Object[] data)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubTextWriterTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
            <summary>Задает заглушка TraceListener.TraceData(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, Object data)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubTextWriterTraceListener.TraceDataTraceEventCacheStringTraceEventTypeInt32Object">
            <summary>Задает stub TraceListener.TraceData(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, Object data)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubTextWriterTraceListener.TraceDataTraceEventCacheStringTraceEventTypeInt32ObjectArray">
            <summary>Задает stub TraceListener.TraceData(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, Object[] data)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubTextWriterTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)">
            <summary>Задает заглушка TraceListener.TraceEvent(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubTextWriterTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
            <summary>Задает заглушка TraceListener.TraceEvent(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, String message)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubTextWriterTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
            <summary>Задает заглушка TraceListener.TraceEvent(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, String format, Object[] args)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubTextWriterTraceListener.TraceEventTraceEventCacheStringTraceEventTypeInt32">
            <summary>Задает stub TraceListener.TraceEvent(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubTextWriterTraceListener.TraceEventTraceEventCacheStringTraceEventTypeInt32String">
            <summary>Задает stub TraceListener.TraceEvent(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, String message)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubTextWriterTraceListener.TraceEventTraceEventCacheStringTraceEventTypeInt32StringObjectArray">
            <summary>Задает stub TraceListener.TraceEvent(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, String format, Object[] args)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubTextWriterTraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)">
            <summary>Задает заглушка TraceListener.TraceTransfer(TraceEventCache eventCache, String source, Int32 id, String message, Guid relatedActivityId)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubTextWriterTraceListener.TraceTransferTraceEventCacheStringInt32StringGuid">
            <summary>Задает stub TraceListener.TraceTransfer(TraceEventCache eventCache, String source, Int32 id, String message, Guid relatedActivityId)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubTextWriterTraceListener.Write(System.Object)">
            <summary>Задает заглушка TraceListener.Write(Object o)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubTextWriterTraceListener.Write(System.String)">
            <summary>Задает заглушка TextWriterTraceListener.Write(String message)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubTextWriterTraceListener.Write(System.Object,System.String)">
            <summary>Задает заглушка TraceListener.Write(Object o, String category)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubTextWriterTraceListener.Write(System.String,System.String)">
            <summary>Задает заглушка TraceListener.Write(String message, String category)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubTextWriterTraceListener.WriteIndent">
            <summary>Задает заглушка TraceListener.WriteIndent()</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubTextWriterTraceListener.WriteIndent01">
            <summary>Задает stub TraceListener.WriteIndent()</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubTextWriterTraceListener.WriteLine(System.Object)">
            <summary>Задает заглушка TraceListener.WriteLine(Object o)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubTextWriterTraceListener.WriteLine(System.String)">
            <summary>Задает заглушка TextWriterTraceListener.WriteLine(String message)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubTextWriterTraceListener.WriteLine(System.Object,System.String)">
            <summary>Задает заглушка TraceListener.WriteLine(Object o, String category)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubTextWriterTraceListener.WriteLine(System.String,System.String)">
            <summary>Задает заглушка TraceListener.WriteLine(String message, String category)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubTextWriterTraceListener.WriteLineObject">
            <summary>Задает stub TraceListener.WriteLine(Object o)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubTextWriterTraceListener.WriteLineObjectString">
            <summary>Задает stub TraceListener.WriteLine(Object o, String category)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubTextWriterTraceListener.WriteLineString">
            <summary>Задает stub TextWriterTraceListener.WriteLine(String message)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubTextWriterTraceListener.WriteLineStringString">
            <summary>Задает stub TraceListener.WriteLine(String message, String category)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubTextWriterTraceListener.WriteObject">
            <summary>Задает stub TraceListener.Write(Object o)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubTextWriterTraceListener.WriteObjectString">
            <summary>Задает stub TraceListener.Write(Object o, String category)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubTextWriterTraceListener.WriteString">
            <summary>Задает stub TextWriterTraceListener.Write(String message)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubTextWriterTraceListener.WriteStringString">
            <summary>Задает stub TraceListener.Write(String message, String category)</summary>
        </member>
        <member name="T:System.Diagnostics.Fakes.StubTraceEventCache">
            <summary>Тип заглушки System.Diagnostics.TraceEventCache</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubTraceEventCache.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubTraceEventCache.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubTraceEventCache.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubTraceEventCache</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubTraceEventCache.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubTraceEventCache.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Diagnostics.Fakes.StubTraceFilter">
            <summary>Тип заглушки System.Diagnostics.TraceFilter</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubTraceFilter.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubTraceFilter.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubTraceFilter.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubTraceFilter</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubTraceFilter.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubTraceFilter.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubTraceFilter.ShouldTrace(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[],System.Object,System.Object[])">
            <summary>Задает заглушка TraceFilter.ShouldTrace(TraceEventCache cache, String source, TraceEventType eventType, Int32 id, String formatOrMessage, Object[] args, Object data1, Object[] data)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubTraceFilter.ShouldTraceTraceEventCacheStringTraceEventTypeInt32StringObjectArrayObjectObjectArray">
            <summary>Задает stub TraceFilter.ShouldTrace(TraceEventCache cache, String source, TraceEventType eventType, Int32 id, String formatOrMessage, Object[] args, Object data1, Object[] data)</summary>
        </member>
        <member name="T:System.Diagnostics.Fakes.StubTraceListener">
            <summary>Тип заглушки System.Diagnostics.TraceListener</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubTraceListener.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubTraceListener.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubTraceListener.AttachBackingFieldToName">
            <summary>Присоединение делегатов для эмуляции StubTraceListener.Name как свойства с резервным полем.</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubTraceListener.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubTraceListener.Close">
            <summary>Задает заглушка TraceListener.Close()</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubTraceListener.Close01">
            <summary>Задает stub TraceListener.Close()</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubTraceListener.Dispose(System.Boolean)">
            <summary>Задает заглушка TraceListener.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubTraceListener.DisposeBoolean">
            <summary>Задает stub TraceListener.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubTraceListener.Fail(System.String)">
            <summary>Задает заглушка TraceListener.Fail(String message)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubTraceListener.Fail(System.String,System.String)">
            <summary>Задает заглушка TraceListener.Fail(String message, String detailMessage)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubTraceListener.FailString">
            <summary>Задает stub TraceListener.Fail(String message)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubTraceListener.FailStringString">
            <summary>Задает stub TraceListener.Fail(String message, String detailMessage)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubTraceListener.Flush">
            <summary>Задает заглушка TraceListener.Flush()</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubTraceListener.Flush01">
            <summary>Задает stub TraceListener.Flush()</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubTraceListener.GetSupportedAttributes">
            <summary>Задает заглушка TraceListener.GetSupportedAttributes()</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubTraceListener.GetSupportedAttributes01">
            <summary>Задает stub TraceListener.GetSupportedAttributes()</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubTraceListener.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubTraceListener</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubTraceListener.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubTraceListener.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubTraceListener.IsThreadSafe">
            <summary>Задает stub TraceListener.get_IsThreadSafe()</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubTraceListener.IsThreadSafeGet">
            <summary>Задает stub TraceListener.get_IsThreadSafe()</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubTraceListener.Name">
            <summary>Задает stub TraceListener.get_Name()</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubTraceListener.NameGet">
            <summary>Задает stub TraceListener.get_Name()</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubTraceListener.NameSetString">
            <summary>Задает stub TraceListener.set_Name(String value)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
            <summary>Задает заглушка TraceListener.TraceData(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, Object[] data)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
            <summary>Задает заглушка TraceListener.TraceData(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, Object data)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubTraceListener.TraceDataTraceEventCacheStringTraceEventTypeInt32Object">
            <summary>Задает stub TraceListener.TraceData(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, Object data)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubTraceListener.TraceDataTraceEventCacheStringTraceEventTypeInt32ObjectArray">
            <summary>Задает stub TraceListener.TraceData(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, Object[] data)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)">
            <summary>Задает заглушка TraceListener.TraceEvent(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
            <summary>Задает заглушка TraceListener.TraceEvent(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, String message)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
            <summary>Задает заглушка TraceListener.TraceEvent(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, String format, Object[] args)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubTraceListener.TraceEventTraceEventCacheStringTraceEventTypeInt32">
            <summary>Задает stub TraceListener.TraceEvent(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubTraceListener.TraceEventTraceEventCacheStringTraceEventTypeInt32String">
            <summary>Задает stub TraceListener.TraceEvent(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, String message)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubTraceListener.TraceEventTraceEventCacheStringTraceEventTypeInt32StringObjectArray">
            <summary>Задает stub TraceListener.TraceEvent(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, String format, Object[] args)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubTraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)">
            <summary>Задает заглушка TraceListener.TraceTransfer(TraceEventCache eventCache, String source, Int32 id, String message, Guid relatedActivityId)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubTraceListener.TraceTransferTraceEventCacheStringInt32StringGuid">
            <summary>Задает stub TraceListener.TraceTransfer(TraceEventCache eventCache, String source, Int32 id, String message, Guid relatedActivityId)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubTraceListener.Write(System.Object)">
            <summary>Задает заглушка TraceListener.Write(Object o)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubTraceListener.Write(System.String)">
            <summary>Задает заглушка TraceListener.Write(String message)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubTraceListener.Write(System.Object,System.String)">
            <summary>Задает заглушка TraceListener.Write(Object o, String category)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubTraceListener.Write(System.String,System.String)">
            <summary>Задает заглушка TraceListener.Write(String message, String category)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubTraceListener.WriteIndent">
            <summary>Задает заглушка TraceListener.WriteIndent()</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubTraceListener.WriteIndent01">
            <summary>Задает stub TraceListener.WriteIndent()</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubTraceListener.WriteLine(System.Object)">
            <summary>Задает заглушка TraceListener.WriteLine(Object o)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubTraceListener.WriteLine(System.String)">
            <summary>Задает заглушка TraceListener.WriteLine(String message)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubTraceListener.WriteLine(System.Object,System.String)">
            <summary>Задает заглушка TraceListener.WriteLine(Object o, String category)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubTraceListener.WriteLine(System.String,System.String)">
            <summary>Задает заглушка TraceListener.WriteLine(String message, String category)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubTraceListener.WriteLineObject">
            <summary>Задает stub TraceListener.WriteLine(Object o)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubTraceListener.WriteLineObjectString">
            <summary>Задает stub TraceListener.WriteLine(Object o, String category)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubTraceListener.WriteLineString">
            <summary>Задает stub TraceListener.WriteLine(String message)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubTraceListener.WriteLineStringString">
            <summary>Задает stub TraceListener.WriteLine(String message, String category)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubTraceListener.WriteObject">
            <summary>Задает stub TraceListener.Write(Object o)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubTraceListener.WriteObjectString">
            <summary>Задает stub TraceListener.Write(Object o, String category)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubTraceListener.WriteString">
            <summary>Задает stub TraceListener.Write(String message)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubTraceListener.WriteStringString">
            <summary>Задает stub TraceListener.Write(String message, String category)</summary>
        </member>
        <member name="T:System.Diagnostics.Fakes.StubTraceSource">
            <summary>Тип заглушки System.Diagnostics.TraceSource</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubTraceSource.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubTraceSource.#ctor(System.String,System.Diagnostics.SourceLevels)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubTraceSource.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubTraceSource.GetSupportedAttributes">
            <summary>Задает заглушка TraceSource.GetSupportedAttributes()</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubTraceSource.GetSupportedAttributes01">
            <summary>Задает stub TraceSource.GetSupportedAttributes()</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubTraceSource.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubTraceSource</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubTraceSource.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubTraceSource.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Diagnostics.Fakes.StubTraceSwitch">
            <summary>Тип заглушки System.Diagnostics.TraceSwitch</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubTraceSwitch.#ctor(System.String,System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubTraceSwitch.#ctor(System.String,System.String,System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubTraceSwitch.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubTraceSwitch.GetSupportedAttributes">
            <summary>Задает заглушка Switch.GetSupportedAttributes()</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubTraceSwitch.GetSupportedAttributes01">
            <summary>Задает stub Switch.GetSupportedAttributes()</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubTraceSwitch.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubTraceSwitch</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubTraceSwitch.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubTraceSwitch.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubTraceSwitch.OnSwitchSettingChanged">
            <summary>Задает заглушка TraceSwitch.OnSwitchSettingChanged()</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubTraceSwitch.OnSwitchSettingChanged01">
            <summary>Задает stub TraceSwitch.OnSwitchSettingChanged()</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubTraceSwitch.OnValueChanged">
            <summary>Задает заглушка TraceSwitch.OnValueChanged()</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubTraceSwitch.OnValueChanged01">
            <summary>Задает stub TraceSwitch.OnValueChanged()</summary>
        </member>
        <member name="T:System.Diagnostics.Fakes.StubXmlWriterTraceListener">
            <summary>Тип заглушки System.Diagnostics.XmlWriterTraceListener</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubXmlWriterTraceListener.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubXmlWriterTraceListener.#ctor(System.IO.Stream)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubXmlWriterTraceListener.#ctor(System.IO.TextWriter)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubXmlWriterTraceListener.#ctor(System.String,System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubXmlWriterTraceListener.#ctor(System.IO.Stream,System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubXmlWriterTraceListener.#ctor(System.IO.TextWriter,System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubXmlWriterTraceListener.AttachBackingFieldToName">
            <summary>Присоединение делегатов для эмуляции StubXmlWriterTraceListener.Name как свойства с резервным полем.</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubXmlWriterTraceListener.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubXmlWriterTraceListener.Close">
            <summary>Задает заглушка XmlWriterTraceListener.Close()</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubXmlWriterTraceListener.Close01">
            <summary>Задает stub XmlWriterTraceListener.Close()</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubXmlWriterTraceListener.Dispose(System.Boolean)">
            <summary>Задает заглушка TextWriterTraceListener.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubXmlWriterTraceListener.DisposeBoolean">
            <summary>Задает stub TextWriterTraceListener.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubXmlWriterTraceListener.Fail(System.String)">
            <summary>Задает заглушка TraceListener.Fail(String message)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubXmlWriterTraceListener.Fail(System.String,System.String)">
            <summary>Задает заглушка XmlWriterTraceListener.Fail(String message, String detailMessage)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubXmlWriterTraceListener.FailString">
            <summary>Задает stub TraceListener.Fail(String message)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubXmlWriterTraceListener.FailStringString">
            <summary>Задает stub XmlWriterTraceListener.Fail(String message, String detailMessage)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubXmlWriterTraceListener.Flush">
            <summary>Задает заглушка TextWriterTraceListener.Flush()</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubXmlWriterTraceListener.Flush01">
            <summary>Задает stub TextWriterTraceListener.Flush()</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubXmlWriterTraceListener.GetSupportedAttributes">
            <summary>Задает заглушка TraceListener.GetSupportedAttributes()</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubXmlWriterTraceListener.GetSupportedAttributes01">
            <summary>Задает stub TraceListener.GetSupportedAttributes()</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubXmlWriterTraceListener.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubXmlWriterTraceListener</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubXmlWriterTraceListener.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubXmlWriterTraceListener.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubXmlWriterTraceListener.IsThreadSafe">
            <summary>Задает stub TraceListener.get_IsThreadSafe()</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubXmlWriterTraceListener.IsThreadSafeGet">
            <summary>Задает stub TraceListener.get_IsThreadSafe()</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubXmlWriterTraceListener.Name">
            <summary>Задает stub TraceListener.get_Name()</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubXmlWriterTraceListener.NameGet">
            <summary>Задает stub TraceListener.get_Name()</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubXmlWriterTraceListener.NameSetString">
            <summary>Задает stub TraceListener.set_Name(String value)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubXmlWriterTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
            <summary>Задает заглушка XmlWriterTraceListener.TraceData(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, Object data)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubXmlWriterTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
            <summary>Задает заглушка XmlWriterTraceListener.TraceData(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, Object[] data)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubXmlWriterTraceListener.TraceDataTraceEventCacheStringTraceEventTypeInt32Object">
            <summary>Задает stub XmlWriterTraceListener.TraceData(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, Object data)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubXmlWriterTraceListener.TraceDataTraceEventCacheStringTraceEventTypeInt32ObjectArray">
            <summary>Задает stub XmlWriterTraceListener.TraceData(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, Object[] data)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubXmlWriterTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)">
            <summary>Задает заглушка TraceListener.TraceEvent(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubXmlWriterTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
            <summary>Задает заглушка XmlWriterTraceListener.TraceEvent(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, String message)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubXmlWriterTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
            <summary>Задает заглушка XmlWriterTraceListener.TraceEvent(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, String format, Object[] args)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubXmlWriterTraceListener.TraceEventTraceEventCacheStringTraceEventTypeInt32">
            <summary>Задает stub TraceListener.TraceEvent(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubXmlWriterTraceListener.TraceEventTraceEventCacheStringTraceEventTypeInt32String">
            <summary>Задает stub XmlWriterTraceListener.TraceEvent(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, String message)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubXmlWriterTraceListener.TraceEventTraceEventCacheStringTraceEventTypeInt32StringObjectArray">
            <summary>Задает stub XmlWriterTraceListener.TraceEvent(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, String format, Object[] args)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubXmlWriterTraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)">
            <summary>Задает заглушка XmlWriterTraceListener.TraceTransfer(TraceEventCache eventCache, String source, Int32 id, String message, Guid relatedActivityId)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubXmlWriterTraceListener.TraceTransferTraceEventCacheStringInt32StringGuid">
            <summary>Задает stub XmlWriterTraceListener.TraceTransfer(TraceEventCache eventCache, String source, Int32 id, String message, Guid relatedActivityId)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubXmlWriterTraceListener.Write(System.Object)">
            <summary>Задает заглушка TraceListener.Write(Object o)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubXmlWriterTraceListener.Write(System.String)">
            <summary>Задает заглушка XmlWriterTraceListener.Write(String message)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubXmlWriterTraceListener.Write(System.Object,System.String)">
            <summary>Задает заглушка TraceListener.Write(Object o, String category)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubXmlWriterTraceListener.Write(System.String,System.String)">
            <summary>Задает заглушка TraceListener.Write(String message, String category)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubXmlWriterTraceListener.WriteIndent">
            <summary>Задает заглушка TraceListener.WriteIndent()</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubXmlWriterTraceListener.WriteIndent01">
            <summary>Задает stub TraceListener.WriteIndent()</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubXmlWriterTraceListener.WriteLine(System.Object)">
            <summary>Задает заглушка TraceListener.WriteLine(Object o)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubXmlWriterTraceListener.WriteLine(System.String)">
            <summary>Задает заглушка XmlWriterTraceListener.WriteLine(String message)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubXmlWriterTraceListener.WriteLine(System.Object,System.String)">
            <summary>Задает заглушка TraceListener.WriteLine(Object o, String category)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubXmlWriterTraceListener.WriteLine(System.String,System.String)">
            <summary>Задает заглушка TraceListener.WriteLine(String message, String category)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubXmlWriterTraceListener.WriteLineObject">
            <summary>Задает stub TraceListener.WriteLine(Object o)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubXmlWriterTraceListener.WriteLineObjectString">
            <summary>Задает stub TraceListener.WriteLine(Object o, String category)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubXmlWriterTraceListener.WriteLineString">
            <summary>Задает stub XmlWriterTraceListener.WriteLine(String message)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubXmlWriterTraceListener.WriteLineStringString">
            <summary>Задает stub TraceListener.WriteLine(String message, String category)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubXmlWriterTraceListener.WriteObject">
            <summary>Задает stub TraceListener.Write(Object o)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubXmlWriterTraceListener.WriteObjectString">
            <summary>Задает stub TraceListener.Write(Object o, String category)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubXmlWriterTraceListener.WriteString">
            <summary>Задает stub XmlWriterTraceListener.Write(String message)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubXmlWriterTraceListener.WriteStringString">
            <summary>Задает stub TraceListener.Write(String message, String category)</summary>
        </member>
        <member name="T:System.Fakes.StubFileStyleUriParser">
            <summary>Тип заглушки System.FileStyleUriParser</summary>
        </member>
        <member name="M:System.Fakes.StubFileStyleUriParser.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Fakes.StubFileStyleUriParser.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Fakes.StubFileStyleUriParser.GetComponents(System.Uri,System.UriComponents,System.UriFormat)">
            <summary>Задает заглушка UriParser.GetComponents(Uri uri, UriComponents components, UriFormat format)</summary>
        </member>
        <member name="F:System.Fakes.StubFileStyleUriParser.GetComponentsUriUriComponentsUriFormat">
            <summary>Задает stub UriParser.GetComponents(Uri uri, UriComponents components, UriFormat format)</summary>
        </member>
        <member name="M:System.Fakes.StubFileStyleUriParser.InitializeAndValidate(System.Uri,System.UriFormatException@)">
            <summary>Задает заглушка UriParser.InitializeAndValidate(Uri uri, UriFormatException&amp; parsingError)</summary>
        </member>
        <member name="F:System.Fakes.StubFileStyleUriParser.InitializeAndValidateUriUriFormatExceptionOut">
            <summary>Задает stub UriParser.InitializeAndValidate(Uri uri, UriFormatException&amp; parsingError)</summary>
        </member>
        <member name="M:System.Fakes.StubFileStyleUriParser.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubFileStyleUriParser</summary>
        </member>
        <member name="P:System.Fakes.StubFileStyleUriParser.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubFileStyleUriParser.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.Fakes.StubFileStyleUriParser.IsBaseOf(System.Uri,System.Uri)">
            <summary>Задает заглушка UriParser.IsBaseOf(Uri baseUri, Uri relativeUri)</summary>
        </member>
        <member name="F:System.Fakes.StubFileStyleUriParser.IsBaseOfUriUri">
            <summary>Задает stub UriParser.IsBaseOf(Uri baseUri, Uri relativeUri)</summary>
        </member>
        <member name="M:System.Fakes.StubFileStyleUriParser.IsWellFormedOriginalString(System.Uri)">
            <summary>Задает заглушка UriParser.IsWellFormedOriginalString(Uri uri)</summary>
        </member>
        <member name="F:System.Fakes.StubFileStyleUriParser.IsWellFormedOriginalStringUri">
            <summary>Задает stub UriParser.IsWellFormedOriginalString(Uri uri)</summary>
        </member>
        <member name="M:System.Fakes.StubFileStyleUriParser.OnNewUri">
            <summary>Задает заглушка UriParser.OnNewUri()</summary>
        </member>
        <member name="F:System.Fakes.StubFileStyleUriParser.OnNewUri01">
            <summary>Задает stub UriParser.OnNewUri()</summary>
        </member>
        <member name="M:System.Fakes.StubFileStyleUriParser.OnRegister(System.String,System.Int32)">
            <summary>Задает заглушка UriParser.OnRegister(String schemeName, Int32 defaultPort)</summary>
        </member>
        <member name="F:System.Fakes.StubFileStyleUriParser.OnRegisterStringInt32">
            <summary>Задает stub UriParser.OnRegister(String schemeName, Int32 defaultPort)</summary>
        </member>
        <member name="M:System.Fakes.StubFileStyleUriParser.Resolve(System.Uri,System.Uri,System.UriFormatException@)">
            <summary>Задает заглушка UriParser.Resolve(Uri baseUri, Uri relativeUri, UriFormatException&amp; parsingError)</summary>
        </member>
        <member name="F:System.Fakes.StubFileStyleUriParser.ResolveUriUriUriFormatExceptionOut">
            <summary>Задает stub UriParser.Resolve(Uri baseUri, Uri relativeUri, UriFormatException&amp; parsingError)</summary>
        </member>
        <member name="T:System.Fakes.StubFtpStyleUriParser">
            <summary>Тип заглушки System.FtpStyleUriParser</summary>
        </member>
        <member name="M:System.Fakes.StubFtpStyleUriParser.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Fakes.StubFtpStyleUriParser.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Fakes.StubFtpStyleUriParser.GetComponents(System.Uri,System.UriComponents,System.UriFormat)">
            <summary>Задает заглушка UriParser.GetComponents(Uri uri, UriComponents components, UriFormat format)</summary>
        </member>
        <member name="F:System.Fakes.StubFtpStyleUriParser.GetComponentsUriUriComponentsUriFormat">
            <summary>Задает stub UriParser.GetComponents(Uri uri, UriComponents components, UriFormat format)</summary>
        </member>
        <member name="M:System.Fakes.StubFtpStyleUriParser.InitializeAndValidate(System.Uri,System.UriFormatException@)">
            <summary>Задает заглушка UriParser.InitializeAndValidate(Uri uri, UriFormatException&amp; parsingError)</summary>
        </member>
        <member name="F:System.Fakes.StubFtpStyleUriParser.InitializeAndValidateUriUriFormatExceptionOut">
            <summary>Задает stub UriParser.InitializeAndValidate(Uri uri, UriFormatException&amp; parsingError)</summary>
        </member>
        <member name="M:System.Fakes.StubFtpStyleUriParser.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubFtpStyleUriParser</summary>
        </member>
        <member name="P:System.Fakes.StubFtpStyleUriParser.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubFtpStyleUriParser.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.Fakes.StubFtpStyleUriParser.IsBaseOf(System.Uri,System.Uri)">
            <summary>Задает заглушка UriParser.IsBaseOf(Uri baseUri, Uri relativeUri)</summary>
        </member>
        <member name="F:System.Fakes.StubFtpStyleUriParser.IsBaseOfUriUri">
            <summary>Задает stub UriParser.IsBaseOf(Uri baseUri, Uri relativeUri)</summary>
        </member>
        <member name="M:System.Fakes.StubFtpStyleUriParser.IsWellFormedOriginalString(System.Uri)">
            <summary>Задает заглушка UriParser.IsWellFormedOriginalString(Uri uri)</summary>
        </member>
        <member name="F:System.Fakes.StubFtpStyleUriParser.IsWellFormedOriginalStringUri">
            <summary>Задает stub UriParser.IsWellFormedOriginalString(Uri uri)</summary>
        </member>
        <member name="M:System.Fakes.StubFtpStyleUriParser.OnNewUri">
            <summary>Задает заглушка UriParser.OnNewUri()</summary>
        </member>
        <member name="F:System.Fakes.StubFtpStyleUriParser.OnNewUri01">
            <summary>Задает stub UriParser.OnNewUri()</summary>
        </member>
        <member name="M:System.Fakes.StubFtpStyleUriParser.OnRegister(System.String,System.Int32)">
            <summary>Задает заглушка UriParser.OnRegister(String schemeName, Int32 defaultPort)</summary>
        </member>
        <member name="F:System.Fakes.StubFtpStyleUriParser.OnRegisterStringInt32">
            <summary>Задает stub UriParser.OnRegister(String schemeName, Int32 defaultPort)</summary>
        </member>
        <member name="M:System.Fakes.StubFtpStyleUriParser.Resolve(System.Uri,System.Uri,System.UriFormatException@)">
            <summary>Задает заглушка UriParser.Resolve(Uri baseUri, Uri relativeUri, UriFormatException&amp; parsingError)</summary>
        </member>
        <member name="F:System.Fakes.StubFtpStyleUriParser.ResolveUriUriUriFormatExceptionOut">
            <summary>Задает stub UriParser.Resolve(Uri baseUri, Uri relativeUri, UriFormatException&amp; parsingError)</summary>
        </member>
        <member name="T:System.Fakes.StubGenericUriParser">
            <summary>Тип заглушки System.GenericUriParser</summary>
        </member>
        <member name="M:System.Fakes.StubGenericUriParser.#ctor(System.GenericUriParserOptions)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Fakes.StubGenericUriParser.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Fakes.StubGenericUriParser.GetComponents(System.Uri,System.UriComponents,System.UriFormat)">
            <summary>Задает заглушка UriParser.GetComponents(Uri uri, UriComponents components, UriFormat format)</summary>
        </member>
        <member name="F:System.Fakes.StubGenericUriParser.GetComponentsUriUriComponentsUriFormat">
            <summary>Задает stub UriParser.GetComponents(Uri uri, UriComponents components, UriFormat format)</summary>
        </member>
        <member name="M:System.Fakes.StubGenericUriParser.InitializeAndValidate(System.Uri,System.UriFormatException@)">
            <summary>Задает заглушка UriParser.InitializeAndValidate(Uri uri, UriFormatException&amp; parsingError)</summary>
        </member>
        <member name="F:System.Fakes.StubGenericUriParser.InitializeAndValidateUriUriFormatExceptionOut">
            <summary>Задает stub UriParser.InitializeAndValidate(Uri uri, UriFormatException&amp; parsingError)</summary>
        </member>
        <member name="M:System.Fakes.StubGenericUriParser.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubGenericUriParser</summary>
        </member>
        <member name="P:System.Fakes.StubGenericUriParser.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubGenericUriParser.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.Fakes.StubGenericUriParser.IsBaseOf(System.Uri,System.Uri)">
            <summary>Задает заглушка UriParser.IsBaseOf(Uri baseUri, Uri relativeUri)</summary>
        </member>
        <member name="F:System.Fakes.StubGenericUriParser.IsBaseOfUriUri">
            <summary>Задает stub UriParser.IsBaseOf(Uri baseUri, Uri relativeUri)</summary>
        </member>
        <member name="M:System.Fakes.StubGenericUriParser.IsWellFormedOriginalString(System.Uri)">
            <summary>Задает заглушка UriParser.IsWellFormedOriginalString(Uri uri)</summary>
        </member>
        <member name="F:System.Fakes.StubGenericUriParser.IsWellFormedOriginalStringUri">
            <summary>Задает stub UriParser.IsWellFormedOriginalString(Uri uri)</summary>
        </member>
        <member name="M:System.Fakes.StubGenericUriParser.OnNewUri">
            <summary>Задает заглушка UriParser.OnNewUri()</summary>
        </member>
        <member name="F:System.Fakes.StubGenericUriParser.OnNewUri01">
            <summary>Задает stub UriParser.OnNewUri()</summary>
        </member>
        <member name="M:System.Fakes.StubGenericUriParser.OnRegister(System.String,System.Int32)">
            <summary>Задает заглушка UriParser.OnRegister(String schemeName, Int32 defaultPort)</summary>
        </member>
        <member name="F:System.Fakes.StubGenericUriParser.OnRegisterStringInt32">
            <summary>Задает stub UriParser.OnRegister(String schemeName, Int32 defaultPort)</summary>
        </member>
        <member name="M:System.Fakes.StubGenericUriParser.Resolve(System.Uri,System.Uri,System.UriFormatException@)">
            <summary>Задает заглушка UriParser.Resolve(Uri baseUri, Uri relativeUri, UriFormatException&amp; parsingError)</summary>
        </member>
        <member name="F:System.Fakes.StubGenericUriParser.ResolveUriUriUriFormatExceptionOut">
            <summary>Задает stub UriParser.Resolve(Uri baseUri, Uri relativeUri, UriFormatException&amp; parsingError)</summary>
        </member>
        <member name="T:System.Fakes.StubGopherStyleUriParser">
            <summary>Тип заглушки System.GopherStyleUriParser</summary>
        </member>
        <member name="M:System.Fakes.StubGopherStyleUriParser.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Fakes.StubGopherStyleUriParser.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Fakes.StubGopherStyleUriParser.GetComponents(System.Uri,System.UriComponents,System.UriFormat)">
            <summary>Задает заглушка UriParser.GetComponents(Uri uri, UriComponents components, UriFormat format)</summary>
        </member>
        <member name="F:System.Fakes.StubGopherStyleUriParser.GetComponentsUriUriComponentsUriFormat">
            <summary>Задает stub UriParser.GetComponents(Uri uri, UriComponents components, UriFormat format)</summary>
        </member>
        <member name="M:System.Fakes.StubGopherStyleUriParser.InitializeAndValidate(System.Uri,System.UriFormatException@)">
            <summary>Задает заглушка UriParser.InitializeAndValidate(Uri uri, UriFormatException&amp; parsingError)</summary>
        </member>
        <member name="F:System.Fakes.StubGopherStyleUriParser.InitializeAndValidateUriUriFormatExceptionOut">
            <summary>Задает stub UriParser.InitializeAndValidate(Uri uri, UriFormatException&amp; parsingError)</summary>
        </member>
        <member name="M:System.Fakes.StubGopherStyleUriParser.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubGopherStyleUriParser</summary>
        </member>
        <member name="P:System.Fakes.StubGopherStyleUriParser.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubGopherStyleUriParser.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.Fakes.StubGopherStyleUriParser.IsBaseOf(System.Uri,System.Uri)">
            <summary>Задает заглушка UriParser.IsBaseOf(Uri baseUri, Uri relativeUri)</summary>
        </member>
        <member name="F:System.Fakes.StubGopherStyleUriParser.IsBaseOfUriUri">
            <summary>Задает stub UriParser.IsBaseOf(Uri baseUri, Uri relativeUri)</summary>
        </member>
        <member name="M:System.Fakes.StubGopherStyleUriParser.IsWellFormedOriginalString(System.Uri)">
            <summary>Задает заглушка UriParser.IsWellFormedOriginalString(Uri uri)</summary>
        </member>
        <member name="F:System.Fakes.StubGopherStyleUriParser.IsWellFormedOriginalStringUri">
            <summary>Задает stub UriParser.IsWellFormedOriginalString(Uri uri)</summary>
        </member>
        <member name="M:System.Fakes.StubGopherStyleUriParser.OnNewUri">
            <summary>Задает заглушка UriParser.OnNewUri()</summary>
        </member>
        <member name="F:System.Fakes.StubGopherStyleUriParser.OnNewUri01">
            <summary>Задает stub UriParser.OnNewUri()</summary>
        </member>
        <member name="M:System.Fakes.StubGopherStyleUriParser.OnRegister(System.String,System.Int32)">
            <summary>Задает заглушка UriParser.OnRegister(String schemeName, Int32 defaultPort)</summary>
        </member>
        <member name="F:System.Fakes.StubGopherStyleUriParser.OnRegisterStringInt32">
            <summary>Задает stub UriParser.OnRegister(String schemeName, Int32 defaultPort)</summary>
        </member>
        <member name="M:System.Fakes.StubGopherStyleUriParser.Resolve(System.Uri,System.Uri,System.UriFormatException@)">
            <summary>Задает заглушка UriParser.Resolve(Uri baseUri, Uri relativeUri, UriFormatException&amp; parsingError)</summary>
        </member>
        <member name="F:System.Fakes.StubGopherStyleUriParser.ResolveUriUriUriFormatExceptionOut">
            <summary>Задает stub UriParser.Resolve(Uri baseUri, Uri relativeUri, UriFormatException&amp; parsingError)</summary>
        </member>
        <member name="T:System.Fakes.StubHttpStyleUriParser">
            <summary>Тип заглушки System.HttpStyleUriParser</summary>
        </member>
        <member name="M:System.Fakes.StubHttpStyleUriParser.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Fakes.StubHttpStyleUriParser.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Fakes.StubHttpStyleUriParser.GetComponents(System.Uri,System.UriComponents,System.UriFormat)">
            <summary>Задает заглушка UriParser.GetComponents(Uri uri, UriComponents components, UriFormat format)</summary>
        </member>
        <member name="F:System.Fakes.StubHttpStyleUriParser.GetComponentsUriUriComponentsUriFormat">
            <summary>Задает stub UriParser.GetComponents(Uri uri, UriComponents components, UriFormat format)</summary>
        </member>
        <member name="M:System.Fakes.StubHttpStyleUriParser.InitializeAndValidate(System.Uri,System.UriFormatException@)">
            <summary>Задает заглушка UriParser.InitializeAndValidate(Uri uri, UriFormatException&amp; parsingError)</summary>
        </member>
        <member name="F:System.Fakes.StubHttpStyleUriParser.InitializeAndValidateUriUriFormatExceptionOut">
            <summary>Задает stub UriParser.InitializeAndValidate(Uri uri, UriFormatException&amp; parsingError)</summary>
        </member>
        <member name="M:System.Fakes.StubHttpStyleUriParser.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubHttpStyleUriParser</summary>
        </member>
        <member name="P:System.Fakes.StubHttpStyleUriParser.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubHttpStyleUriParser.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.Fakes.StubHttpStyleUriParser.IsBaseOf(System.Uri,System.Uri)">
            <summary>Задает заглушка UriParser.IsBaseOf(Uri baseUri, Uri relativeUri)</summary>
        </member>
        <member name="F:System.Fakes.StubHttpStyleUriParser.IsBaseOfUriUri">
            <summary>Задает stub UriParser.IsBaseOf(Uri baseUri, Uri relativeUri)</summary>
        </member>
        <member name="M:System.Fakes.StubHttpStyleUriParser.IsWellFormedOriginalString(System.Uri)">
            <summary>Задает заглушка UriParser.IsWellFormedOriginalString(Uri uri)</summary>
        </member>
        <member name="F:System.Fakes.StubHttpStyleUriParser.IsWellFormedOriginalStringUri">
            <summary>Задает stub UriParser.IsWellFormedOriginalString(Uri uri)</summary>
        </member>
        <member name="M:System.Fakes.StubHttpStyleUriParser.OnNewUri">
            <summary>Задает заглушка UriParser.OnNewUri()</summary>
        </member>
        <member name="F:System.Fakes.StubHttpStyleUriParser.OnNewUri01">
            <summary>Задает stub UriParser.OnNewUri()</summary>
        </member>
        <member name="M:System.Fakes.StubHttpStyleUriParser.OnRegister(System.String,System.Int32)">
            <summary>Задает заглушка UriParser.OnRegister(String schemeName, Int32 defaultPort)</summary>
        </member>
        <member name="F:System.Fakes.StubHttpStyleUriParser.OnRegisterStringInt32">
            <summary>Задает stub UriParser.OnRegister(String schemeName, Int32 defaultPort)</summary>
        </member>
        <member name="M:System.Fakes.StubHttpStyleUriParser.Resolve(System.Uri,System.Uri,System.UriFormatException@)">
            <summary>Задает заглушка UriParser.Resolve(Uri baseUri, Uri relativeUri, UriFormatException&amp; parsingError)</summary>
        </member>
        <member name="F:System.Fakes.StubHttpStyleUriParser.ResolveUriUriUriFormatExceptionOut">
            <summary>Задает stub UriParser.Resolve(Uri baseUri, Uri relativeUri, UriFormatException&amp; parsingError)</summary>
        </member>
        <member name="T:System.Fakes.StubLdapStyleUriParser">
            <summary>Тип заглушки System.LdapStyleUriParser</summary>
        </member>
        <member name="M:System.Fakes.StubLdapStyleUriParser.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Fakes.StubLdapStyleUriParser.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Fakes.StubLdapStyleUriParser.GetComponents(System.Uri,System.UriComponents,System.UriFormat)">
            <summary>Задает заглушка UriParser.GetComponents(Uri uri, UriComponents components, UriFormat format)</summary>
        </member>
        <member name="F:System.Fakes.StubLdapStyleUriParser.GetComponentsUriUriComponentsUriFormat">
            <summary>Задает stub UriParser.GetComponents(Uri uri, UriComponents components, UriFormat format)</summary>
        </member>
        <member name="M:System.Fakes.StubLdapStyleUriParser.InitializeAndValidate(System.Uri,System.UriFormatException@)">
            <summary>Задает заглушка UriParser.InitializeAndValidate(Uri uri, UriFormatException&amp; parsingError)</summary>
        </member>
        <member name="F:System.Fakes.StubLdapStyleUriParser.InitializeAndValidateUriUriFormatExceptionOut">
            <summary>Задает stub UriParser.InitializeAndValidate(Uri uri, UriFormatException&amp; parsingError)</summary>
        </member>
        <member name="M:System.Fakes.StubLdapStyleUriParser.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubLdapStyleUriParser</summary>
        </member>
        <member name="P:System.Fakes.StubLdapStyleUriParser.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubLdapStyleUriParser.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.Fakes.StubLdapStyleUriParser.IsBaseOf(System.Uri,System.Uri)">
            <summary>Задает заглушка UriParser.IsBaseOf(Uri baseUri, Uri relativeUri)</summary>
        </member>
        <member name="F:System.Fakes.StubLdapStyleUriParser.IsBaseOfUriUri">
            <summary>Задает stub UriParser.IsBaseOf(Uri baseUri, Uri relativeUri)</summary>
        </member>
        <member name="M:System.Fakes.StubLdapStyleUriParser.IsWellFormedOriginalString(System.Uri)">
            <summary>Задает заглушка UriParser.IsWellFormedOriginalString(Uri uri)</summary>
        </member>
        <member name="F:System.Fakes.StubLdapStyleUriParser.IsWellFormedOriginalStringUri">
            <summary>Задает stub UriParser.IsWellFormedOriginalString(Uri uri)</summary>
        </member>
        <member name="M:System.Fakes.StubLdapStyleUriParser.OnNewUri">
            <summary>Задает заглушка UriParser.OnNewUri()</summary>
        </member>
        <member name="F:System.Fakes.StubLdapStyleUriParser.OnNewUri01">
            <summary>Задает stub UriParser.OnNewUri()</summary>
        </member>
        <member name="M:System.Fakes.StubLdapStyleUriParser.OnRegister(System.String,System.Int32)">
            <summary>Задает заглушка UriParser.OnRegister(String schemeName, Int32 defaultPort)</summary>
        </member>
        <member name="F:System.Fakes.StubLdapStyleUriParser.OnRegisterStringInt32">
            <summary>Задает stub UriParser.OnRegister(String schemeName, Int32 defaultPort)</summary>
        </member>
        <member name="M:System.Fakes.StubLdapStyleUriParser.Resolve(System.Uri,System.Uri,System.UriFormatException@)">
            <summary>Задает заглушка UriParser.Resolve(Uri baseUri, Uri relativeUri, UriFormatException&amp; parsingError)</summary>
        </member>
        <member name="F:System.Fakes.StubLdapStyleUriParser.ResolveUriUriUriFormatExceptionOut">
            <summary>Задает stub UriParser.Resolve(Uri baseUri, Uri relativeUri, UriFormatException&amp; parsingError)</summary>
        </member>
        <member name="T:System.Fakes.StubNetPipeStyleUriParser">
            <summary>Тип заглушки System.NetPipeStyleUriParser</summary>
        </member>
        <member name="M:System.Fakes.StubNetPipeStyleUriParser.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Fakes.StubNetPipeStyleUriParser.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Fakes.StubNetPipeStyleUriParser.GetComponents(System.Uri,System.UriComponents,System.UriFormat)">
            <summary>Задает заглушка UriParser.GetComponents(Uri uri, UriComponents components, UriFormat format)</summary>
        </member>
        <member name="F:System.Fakes.StubNetPipeStyleUriParser.GetComponentsUriUriComponentsUriFormat">
            <summary>Задает stub UriParser.GetComponents(Uri uri, UriComponents components, UriFormat format)</summary>
        </member>
        <member name="M:System.Fakes.StubNetPipeStyleUriParser.InitializeAndValidate(System.Uri,System.UriFormatException@)">
            <summary>Задает заглушка UriParser.InitializeAndValidate(Uri uri, UriFormatException&amp; parsingError)</summary>
        </member>
        <member name="F:System.Fakes.StubNetPipeStyleUriParser.InitializeAndValidateUriUriFormatExceptionOut">
            <summary>Задает stub UriParser.InitializeAndValidate(Uri uri, UriFormatException&amp; parsingError)</summary>
        </member>
        <member name="M:System.Fakes.StubNetPipeStyleUriParser.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubNetPipeStyleUriParser</summary>
        </member>
        <member name="P:System.Fakes.StubNetPipeStyleUriParser.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubNetPipeStyleUriParser.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.Fakes.StubNetPipeStyleUriParser.IsBaseOf(System.Uri,System.Uri)">
            <summary>Задает заглушка UriParser.IsBaseOf(Uri baseUri, Uri relativeUri)</summary>
        </member>
        <member name="F:System.Fakes.StubNetPipeStyleUriParser.IsBaseOfUriUri">
            <summary>Задает stub UriParser.IsBaseOf(Uri baseUri, Uri relativeUri)</summary>
        </member>
        <member name="M:System.Fakes.StubNetPipeStyleUriParser.IsWellFormedOriginalString(System.Uri)">
            <summary>Задает заглушка UriParser.IsWellFormedOriginalString(Uri uri)</summary>
        </member>
        <member name="F:System.Fakes.StubNetPipeStyleUriParser.IsWellFormedOriginalStringUri">
            <summary>Задает stub UriParser.IsWellFormedOriginalString(Uri uri)</summary>
        </member>
        <member name="M:System.Fakes.StubNetPipeStyleUriParser.OnNewUri">
            <summary>Задает заглушка UriParser.OnNewUri()</summary>
        </member>
        <member name="F:System.Fakes.StubNetPipeStyleUriParser.OnNewUri01">
            <summary>Задает stub UriParser.OnNewUri()</summary>
        </member>
        <member name="M:System.Fakes.StubNetPipeStyleUriParser.OnRegister(System.String,System.Int32)">
            <summary>Задает заглушка UriParser.OnRegister(String schemeName, Int32 defaultPort)</summary>
        </member>
        <member name="F:System.Fakes.StubNetPipeStyleUriParser.OnRegisterStringInt32">
            <summary>Задает stub UriParser.OnRegister(String schemeName, Int32 defaultPort)</summary>
        </member>
        <member name="M:System.Fakes.StubNetPipeStyleUriParser.Resolve(System.Uri,System.Uri,System.UriFormatException@)">
            <summary>Задает заглушка UriParser.Resolve(Uri baseUri, Uri relativeUri, UriFormatException&amp; parsingError)</summary>
        </member>
        <member name="F:System.Fakes.StubNetPipeStyleUriParser.ResolveUriUriUriFormatExceptionOut">
            <summary>Задает stub UriParser.Resolve(Uri baseUri, Uri relativeUri, UriFormatException&amp; parsingError)</summary>
        </member>
        <member name="T:System.Fakes.StubNetTcpStyleUriParser">
            <summary>Тип заглушки System.NetTcpStyleUriParser</summary>
        </member>
        <member name="M:System.Fakes.StubNetTcpStyleUriParser.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Fakes.StubNetTcpStyleUriParser.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Fakes.StubNetTcpStyleUriParser.GetComponents(System.Uri,System.UriComponents,System.UriFormat)">
            <summary>Задает заглушка UriParser.GetComponents(Uri uri, UriComponents components, UriFormat format)</summary>
        </member>
        <member name="F:System.Fakes.StubNetTcpStyleUriParser.GetComponentsUriUriComponentsUriFormat">
            <summary>Задает stub UriParser.GetComponents(Uri uri, UriComponents components, UriFormat format)</summary>
        </member>
        <member name="M:System.Fakes.StubNetTcpStyleUriParser.InitializeAndValidate(System.Uri,System.UriFormatException@)">
            <summary>Задает заглушка UriParser.InitializeAndValidate(Uri uri, UriFormatException&amp; parsingError)</summary>
        </member>
        <member name="F:System.Fakes.StubNetTcpStyleUriParser.InitializeAndValidateUriUriFormatExceptionOut">
            <summary>Задает stub UriParser.InitializeAndValidate(Uri uri, UriFormatException&amp; parsingError)</summary>
        </member>
        <member name="M:System.Fakes.StubNetTcpStyleUriParser.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubNetTcpStyleUriParser</summary>
        </member>
        <member name="P:System.Fakes.StubNetTcpStyleUriParser.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubNetTcpStyleUriParser.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.Fakes.StubNetTcpStyleUriParser.IsBaseOf(System.Uri,System.Uri)">
            <summary>Задает заглушка UriParser.IsBaseOf(Uri baseUri, Uri relativeUri)</summary>
        </member>
        <member name="F:System.Fakes.StubNetTcpStyleUriParser.IsBaseOfUriUri">
            <summary>Задает stub UriParser.IsBaseOf(Uri baseUri, Uri relativeUri)</summary>
        </member>
        <member name="M:System.Fakes.StubNetTcpStyleUriParser.IsWellFormedOriginalString(System.Uri)">
            <summary>Задает заглушка UriParser.IsWellFormedOriginalString(Uri uri)</summary>
        </member>
        <member name="F:System.Fakes.StubNetTcpStyleUriParser.IsWellFormedOriginalStringUri">
            <summary>Задает stub UriParser.IsWellFormedOriginalString(Uri uri)</summary>
        </member>
        <member name="M:System.Fakes.StubNetTcpStyleUriParser.OnNewUri">
            <summary>Задает заглушка UriParser.OnNewUri()</summary>
        </member>
        <member name="F:System.Fakes.StubNetTcpStyleUriParser.OnNewUri01">
            <summary>Задает stub UriParser.OnNewUri()</summary>
        </member>
        <member name="M:System.Fakes.StubNetTcpStyleUriParser.OnRegister(System.String,System.Int32)">
            <summary>Задает заглушка UriParser.OnRegister(String schemeName, Int32 defaultPort)</summary>
        </member>
        <member name="F:System.Fakes.StubNetTcpStyleUriParser.OnRegisterStringInt32">
            <summary>Задает stub UriParser.OnRegister(String schemeName, Int32 defaultPort)</summary>
        </member>
        <member name="M:System.Fakes.StubNetTcpStyleUriParser.Resolve(System.Uri,System.Uri,System.UriFormatException@)">
            <summary>Задает заглушка UriParser.Resolve(Uri baseUri, Uri relativeUri, UriFormatException&amp; parsingError)</summary>
        </member>
        <member name="F:System.Fakes.StubNetTcpStyleUriParser.ResolveUriUriUriFormatExceptionOut">
            <summary>Задает stub UriParser.Resolve(Uri baseUri, Uri relativeUri, UriFormatException&amp; parsingError)</summary>
        </member>
        <member name="T:System.Fakes.StubNewsStyleUriParser">
            <summary>Тип заглушки System.NewsStyleUriParser</summary>
        </member>
        <member name="M:System.Fakes.StubNewsStyleUriParser.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Fakes.StubNewsStyleUriParser.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Fakes.StubNewsStyleUriParser.GetComponents(System.Uri,System.UriComponents,System.UriFormat)">
            <summary>Задает заглушка UriParser.GetComponents(Uri uri, UriComponents components, UriFormat format)</summary>
        </member>
        <member name="F:System.Fakes.StubNewsStyleUriParser.GetComponentsUriUriComponentsUriFormat">
            <summary>Задает stub UriParser.GetComponents(Uri uri, UriComponents components, UriFormat format)</summary>
        </member>
        <member name="M:System.Fakes.StubNewsStyleUriParser.InitializeAndValidate(System.Uri,System.UriFormatException@)">
            <summary>Задает заглушка UriParser.InitializeAndValidate(Uri uri, UriFormatException&amp; parsingError)</summary>
        </member>
        <member name="F:System.Fakes.StubNewsStyleUriParser.InitializeAndValidateUriUriFormatExceptionOut">
            <summary>Задает stub UriParser.InitializeAndValidate(Uri uri, UriFormatException&amp; parsingError)</summary>
        </member>
        <member name="M:System.Fakes.StubNewsStyleUriParser.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubNewsStyleUriParser</summary>
        </member>
        <member name="P:System.Fakes.StubNewsStyleUriParser.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubNewsStyleUriParser.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.Fakes.StubNewsStyleUriParser.IsBaseOf(System.Uri,System.Uri)">
            <summary>Задает заглушка UriParser.IsBaseOf(Uri baseUri, Uri relativeUri)</summary>
        </member>
        <member name="F:System.Fakes.StubNewsStyleUriParser.IsBaseOfUriUri">
            <summary>Задает stub UriParser.IsBaseOf(Uri baseUri, Uri relativeUri)</summary>
        </member>
        <member name="M:System.Fakes.StubNewsStyleUriParser.IsWellFormedOriginalString(System.Uri)">
            <summary>Задает заглушка UriParser.IsWellFormedOriginalString(Uri uri)</summary>
        </member>
        <member name="F:System.Fakes.StubNewsStyleUriParser.IsWellFormedOriginalStringUri">
            <summary>Задает stub UriParser.IsWellFormedOriginalString(Uri uri)</summary>
        </member>
        <member name="M:System.Fakes.StubNewsStyleUriParser.OnNewUri">
            <summary>Задает заглушка UriParser.OnNewUri()</summary>
        </member>
        <member name="F:System.Fakes.StubNewsStyleUriParser.OnNewUri01">
            <summary>Задает stub UriParser.OnNewUri()</summary>
        </member>
        <member name="M:System.Fakes.StubNewsStyleUriParser.OnRegister(System.String,System.Int32)">
            <summary>Задает заглушка UriParser.OnRegister(String schemeName, Int32 defaultPort)</summary>
        </member>
        <member name="F:System.Fakes.StubNewsStyleUriParser.OnRegisterStringInt32">
            <summary>Задает stub UriParser.OnRegister(String schemeName, Int32 defaultPort)</summary>
        </member>
        <member name="M:System.Fakes.StubNewsStyleUriParser.Resolve(System.Uri,System.Uri,System.UriFormatException@)">
            <summary>Задает заглушка UriParser.Resolve(Uri baseUri, Uri relativeUri, UriFormatException&amp; parsingError)</summary>
        </member>
        <member name="F:System.Fakes.StubNewsStyleUriParser.ResolveUriUriUriFormatExceptionOut">
            <summary>Задает stub UriParser.Resolve(Uri baseUri, Uri relativeUri, UriFormatException&amp; parsingError)</summary>
        </member>
        <member name="T:System.Fakes.StubUri">
            <summary>Тип заглушки System.Uri</summary>
        </member>
        <member name="M:System.Fakes.StubUri.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubUri.#ctor(System.Uri,System.Uri)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubUri.#ctor(System.Uri,System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubUri.#ctor(System.String,System.UriKind)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubUri.#ctor(System.String,System.Boolean)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubUri.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubUri.#ctor(System.Uri,System.String,System.Boolean)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Fakes.StubUri.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Fakes.StubUri.Canonicalize">
            <summary>Задает заглушка Uri.Canonicalize()</summary>
        </member>
        <member name="F:System.Fakes.StubUri.Canonicalize01">
            <summary>Задает stub Uri.Canonicalize()</summary>
        </member>
        <member name="M:System.Fakes.StubUri.CheckSecurity">
            <summary>Задает заглушка Uri.CheckSecurity()</summary>
        </member>
        <member name="F:System.Fakes.StubUri.CheckSecurity01">
            <summary>Задает stub Uri.CheckSecurity()</summary>
        </member>
        <member name="M:System.Fakes.StubUri.Equals(System.Object)">
            <summary>Задает заглушка Uri.Equals(Object comparand)</summary>
        </member>
        <member name="F:System.Fakes.StubUri.EqualsObject">
            <summary>Задает stub Uri.Equals(Object comparand)</summary>
        </member>
        <member name="M:System.Fakes.StubUri.Escape">
            <summary>Задает заглушка Uri.Escape()</summary>
        </member>
        <member name="F:System.Fakes.StubUri.Escape01">
            <summary>Задает stub Uri.Escape()</summary>
        </member>
        <member name="M:System.Fakes.StubUri.GetHashCode">
            <summary>Задает заглушка Uri.GetHashCode()</summary>
        </member>
        <member name="F:System.Fakes.StubUri.GetHashCode01">
            <summary>Задает stub Uri.GetHashCode()</summary>
        </member>
        <member name="M:System.Fakes.StubUri.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubUri</summary>
        </member>
        <member name="P:System.Fakes.StubUri.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubUri.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.Fakes.StubUri.IsBadFileSystemCharacter(System.Char)">
            <summary>Задает заглушка Uri.IsBadFileSystemCharacter(Char character)</summary>
        </member>
        <member name="F:System.Fakes.StubUri.IsBadFileSystemCharacterChar">
            <summary>Задает stub Uri.IsBadFileSystemCharacter(Char character)</summary>
        </member>
        <member name="M:System.Fakes.StubUri.IsReservedCharacter(System.Char)">
            <summary>Задает заглушка Uri.IsReservedCharacter(Char character)</summary>
        </member>
        <member name="F:System.Fakes.StubUri.IsReservedCharacterChar">
            <summary>Задает stub Uri.IsReservedCharacter(Char character)</summary>
        </member>
        <member name="M:System.Fakes.StubUri.Parse">
            <summary>Задает заглушка Uri.Parse()</summary>
        </member>
        <member name="F:System.Fakes.StubUri.Parse01">
            <summary>Задает stub Uri.Parse()</summary>
        </member>
        <member name="M:System.Fakes.StubUri.ToString">
            <summary>Задает заглушка Uri.ToString()</summary>
        </member>
        <member name="F:System.Fakes.StubUri.ToString01">
            <summary>Задает stub Uri.ToString()</summary>
        </member>
        <member name="M:System.Fakes.StubUri.Unescape(System.String)">
            <summary>Задает заглушка Uri.Unescape(String path)</summary>
        </member>
        <member name="F:System.Fakes.StubUri.UnescapeString">
            <summary>Задает stub Uri.Unescape(String path)</summary>
        </member>
        <member name="T:System.Fakes.StubUriBuilder">
            <summary>Тип заглушки System.UriBuilder</summary>
        </member>
        <member name="M:System.Fakes.StubUriBuilder.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubUriBuilder.#ctor(System.Uri)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubUriBuilder.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubUriBuilder.#ctor(System.String,System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubUriBuilder.#ctor(System.String,System.String,System.Int32)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubUriBuilder.#ctor(System.String,System.String,System.Int32,System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubUriBuilder.#ctor(System.String,System.String,System.Int32,System.String,System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Fakes.StubUriBuilder.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Fakes.StubUriBuilder.Equals(System.Object)">
            <summary>Задает заглушка UriBuilder.Equals(Object rparam)</summary>
        </member>
        <member name="F:System.Fakes.StubUriBuilder.EqualsObject">
            <summary>Задает stub UriBuilder.Equals(Object rparam)</summary>
        </member>
        <member name="M:System.Fakes.StubUriBuilder.GetHashCode">
            <summary>Задает заглушка UriBuilder.GetHashCode()</summary>
        </member>
        <member name="F:System.Fakes.StubUriBuilder.GetHashCode01">
            <summary>Задает stub UriBuilder.GetHashCode()</summary>
        </member>
        <member name="M:System.Fakes.StubUriBuilder.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubUriBuilder</summary>
        </member>
        <member name="P:System.Fakes.StubUriBuilder.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubUriBuilder.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.Fakes.StubUriBuilder.ToString">
            <summary>Задает заглушка UriBuilder.ToString()</summary>
        </member>
        <member name="F:System.Fakes.StubUriBuilder.ToString01">
            <summary>Задает stub UriBuilder.ToString()</summary>
        </member>
        <member name="T:System.Fakes.StubUriFormatException">
            <summary>Тип заглушки System.UriFormatException</summary>
        </member>
        <member name="M:System.Fakes.StubUriFormatException.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubUriFormatException.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubUriFormatException.#ctor(System.String,System.Exception)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubUriFormatException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubUriFormatException.AttachBackingFieldToHelpLink">
            <summary>Присоединение делегатов для эмуляции StubUriFormatException.HelpLink как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Fakes.StubUriFormatException.AttachBackingFieldToSource">
            <summary>Присоединение делегатов для эмуляции StubUriFormatException.Source как свойства с резервным полем.</summary>
        </member>
        <member name="P:System.Fakes.StubUriFormatException.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Fakes.StubUriFormatException.Data">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="F:System.Fakes.StubUriFormatException.DataGet">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="M:System.Fakes.StubUriFormatException.GetBaseException">
            <summary>Задает заглушка Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Fakes.StubUriFormatException.GetBaseException01">
            <summary>Задает stub Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Fakes.StubUriFormatException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Fakes.StubUriFormatException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.Fakes.StubUriFormatException.HelpLink">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Fakes.StubUriFormatException.HelpLinkGet">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Fakes.StubUriFormatException.HelpLinkSetString">
            <summary>Задает stub Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Fakes.StubUriFormatException.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubUriFormatException</summary>
        </member>
        <member name="P:System.Fakes.StubUriFormatException.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubUriFormatException.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubUriFormatException.Message">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="F:System.Fakes.StubUriFormatException.MessageGet">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="P:System.Fakes.StubUriFormatException.Source">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.Fakes.StubUriFormatException.SourceGet">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.Fakes.StubUriFormatException.SourceSetString">
            <summary>Задает stub Exception.set_Source(String value)</summary>
        </member>
        <member name="P:System.Fakes.StubUriFormatException.StackTrace">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="F:System.Fakes.StubUriFormatException.StackTraceGet">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Fakes.StubUriFormatException.ToString">
            <summary>Задает заглушка Exception.ToString()</summary>
        </member>
        <member name="F:System.Fakes.StubUriFormatException.ToString01">
            <summary>Задает stub Exception.ToString()</summary>
        </member>
        <member name="T:System.Fakes.StubUriParser">
            <summary>Тип заглушки System.UriParser</summary>
        </member>
        <member name="M:System.Fakes.StubUriParser.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Fakes.StubUriParser.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Fakes.StubUriParser.GetComponents(System.Uri,System.UriComponents,System.UriFormat)">
            <summary>Задает заглушка UriParser.GetComponents(Uri uri, UriComponents components, UriFormat format)</summary>
        </member>
        <member name="F:System.Fakes.StubUriParser.GetComponentsUriUriComponentsUriFormat">
            <summary>Задает stub UriParser.GetComponents(Uri uri, UriComponents components, UriFormat format)</summary>
        </member>
        <member name="M:System.Fakes.StubUriParser.InitializeAndValidate(System.Uri,System.UriFormatException@)">
            <summary>Задает заглушка UriParser.InitializeAndValidate(Uri uri, UriFormatException&amp; parsingError)</summary>
        </member>
        <member name="F:System.Fakes.StubUriParser.InitializeAndValidateUriUriFormatExceptionOut">
            <summary>Задает stub UriParser.InitializeAndValidate(Uri uri, UriFormatException&amp; parsingError)</summary>
        </member>
        <member name="M:System.Fakes.StubUriParser.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubUriParser</summary>
        </member>
        <member name="P:System.Fakes.StubUriParser.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubUriParser.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.Fakes.StubUriParser.IsBaseOf(System.Uri,System.Uri)">
            <summary>Задает заглушка UriParser.IsBaseOf(Uri baseUri, Uri relativeUri)</summary>
        </member>
        <member name="F:System.Fakes.StubUriParser.IsBaseOfUriUri">
            <summary>Задает stub UriParser.IsBaseOf(Uri baseUri, Uri relativeUri)</summary>
        </member>
        <member name="M:System.Fakes.StubUriParser.IsWellFormedOriginalString(System.Uri)">
            <summary>Задает заглушка UriParser.IsWellFormedOriginalString(Uri uri)</summary>
        </member>
        <member name="F:System.Fakes.StubUriParser.IsWellFormedOriginalStringUri">
            <summary>Задает stub UriParser.IsWellFormedOriginalString(Uri uri)</summary>
        </member>
        <member name="M:System.Fakes.StubUriParser.OnNewUri">
            <summary>Задает заглушка UriParser.OnNewUri()</summary>
        </member>
        <member name="F:System.Fakes.StubUriParser.OnNewUri01">
            <summary>Задает stub UriParser.OnNewUri()</summary>
        </member>
        <member name="M:System.Fakes.StubUriParser.OnRegister(System.String,System.Int32)">
            <summary>Задает заглушка UriParser.OnRegister(String schemeName, Int32 defaultPort)</summary>
        </member>
        <member name="F:System.Fakes.StubUriParser.OnRegisterStringInt32">
            <summary>Задает stub UriParser.OnRegister(String schemeName, Int32 defaultPort)</summary>
        </member>
        <member name="M:System.Fakes.StubUriParser.Resolve(System.Uri,System.Uri,System.UriFormatException@)">
            <summary>Задает заглушка UriParser.Resolve(Uri baseUri, Uri relativeUri, UriFormatException&amp; parsingError)</summary>
        </member>
        <member name="F:System.Fakes.StubUriParser.ResolveUriUriUriFormatExceptionOut">
            <summary>Задает stub UriParser.Resolve(Uri baseUri, Uri relativeUri, UriFormatException&amp; parsingError)</summary>
        </member>
        <member name="T:System.Fakes.StubUriTypeConverter">
            <summary>Тип заглушки System.UriTypeConverter</summary>
        </member>
        <member name="M:System.Fakes.StubUriTypeConverter.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Fakes.StubUriTypeConverter.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Fakes.StubUriTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>Задает заглушка UriTypeConverter.CanConvertFrom(ITypeDescriptorContext context, Type sourceType)</summary>
        </member>
        <member name="F:System.Fakes.StubUriTypeConverter.CanConvertFromITypeDescriptorContextType">
            <summary>Задает stub UriTypeConverter.CanConvertFrom(ITypeDescriptorContext context, Type sourceType)</summary>
        </member>
        <member name="M:System.Fakes.StubUriTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>Задает заглушка UriTypeConverter.CanConvertTo(ITypeDescriptorContext context, Type destinationType)</summary>
        </member>
        <member name="F:System.Fakes.StubUriTypeConverter.CanConvertToITypeDescriptorContextType">
            <summary>Задает stub UriTypeConverter.CanConvertTo(ITypeDescriptorContext context, Type destinationType)</summary>
        </member>
        <member name="M:System.Fakes.StubUriTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>Задает заглушка UriTypeConverter.ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, Object value)</summary>
        </member>
        <member name="F:System.Fakes.StubUriTypeConverter.ConvertFromITypeDescriptorContextCultureInfoObject">
            <summary>Задает stub UriTypeConverter.ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, Object value)</summary>
        </member>
        <member name="M:System.Fakes.StubUriTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>Задает заглушка UriTypeConverter.ConvertTo(ITypeDescriptorContext context, CultureInfo culture, Object value, Type destinationType)</summary>
        </member>
        <member name="F:System.Fakes.StubUriTypeConverter.ConvertToITypeDescriptorContextCultureInfoObjectType">
            <summary>Задает stub UriTypeConverter.ConvertTo(ITypeDescriptorContext context, CultureInfo culture, Object value, Type destinationType)</summary>
        </member>
        <member name="M:System.Fakes.StubUriTypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
            <summary>Задает заглушка TypeConverter.CreateInstance(ITypeDescriptorContext context, IDictionary propertyValues)</summary>
        </member>
        <member name="F:System.Fakes.StubUriTypeConverter.CreateInstanceITypeDescriptorContextIDictionary">
            <summary>Задает stub TypeConverter.CreateInstance(ITypeDescriptorContext context, IDictionary propertyValues)</summary>
        </member>
        <member name="M:System.Fakes.StubUriTypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Задает заглушка TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.Fakes.StubUriTypeConverter.GetCreateInstanceSupportedITypeDescriptorContext">
            <summary>Задает stub TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.Fakes.StubUriTypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>Задает заглушка TypeConverter.GetProperties(ITypeDescriptorContext context, Object value, Attribute[] attributes)</summary>
        </member>
        <member name="F:System.Fakes.StubUriTypeConverter.GetPropertiesITypeDescriptorContextObjectAttributeArray">
            <summary>Задает stub TypeConverter.GetProperties(ITypeDescriptorContext context, Object value, Attribute[] attributes)</summary>
        </member>
        <member name="M:System.Fakes.StubUriTypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Задает заглушка TypeConverter.GetPropertiesSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.Fakes.StubUriTypeConverter.GetPropertiesSupportedITypeDescriptorContext">
            <summary>Задает stub TypeConverter.GetPropertiesSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.Fakes.StubUriTypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Задает заглушка TypeConverter.GetStandardValues(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.Fakes.StubUriTypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Задает заглушка TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.Fakes.StubUriTypeConverter.GetStandardValuesExclusiveITypeDescriptorContext">
            <summary>Задает stub TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.Fakes.StubUriTypeConverter.GetStandardValuesITypeDescriptorContext">
            <summary>Задает stub TypeConverter.GetStandardValues(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.Fakes.StubUriTypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Задает заглушка TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.Fakes.StubUriTypeConverter.GetStandardValuesSupportedITypeDescriptorContext">
            <summary>Задает stub TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.Fakes.StubUriTypeConverter.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubUriTypeConverter</summary>
        </member>
        <member name="P:System.Fakes.StubUriTypeConverter.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubUriTypeConverter.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.Fakes.StubUriTypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)">
            <summary>Задает заглушка UriTypeConverter.IsValid(ITypeDescriptorContext context, Object value)</summary>
        </member>
        <member name="F:System.Fakes.StubUriTypeConverter.IsValidITypeDescriptorContextObject">
            <summary>Задает stub UriTypeConverter.IsValid(ITypeDescriptorContext context, Object value)</summary>
        </member>
        <member name="T:System.IO.Compression.Fakes.StubDeflateStream">
            <summary>Тип заглушки System.IO.Compression.DeflateStream</summary>
        </member>
        <member name="M:System.IO.Compression.Fakes.StubDeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.IO.Compression.Fakes.StubDeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.IO.Compression.Fakes.StubDeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel,System.Boolean)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.IO.Compression.Fakes.StubDeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode,System.Boolean)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.IO.Compression.Fakes.StubDeflateStream.AttachBackingFieldToPosition">
            <summary>Присоединение делегатов для эмуляции StubDeflateStream.Position как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.IO.Compression.Fakes.StubDeflateStream.AttachBackingFieldToReadTimeout">
            <summary>Присоединение делегатов для эмуляции StubDeflateStream.ReadTimeout как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.IO.Compression.Fakes.StubDeflateStream.AttachBackingFieldToWriteTimeout">
            <summary>Присоединение делегатов для эмуляции StubDeflateStream.WriteTimeout как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.IO.Compression.Fakes.StubDeflateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>Задает заглушка DeflateStream.BeginRead(Byte[] array, Int32 offset, Int32 count, AsyncCallback asyncCallback, Object asyncState)</summary>
        </member>
        <member name="F:System.IO.Compression.Fakes.StubDeflateStream.BeginReadByteArrayInt32Int32AsyncCallbackObject">
            <summary>Задает stub DeflateStream.BeginRead(Byte[] array, Int32 offset, Int32 count, AsyncCallback asyncCallback, Object asyncState)</summary>
        </member>
        <member name="M:System.IO.Compression.Fakes.StubDeflateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>Задает заглушка DeflateStream.BeginWrite(Byte[] array, Int32 offset, Int32 count, AsyncCallback asyncCallback, Object asyncState)</summary>
        </member>
        <member name="F:System.IO.Compression.Fakes.StubDeflateStream.BeginWriteByteArrayInt32Int32AsyncCallbackObject">
            <summary>Задает stub DeflateStream.BeginWrite(Byte[] array, Int32 offset, Int32 count, AsyncCallback asyncCallback, Object asyncState)</summary>
        </member>
        <member name="P:System.IO.Compression.Fakes.StubDeflateStream.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.IO.Compression.Fakes.StubDeflateStream.CanRead">
            <summary>Задает stub DeflateStream.get_CanRead()</summary>
        </member>
        <member name="F:System.IO.Compression.Fakes.StubDeflateStream.CanReadGet">
            <summary>Задает stub DeflateStream.get_CanRead()</summary>
        </member>
        <member name="P:System.IO.Compression.Fakes.StubDeflateStream.CanSeek">
            <summary>Задает stub DeflateStream.get_CanSeek()</summary>
        </member>
        <member name="F:System.IO.Compression.Fakes.StubDeflateStream.CanSeekGet">
            <summary>Задает stub DeflateStream.get_CanSeek()</summary>
        </member>
        <member name="P:System.IO.Compression.Fakes.StubDeflateStream.CanTimeout">
            <summary>Задает stub Stream.get_CanTimeout()</summary>
        </member>
        <member name="F:System.IO.Compression.Fakes.StubDeflateStream.CanTimeoutGet">
            <summary>Задает stub Stream.get_CanTimeout()</summary>
        </member>
        <member name="P:System.IO.Compression.Fakes.StubDeflateStream.CanWrite">
            <summary>Задает stub DeflateStream.get_CanWrite()</summary>
        </member>
        <member name="F:System.IO.Compression.Fakes.StubDeflateStream.CanWriteGet">
            <summary>Задает stub DeflateStream.get_CanWrite()</summary>
        </member>
        <member name="M:System.IO.Compression.Fakes.StubDeflateStream.Close">
            <summary>Задает заглушка Stream.Close()</summary>
        </member>
        <member name="F:System.IO.Compression.Fakes.StubDeflateStream.Close01">
            <summary>Задает stub Stream.Close()</summary>
        </member>
        <member name="M:System.IO.Compression.Fakes.StubDeflateStream.CreateWaitHandle">
            <summary>Задает заглушка Stream.CreateWaitHandle()</summary>
        </member>
        <member name="F:System.IO.Compression.Fakes.StubDeflateStream.CreateWaitHandle01">
            <summary>Задает stub Stream.CreateWaitHandle()</summary>
        </member>
        <member name="M:System.IO.Compression.Fakes.StubDeflateStream.Dispose(System.Boolean)">
            <summary>Задает заглушка DeflateStream.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.IO.Compression.Fakes.StubDeflateStream.DisposeBoolean">
            <summary>Задает stub DeflateStream.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:System.IO.Compression.Fakes.StubDeflateStream.EndRead(System.IAsyncResult)">
            <summary>Задает заглушка DeflateStream.EndRead(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:System.IO.Compression.Fakes.StubDeflateStream.EndReadIAsyncResult">
            <summary>Задает stub DeflateStream.EndRead(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:System.IO.Compression.Fakes.StubDeflateStream.EndWrite(System.IAsyncResult)">
            <summary>Задает заглушка DeflateStream.EndWrite(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:System.IO.Compression.Fakes.StubDeflateStream.EndWriteIAsyncResult">
            <summary>Задает stub DeflateStream.EndWrite(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:System.IO.Compression.Fakes.StubDeflateStream.Flush">
            <summary>Задает заглушка DeflateStream.Flush()</summary>
        </member>
        <member name="F:System.IO.Compression.Fakes.StubDeflateStream.Flush01">
            <summary>Задает stub DeflateStream.Flush()</summary>
        </member>
        <member name="M:System.IO.Compression.Fakes.StubDeflateStream.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubDeflateStream</summary>
        </member>
        <member name="P:System.IO.Compression.Fakes.StubDeflateStream.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.IO.Compression.Fakes.StubDeflateStream.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.IO.Compression.Fakes.StubDeflateStream.Length">
            <summary>Задает stub DeflateStream.get_Length()</summary>
        </member>
        <member name="F:System.IO.Compression.Fakes.StubDeflateStream.LengthGet">
            <summary>Задает stub DeflateStream.get_Length()</summary>
        </member>
        <member name="M:System.IO.Compression.Fakes.StubDeflateStream.ObjectInvariant">
            <summary>Задает заглушка Stream.ObjectInvariant()</summary>
        </member>
        <member name="F:System.IO.Compression.Fakes.StubDeflateStream.ObjectInvariant01">
            <summary>Задает stub Stream.ObjectInvariant()</summary>
        </member>
        <member name="P:System.IO.Compression.Fakes.StubDeflateStream.Position">
            <summary>Задает stub DeflateStream.get_Position()</summary>
        </member>
        <member name="F:System.IO.Compression.Fakes.StubDeflateStream.PositionGet">
            <summary>Задает stub DeflateStream.get_Position()</summary>
        </member>
        <member name="F:System.IO.Compression.Fakes.StubDeflateStream.PositionSetInt64">
            <summary>Задает stub DeflateStream.set_Position(Int64 value)</summary>
        </member>
        <member name="M:System.IO.Compression.Fakes.StubDeflateStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>Задает заглушка DeflateStream.Read(Byte[] array, Int32 offset, Int32 count)</summary>
        </member>
        <member name="M:System.IO.Compression.Fakes.StubDeflateStream.ReadByte">
            <summary>Задает заглушка Stream.ReadByte()</summary>
        </member>
        <member name="F:System.IO.Compression.Fakes.StubDeflateStream.ReadByte01">
            <summary>Задает stub Stream.ReadByte()</summary>
        </member>
        <member name="F:System.IO.Compression.Fakes.StubDeflateStream.ReadByteArrayInt32Int32">
            <summary>Задает stub DeflateStream.Read(Byte[] array, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Compression.Fakes.StubDeflateStream.ReadTimeout">
            <summary>Задает stub Stream.get_ReadTimeout()</summary>
        </member>
        <member name="F:System.IO.Compression.Fakes.StubDeflateStream.ReadTimeoutGet">
            <summary>Задает stub Stream.get_ReadTimeout()</summary>
        </member>
        <member name="F:System.IO.Compression.Fakes.StubDeflateStream.ReadTimeoutSetInt32">
            <summary>Задает stub Stream.set_ReadTimeout(Int32 value)</summary>
        </member>
        <member name="M:System.IO.Compression.Fakes.StubDeflateStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>Задает заглушка DeflateStream.Seek(Int64 offset, SeekOrigin origin)</summary>
        </member>
        <member name="F:System.IO.Compression.Fakes.StubDeflateStream.SeekInt64SeekOrigin">
            <summary>Задает stub DeflateStream.Seek(Int64 offset, SeekOrigin origin)</summary>
        </member>
        <member name="M:System.IO.Compression.Fakes.StubDeflateStream.SetLength(System.Int64)">
            <summary>Задает заглушка DeflateStream.SetLength(Int64 value)</summary>
        </member>
        <member name="F:System.IO.Compression.Fakes.StubDeflateStream.SetLengthInt64">
            <summary>Задает stub DeflateStream.SetLength(Int64 value)</summary>
        </member>
        <member name="M:System.IO.Compression.Fakes.StubDeflateStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>Задает заглушка DeflateStream.Write(Byte[] array, Int32 offset, Int32 count)</summary>
        </member>
        <member name="M:System.IO.Compression.Fakes.StubDeflateStream.WriteByte(System.Byte)">
            <summary>Задает заглушка Stream.WriteByte(Byte value)</summary>
        </member>
        <member name="F:System.IO.Compression.Fakes.StubDeflateStream.WriteByteArrayInt32Int32">
            <summary>Задает stub DeflateStream.Write(Byte[] array, Int32 offset, Int32 count)</summary>
        </member>
        <member name="F:System.IO.Compression.Fakes.StubDeflateStream.WriteByteByte">
            <summary>Задает stub Stream.WriteByte(Byte value)</summary>
        </member>
        <member name="P:System.IO.Compression.Fakes.StubDeflateStream.WriteTimeout">
            <summary>Задает stub Stream.get_WriteTimeout()</summary>
        </member>
        <member name="F:System.IO.Compression.Fakes.StubDeflateStream.WriteTimeoutGet">
            <summary>Задает stub Stream.get_WriteTimeout()</summary>
        </member>
        <member name="F:System.IO.Compression.Fakes.StubDeflateStream.WriteTimeoutSetInt32">
            <summary>Задает stub Stream.set_WriteTimeout(Int32 value)</summary>
        </member>
        <member name="T:System.IO.Compression.Fakes.StubGZipStream">
            <summary>Тип заглушки System.IO.Compression.GZipStream</summary>
        </member>
        <member name="M:System.IO.Compression.Fakes.StubGZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.IO.Compression.Fakes.StubGZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.IO.Compression.Fakes.StubGZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel,System.Boolean)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.IO.Compression.Fakes.StubGZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode,System.Boolean)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.IO.Compression.Fakes.StubGZipStream.AttachBackingFieldToPosition">
            <summary>Присоединение делегатов для эмуляции StubGZipStream.Position как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.IO.Compression.Fakes.StubGZipStream.AttachBackingFieldToReadTimeout">
            <summary>Присоединение делегатов для эмуляции StubGZipStream.ReadTimeout как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.IO.Compression.Fakes.StubGZipStream.AttachBackingFieldToWriteTimeout">
            <summary>Присоединение делегатов для эмуляции StubGZipStream.WriteTimeout как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.IO.Compression.Fakes.StubGZipStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>Задает заглушка GZipStream.BeginRead(Byte[] array, Int32 offset, Int32 count, AsyncCallback asyncCallback, Object asyncState)</summary>
        </member>
        <member name="F:System.IO.Compression.Fakes.StubGZipStream.BeginReadByteArrayInt32Int32AsyncCallbackObject">
            <summary>Задает stub GZipStream.BeginRead(Byte[] array, Int32 offset, Int32 count, AsyncCallback asyncCallback, Object asyncState)</summary>
        </member>
        <member name="M:System.IO.Compression.Fakes.StubGZipStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>Задает заглушка GZipStream.BeginWrite(Byte[] array, Int32 offset, Int32 count, AsyncCallback asyncCallback, Object asyncState)</summary>
        </member>
        <member name="F:System.IO.Compression.Fakes.StubGZipStream.BeginWriteByteArrayInt32Int32AsyncCallbackObject">
            <summary>Задает stub GZipStream.BeginWrite(Byte[] array, Int32 offset, Int32 count, AsyncCallback asyncCallback, Object asyncState)</summary>
        </member>
        <member name="P:System.IO.Compression.Fakes.StubGZipStream.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.IO.Compression.Fakes.StubGZipStream.CanRead">
            <summary>Задает stub GZipStream.get_CanRead()</summary>
        </member>
        <member name="F:System.IO.Compression.Fakes.StubGZipStream.CanReadGet">
            <summary>Задает stub GZipStream.get_CanRead()</summary>
        </member>
        <member name="P:System.IO.Compression.Fakes.StubGZipStream.CanSeek">
            <summary>Задает stub GZipStream.get_CanSeek()</summary>
        </member>
        <member name="F:System.IO.Compression.Fakes.StubGZipStream.CanSeekGet">
            <summary>Задает stub GZipStream.get_CanSeek()</summary>
        </member>
        <member name="P:System.IO.Compression.Fakes.StubGZipStream.CanTimeout">
            <summary>Задает stub Stream.get_CanTimeout()</summary>
        </member>
        <member name="F:System.IO.Compression.Fakes.StubGZipStream.CanTimeoutGet">
            <summary>Задает stub Stream.get_CanTimeout()</summary>
        </member>
        <member name="P:System.IO.Compression.Fakes.StubGZipStream.CanWrite">
            <summary>Задает stub GZipStream.get_CanWrite()</summary>
        </member>
        <member name="F:System.IO.Compression.Fakes.StubGZipStream.CanWriteGet">
            <summary>Задает stub GZipStream.get_CanWrite()</summary>
        </member>
        <member name="M:System.IO.Compression.Fakes.StubGZipStream.Close">
            <summary>Задает заглушка Stream.Close()</summary>
        </member>
        <member name="F:System.IO.Compression.Fakes.StubGZipStream.Close01">
            <summary>Задает stub Stream.Close()</summary>
        </member>
        <member name="M:System.IO.Compression.Fakes.StubGZipStream.CreateWaitHandle">
            <summary>Задает заглушка Stream.CreateWaitHandle()</summary>
        </member>
        <member name="F:System.IO.Compression.Fakes.StubGZipStream.CreateWaitHandle01">
            <summary>Задает stub Stream.CreateWaitHandle()</summary>
        </member>
        <member name="M:System.IO.Compression.Fakes.StubGZipStream.Dispose(System.Boolean)">
            <summary>Задает заглушка GZipStream.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.IO.Compression.Fakes.StubGZipStream.DisposeBoolean">
            <summary>Задает stub GZipStream.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:System.IO.Compression.Fakes.StubGZipStream.EndRead(System.IAsyncResult)">
            <summary>Задает заглушка GZipStream.EndRead(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:System.IO.Compression.Fakes.StubGZipStream.EndReadIAsyncResult">
            <summary>Задает stub GZipStream.EndRead(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:System.IO.Compression.Fakes.StubGZipStream.EndWrite(System.IAsyncResult)">
            <summary>Задает заглушка GZipStream.EndWrite(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:System.IO.Compression.Fakes.StubGZipStream.EndWriteIAsyncResult">
            <summary>Задает stub GZipStream.EndWrite(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:System.IO.Compression.Fakes.StubGZipStream.Flush">
            <summary>Задает заглушка GZipStream.Flush()</summary>
        </member>
        <member name="F:System.IO.Compression.Fakes.StubGZipStream.Flush01">
            <summary>Задает stub GZipStream.Flush()</summary>
        </member>
        <member name="M:System.IO.Compression.Fakes.StubGZipStream.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubGZipStream</summary>
        </member>
        <member name="P:System.IO.Compression.Fakes.StubGZipStream.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.IO.Compression.Fakes.StubGZipStream.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.IO.Compression.Fakes.StubGZipStream.Length">
            <summary>Задает stub GZipStream.get_Length()</summary>
        </member>
        <member name="F:System.IO.Compression.Fakes.StubGZipStream.LengthGet">
            <summary>Задает stub GZipStream.get_Length()</summary>
        </member>
        <member name="M:System.IO.Compression.Fakes.StubGZipStream.ObjectInvariant">
            <summary>Задает заглушка Stream.ObjectInvariant()</summary>
        </member>
        <member name="F:System.IO.Compression.Fakes.StubGZipStream.ObjectInvariant01">
            <summary>Задает stub Stream.ObjectInvariant()</summary>
        </member>
        <member name="P:System.IO.Compression.Fakes.StubGZipStream.Position">
            <summary>Задает stub GZipStream.get_Position()</summary>
        </member>
        <member name="F:System.IO.Compression.Fakes.StubGZipStream.PositionGet">
            <summary>Задает stub GZipStream.get_Position()</summary>
        </member>
        <member name="F:System.IO.Compression.Fakes.StubGZipStream.PositionSetInt64">
            <summary>Задает stub GZipStream.set_Position(Int64 value)</summary>
        </member>
        <member name="M:System.IO.Compression.Fakes.StubGZipStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>Задает заглушка GZipStream.Read(Byte[] array, Int32 offset, Int32 count)</summary>
        </member>
        <member name="M:System.IO.Compression.Fakes.StubGZipStream.ReadByte">
            <summary>Задает заглушка Stream.ReadByte()</summary>
        </member>
        <member name="F:System.IO.Compression.Fakes.StubGZipStream.ReadByte01">
            <summary>Задает stub Stream.ReadByte()</summary>
        </member>
        <member name="F:System.IO.Compression.Fakes.StubGZipStream.ReadByteArrayInt32Int32">
            <summary>Задает stub GZipStream.Read(Byte[] array, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Compression.Fakes.StubGZipStream.ReadTimeout">
            <summary>Задает stub Stream.get_ReadTimeout()</summary>
        </member>
        <member name="F:System.IO.Compression.Fakes.StubGZipStream.ReadTimeoutGet">
            <summary>Задает stub Stream.get_ReadTimeout()</summary>
        </member>
        <member name="F:System.IO.Compression.Fakes.StubGZipStream.ReadTimeoutSetInt32">
            <summary>Задает stub Stream.set_ReadTimeout(Int32 value)</summary>
        </member>
        <member name="M:System.IO.Compression.Fakes.StubGZipStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>Задает заглушка GZipStream.Seek(Int64 offset, SeekOrigin origin)</summary>
        </member>
        <member name="F:System.IO.Compression.Fakes.StubGZipStream.SeekInt64SeekOrigin">
            <summary>Задает stub GZipStream.Seek(Int64 offset, SeekOrigin origin)</summary>
        </member>
        <member name="M:System.IO.Compression.Fakes.StubGZipStream.SetLength(System.Int64)">
            <summary>Задает заглушка GZipStream.SetLength(Int64 value)</summary>
        </member>
        <member name="F:System.IO.Compression.Fakes.StubGZipStream.SetLengthInt64">
            <summary>Задает stub GZipStream.SetLength(Int64 value)</summary>
        </member>
        <member name="M:System.IO.Compression.Fakes.StubGZipStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>Задает заглушка GZipStream.Write(Byte[] array, Int32 offset, Int32 count)</summary>
        </member>
        <member name="M:System.IO.Compression.Fakes.StubGZipStream.WriteByte(System.Byte)">
            <summary>Задает заглушка Stream.WriteByte(Byte value)</summary>
        </member>
        <member name="F:System.IO.Compression.Fakes.StubGZipStream.WriteByteArrayInt32Int32">
            <summary>Задает stub GZipStream.Write(Byte[] array, Int32 offset, Int32 count)</summary>
        </member>
        <member name="F:System.IO.Compression.Fakes.StubGZipStream.WriteByteByte">
            <summary>Задает stub Stream.WriteByte(Byte value)</summary>
        </member>
        <member name="P:System.IO.Compression.Fakes.StubGZipStream.WriteTimeout">
            <summary>Задает stub Stream.get_WriteTimeout()</summary>
        </member>
        <member name="F:System.IO.Compression.Fakes.StubGZipStream.WriteTimeoutGet">
            <summary>Задает stub Stream.get_WriteTimeout()</summary>
        </member>
        <member name="F:System.IO.Compression.Fakes.StubGZipStream.WriteTimeoutSetInt32">
            <summary>Задает stub Stream.set_WriteTimeout(Int32 value)</summary>
        </member>
        <member name="T:System.IO.Fakes.StubErrorEventArgs">
            <summary>Тип заглушки System.IO.ErrorEventArgs</summary>
        </member>
        <member name="M:System.IO.Fakes.StubErrorEventArgs.#ctor(System.Exception)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.IO.Fakes.StubErrorEventArgs.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.IO.Fakes.StubErrorEventArgs.GetException">
            <summary>Задает заглушка ErrorEventArgs.GetException()</summary>
        </member>
        <member name="F:System.IO.Fakes.StubErrorEventArgs.GetException01">
            <summary>Задает stub ErrorEventArgs.GetException()</summary>
        </member>
        <member name="M:System.IO.Fakes.StubErrorEventArgs.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubErrorEventArgs</summary>
        </member>
        <member name="P:System.IO.Fakes.StubErrorEventArgs.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.IO.Fakes.StubErrorEventArgs.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.IO.Fakes.StubFileSystemEventArgs">
            <summary>Тип заглушки System.IO.FileSystemEventArgs</summary>
        </member>
        <member name="M:System.IO.Fakes.StubFileSystemEventArgs.#ctor(System.IO.WatcherChangeTypes,System.String,System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.IO.Fakes.StubFileSystemEventArgs.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.IO.Fakes.StubFileSystemEventArgs.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubFileSystemEventArgs</summary>
        </member>
        <member name="P:System.IO.Fakes.StubFileSystemEventArgs.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.IO.Fakes.StubFileSystemEventArgs.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.IO.Fakes.StubFileSystemWatcher">
            <summary>Тип заглушки System.IO.FileSystemWatcher</summary>
        </member>
        <member name="M:System.IO.Fakes.StubFileSystemWatcher.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.IO.Fakes.StubFileSystemWatcher.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.IO.Fakes.StubFileSystemWatcher.#ctor(System.String,System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.IO.Fakes.StubFileSystemWatcher.AttachBackingFieldToSite">
            <summary>Присоединение делегатов для эмуляции StubFileSystemWatcher.Site как свойства с резервным полем.</summary>
        </member>
        <member name="P:System.IO.Fakes.StubFileSystemWatcher.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.IO.Fakes.StubFileSystemWatcher.CanRaiseEvents">
            <summary>Задает stub Component.get_CanRaiseEvents()</summary>
        </member>
        <member name="F:System.IO.Fakes.StubFileSystemWatcher.CanRaiseEventsGet">
            <summary>Задает stub Component.get_CanRaiseEvents()</summary>
        </member>
        <member name="M:System.IO.Fakes.StubFileSystemWatcher.Dispose(System.Boolean)">
            <summary>Задает заглушка FileSystemWatcher.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.IO.Fakes.StubFileSystemWatcher.DisposeBoolean">
            <summary>Задает stub FileSystemWatcher.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:System.IO.Fakes.StubFileSystemWatcher.GetService(System.Type)">
            <summary>Задает заглушка Component.GetService(Type service)</summary>
        </member>
        <member name="F:System.IO.Fakes.StubFileSystemWatcher.GetServiceType">
            <summary>Задает stub Component.GetService(Type service)</summary>
        </member>
        <member name="M:System.IO.Fakes.StubFileSystemWatcher.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubFileSystemWatcher</summary>
        </member>
        <member name="P:System.IO.Fakes.StubFileSystemWatcher.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.IO.Fakes.StubFileSystemWatcher.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.IO.Fakes.StubFileSystemWatcher.Site">
            <summary>Задает stub FileSystemWatcher.get_Site()</summary>
        </member>
        <member name="F:System.IO.Fakes.StubFileSystemWatcher.SiteGet">
            <summary>Задает stub FileSystemWatcher.get_Site()</summary>
        </member>
        <member name="F:System.IO.Fakes.StubFileSystemWatcher.SiteSetISite">
            <summary>Задает stub FileSystemWatcher.set_Site(ISite value)</summary>
        </member>
        <member name="M:System.IO.Fakes.StubFileSystemWatcher.ToString">
            <summary>Задает заглушка Component.ToString()</summary>
        </member>
        <member name="F:System.IO.Fakes.StubFileSystemWatcher.ToString01">
            <summary>Задает stub Component.ToString()</summary>
        </member>
        <member name="T:System.IO.Fakes.StubIODescriptionAttribute">
            <summary>Тип заглушки System.IO.IODescriptionAttribute</summary>
        </member>
        <member name="M:System.IO.Fakes.StubIODescriptionAttribute.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.IO.Fakes.StubIODescriptionAttribute.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.IO.Fakes.StubIODescriptionAttribute.Description">
            <summary>Задает stub IODescriptionAttribute.get_Description()</summary>
        </member>
        <member name="F:System.IO.Fakes.StubIODescriptionAttribute.DescriptionGet">
            <summary>Задает stub IODescriptionAttribute.get_Description()</summary>
        </member>
        <member name="M:System.IO.Fakes.StubIODescriptionAttribute.Equals(System.Object)">
            <summary>Задает заглушка DescriptionAttribute.Equals(Object obj)</summary>
        </member>
        <member name="F:System.IO.Fakes.StubIODescriptionAttribute.EqualsObject">
            <summary>Задает stub DescriptionAttribute.Equals(Object obj)</summary>
        </member>
        <member name="M:System.IO.Fakes.StubIODescriptionAttribute.GetHashCode">
            <summary>Задает заглушка DescriptionAttribute.GetHashCode()</summary>
        </member>
        <member name="F:System.IO.Fakes.StubIODescriptionAttribute.GetHashCode01">
            <summary>Задает stub DescriptionAttribute.GetHashCode()</summary>
        </member>
        <member name="M:System.IO.Fakes.StubIODescriptionAttribute.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubIODescriptionAttribute</summary>
        </member>
        <member name="P:System.IO.Fakes.StubIODescriptionAttribute.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.IO.Fakes.StubIODescriptionAttribute.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.IO.Fakes.StubIODescriptionAttribute.IsDefaultAttribute">
            <summary>Задает заглушка DescriptionAttribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:System.IO.Fakes.StubIODescriptionAttribute.IsDefaultAttribute01">
            <summary>Задает stub DescriptionAttribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:System.IO.Fakes.StubIODescriptionAttribute.Match(System.Object)">
            <summary>Задает заглушка Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:System.IO.Fakes.StubIODescriptionAttribute.MatchObject">
            <summary>Задает stub Attribute.Match(Object obj)</summary>
        </member>
        <member name="P:System.IO.Fakes.StubIODescriptionAttribute.TypeId">
            <summary>Задает stub Attribute.get_TypeId()</summary>
        </member>
        <member name="F:System.IO.Fakes.StubIODescriptionAttribute.TypeIdGet">
            <summary>Задает stub Attribute.get_TypeId()</summary>
        </member>
        <member name="T:System.IO.Fakes.StubInternalBufferOverflowException">
            <summary>Тип заглушки System.IO.InternalBufferOverflowException</summary>
        </member>
        <member name="M:System.IO.Fakes.StubInternalBufferOverflowException.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.IO.Fakes.StubInternalBufferOverflowException.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.IO.Fakes.StubInternalBufferOverflowException.#ctor(System.String,System.Exception)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.IO.Fakes.StubInternalBufferOverflowException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.IO.Fakes.StubInternalBufferOverflowException.AttachBackingFieldToHelpLink">
            <summary>Присоединение делегатов для эмуляции StubInternalBufferOverflowException.HelpLink как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.IO.Fakes.StubInternalBufferOverflowException.AttachBackingFieldToSource">
            <summary>Присоединение делегатов для эмуляции StubInternalBufferOverflowException.Source как свойства с резервным полем.</summary>
        </member>
        <member name="P:System.IO.Fakes.StubInternalBufferOverflowException.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.IO.Fakes.StubInternalBufferOverflowException.Data">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="F:System.IO.Fakes.StubInternalBufferOverflowException.DataGet">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="M:System.IO.Fakes.StubInternalBufferOverflowException.GetBaseException">
            <summary>Задает заглушка Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.IO.Fakes.StubInternalBufferOverflowException.GetBaseException01">
            <summary>Задает stub Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.IO.Fakes.StubInternalBufferOverflowException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.IO.Fakes.StubInternalBufferOverflowException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.IO.Fakes.StubInternalBufferOverflowException.HelpLink">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.IO.Fakes.StubInternalBufferOverflowException.HelpLinkGet">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.IO.Fakes.StubInternalBufferOverflowException.HelpLinkSetString">
            <summary>Задает stub Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.IO.Fakes.StubInternalBufferOverflowException.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubInternalBufferOverflowException</summary>
        </member>
        <member name="P:System.IO.Fakes.StubInternalBufferOverflowException.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.IO.Fakes.StubInternalBufferOverflowException.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.IO.Fakes.StubInternalBufferOverflowException.Message">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="F:System.IO.Fakes.StubInternalBufferOverflowException.MessageGet">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="P:System.IO.Fakes.StubInternalBufferOverflowException.Source">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.IO.Fakes.StubInternalBufferOverflowException.SourceGet">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.IO.Fakes.StubInternalBufferOverflowException.SourceSetString">
            <summary>Задает stub Exception.set_Source(String value)</summary>
        </member>
        <member name="P:System.IO.Fakes.StubInternalBufferOverflowException.StackTrace">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="F:System.IO.Fakes.StubInternalBufferOverflowException.StackTraceGet">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.IO.Fakes.StubInternalBufferOverflowException.ToString">
            <summary>Задает заглушка Exception.ToString()</summary>
        </member>
        <member name="F:System.IO.Fakes.StubInternalBufferOverflowException.ToString01">
            <summary>Задает stub Exception.ToString()</summary>
        </member>
        <member name="T:System.IO.Fakes.StubRenamedEventArgs">
            <summary>Тип заглушки System.IO.RenamedEventArgs</summary>
        </member>
        <member name="M:System.IO.Fakes.StubRenamedEventArgs.#ctor(System.IO.WatcherChangeTypes,System.String,System.String,System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.IO.Fakes.StubRenamedEventArgs.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.IO.Fakes.StubRenamedEventArgs.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubRenamedEventArgs</summary>
        </member>
        <member name="P:System.IO.Fakes.StubRenamedEventArgs.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.IO.Fakes.StubRenamedEventArgs.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.IO.Ports.Fakes.StubSerialPort">
            <summary>Тип заглушки System.IO.Ports.SerialPort</summary>
        </member>
        <member name="M:System.IO.Ports.Fakes.StubSerialPort.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.IO.Ports.Fakes.StubSerialPort.#ctor(System.ComponentModel.IContainer)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.IO.Ports.Fakes.StubSerialPort.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.IO.Ports.Fakes.StubSerialPort.#ctor(System.String,System.Int32)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.IO.Ports.Fakes.StubSerialPort.#ctor(System.String,System.Int32,System.IO.Ports.Parity)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.IO.Ports.Fakes.StubSerialPort.#ctor(System.String,System.Int32,System.IO.Ports.Parity,System.Int32)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.IO.Ports.Fakes.StubSerialPort.#ctor(System.String,System.Int32,System.IO.Ports.Parity,System.Int32,System.IO.Ports.StopBits)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.IO.Ports.Fakes.StubSerialPort.AttachBackingFieldToSite">
            <summary>Присоединение делегатов для эмуляции StubSerialPort.Site как свойства с резервным полем.</summary>
        </member>
        <member name="P:System.IO.Ports.Fakes.StubSerialPort.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.IO.Ports.Fakes.StubSerialPort.CanRaiseEvents">
            <summary>Задает stub Component.get_CanRaiseEvents()</summary>
        </member>
        <member name="F:System.IO.Ports.Fakes.StubSerialPort.CanRaiseEventsGet">
            <summary>Задает stub Component.get_CanRaiseEvents()</summary>
        </member>
        <member name="M:System.IO.Ports.Fakes.StubSerialPort.Dispose(System.Boolean)">
            <summary>Задает заглушка SerialPort.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.IO.Ports.Fakes.StubSerialPort.DisposeBoolean">
            <summary>Задает stub SerialPort.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:System.IO.Ports.Fakes.StubSerialPort.GetService(System.Type)">
            <summary>Задает заглушка Component.GetService(Type service)</summary>
        </member>
        <member name="F:System.IO.Ports.Fakes.StubSerialPort.GetServiceType">
            <summary>Задает stub Component.GetService(Type service)</summary>
        </member>
        <member name="M:System.IO.Ports.Fakes.StubSerialPort.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubSerialPort</summary>
        </member>
        <member name="P:System.IO.Ports.Fakes.StubSerialPort.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.IO.Ports.Fakes.StubSerialPort.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.IO.Ports.Fakes.StubSerialPort.Site">
            <summary>Задает stub Component.get_Site()</summary>
        </member>
        <member name="F:System.IO.Ports.Fakes.StubSerialPort.SiteGet">
            <summary>Задает stub Component.get_Site()</summary>
        </member>
        <member name="F:System.IO.Ports.Fakes.StubSerialPort.SiteSetISite">
            <summary>Задает stub Component.set_Site(ISite value)</summary>
        </member>
        <member name="M:System.IO.Ports.Fakes.StubSerialPort.ToString">
            <summary>Задает заглушка Component.ToString()</summary>
        </member>
        <member name="F:System.IO.Ports.Fakes.StubSerialPort.ToString01">
            <summary>Задает stub Component.ToString()</summary>
        </member>
        <member name="T:System.Media.Fakes.StubSoundPlayer">
            <summary>Тип заглушки System.Media.SoundPlayer</summary>
        </member>
        <member name="M:System.Media.Fakes.StubSoundPlayer.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Media.Fakes.StubSoundPlayer.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Media.Fakes.StubSoundPlayer.#ctor(System.IO.Stream)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Media.Fakes.StubSoundPlayer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Media.Fakes.StubSoundPlayer.AttachBackingFieldToSite">
            <summary>Присоединение делегатов для эмуляции StubSoundPlayer.Site как свойства с резервным полем.</summary>
        </member>
        <member name="P:System.Media.Fakes.StubSoundPlayer.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Media.Fakes.StubSoundPlayer.CanRaiseEvents">
            <summary>Задает stub Component.get_CanRaiseEvents()</summary>
        </member>
        <member name="F:System.Media.Fakes.StubSoundPlayer.CanRaiseEventsGet">
            <summary>Задает stub Component.get_CanRaiseEvents()</summary>
        </member>
        <member name="M:System.Media.Fakes.StubSoundPlayer.Dispose(System.Boolean)">
            <summary>Задает заглушка Component.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.Media.Fakes.StubSoundPlayer.DisposeBoolean">
            <summary>Задает stub Component.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:System.Media.Fakes.StubSoundPlayer.GetService(System.Type)">
            <summary>Задает заглушка Component.GetService(Type service)</summary>
        </member>
        <member name="F:System.Media.Fakes.StubSoundPlayer.GetServiceType">
            <summary>Задает stub Component.GetService(Type service)</summary>
        </member>
        <member name="M:System.Media.Fakes.StubSoundPlayer.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubSoundPlayer</summary>
        </member>
        <member name="P:System.Media.Fakes.StubSoundPlayer.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Media.Fakes.StubSoundPlayer.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.Media.Fakes.StubSoundPlayer.OnLoadCompleted(System.ComponentModel.AsyncCompletedEventArgs)">
            <summary>Задает заглушка SoundPlayer.OnLoadCompleted(AsyncCompletedEventArgs e)</summary>
        </member>
        <member name="F:System.Media.Fakes.StubSoundPlayer.OnLoadCompletedAsyncCompletedEventArgs">
            <summary>Задает stub SoundPlayer.OnLoadCompleted(AsyncCompletedEventArgs e)</summary>
        </member>
        <member name="M:System.Media.Fakes.StubSoundPlayer.OnSoundLocationChanged(System.EventArgs)">
            <summary>Задает заглушка SoundPlayer.OnSoundLocationChanged(EventArgs e)</summary>
        </member>
        <member name="F:System.Media.Fakes.StubSoundPlayer.OnSoundLocationChangedEventArgs">
            <summary>Задает stub SoundPlayer.OnSoundLocationChanged(EventArgs e)</summary>
        </member>
        <member name="M:System.Media.Fakes.StubSoundPlayer.OnStreamChanged(System.EventArgs)">
            <summary>Задает заглушка SoundPlayer.OnStreamChanged(EventArgs e)</summary>
        </member>
        <member name="F:System.Media.Fakes.StubSoundPlayer.OnStreamChangedEventArgs">
            <summary>Задает stub SoundPlayer.OnStreamChanged(EventArgs e)</summary>
        </member>
        <member name="P:System.Media.Fakes.StubSoundPlayer.Site">
            <summary>Задает stub Component.get_Site()</summary>
        </member>
        <member name="F:System.Media.Fakes.StubSoundPlayer.SiteGet">
            <summary>Задает stub Component.get_Site()</summary>
        </member>
        <member name="F:System.Media.Fakes.StubSoundPlayer.SiteSetISite">
            <summary>Задает stub Component.set_Site(ISite value)</summary>
        </member>
        <member name="M:System.Media.Fakes.StubSoundPlayer.ToString">
            <summary>Задает заглушка Component.ToString()</summary>
        </member>
        <member name="F:System.Media.Fakes.StubSoundPlayer.ToString01">
            <summary>Задает stub Component.ToString()</summary>
        </member>
        <member name="T:System.Net.Cache.Fakes.StubHttpRequestCachePolicy">
            <summary>Тип заглушки System.Net.Cache.HttpRequestCachePolicy</summary>
        </member>
        <member name="M:System.Net.Cache.Fakes.StubHttpRequestCachePolicy.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Cache.Fakes.StubHttpRequestCachePolicy.#ctor(System.Net.Cache.HttpRequestCacheLevel)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Cache.Fakes.StubHttpRequestCachePolicy.#ctor(System.DateTime)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Cache.Fakes.StubHttpRequestCachePolicy.#ctor(System.Net.Cache.HttpCacheAgeControl,System.TimeSpan)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Cache.Fakes.StubHttpRequestCachePolicy.#ctor(System.Net.Cache.HttpCacheAgeControl,System.TimeSpan,System.TimeSpan)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Cache.Fakes.StubHttpRequestCachePolicy.#ctor(System.Net.Cache.HttpCacheAgeControl,System.TimeSpan,System.TimeSpan,System.DateTime)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Net.Cache.Fakes.StubHttpRequestCachePolicy.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Net.Cache.Fakes.StubHttpRequestCachePolicy.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubHttpRequestCachePolicy</summary>
        </member>
        <member name="P:System.Net.Cache.Fakes.StubHttpRequestCachePolicy.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Net.Cache.Fakes.StubHttpRequestCachePolicy.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.Net.Cache.Fakes.StubHttpRequestCachePolicy.ToString">
            <summary>Задает заглушка HttpRequestCachePolicy.ToString()</summary>
        </member>
        <member name="F:System.Net.Cache.Fakes.StubHttpRequestCachePolicy.ToString01">
            <summary>Задает stub HttpRequestCachePolicy.ToString()</summary>
        </member>
        <member name="T:System.Net.Cache.Fakes.StubRequestCachePolicy">
            <summary>Тип заглушки System.Net.Cache.RequestCachePolicy</summary>
        </member>
        <member name="M:System.Net.Cache.Fakes.StubRequestCachePolicy.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Cache.Fakes.StubRequestCachePolicy.#ctor(System.Net.Cache.RequestCacheLevel)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Net.Cache.Fakes.StubRequestCachePolicy.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Net.Cache.Fakes.StubRequestCachePolicy.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubRequestCachePolicy</summary>
        </member>
        <member name="P:System.Net.Cache.Fakes.StubRequestCachePolicy.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Net.Cache.Fakes.StubRequestCachePolicy.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.Net.Cache.Fakes.StubRequestCachePolicy.ToString">
            <summary>Задает заглушка RequestCachePolicy.ToString()</summary>
        </member>
        <member name="F:System.Net.Cache.Fakes.StubRequestCachePolicy.ToString01">
            <summary>Задает stub RequestCachePolicy.ToString()</summary>
        </member>
        <member name="T:System.Net.Fakes.StubAuthorization">
            <summary>Тип заглушки System.Net.Authorization</summary>
        </member>
        <member name="M:System.Net.Fakes.StubAuthorization.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Fakes.StubAuthorization.#ctor(System.String,System.Boolean)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Fakes.StubAuthorization.#ctor(System.String,System.Boolean,System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Net.Fakes.StubAuthorization.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Net.Fakes.StubAuthorization.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubAuthorization</summary>
        </member>
        <member name="P:System.Net.Fakes.StubAuthorization.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Net.Fakes.StubAuthorization.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Net.Fakes.StubCookieCollection">
            <summary>Тип заглушки System.Net.CookieCollection</summary>
        </member>
        <member name="M:System.Net.Fakes.StubCookieCollection.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Net.Fakes.StubCookieCollection.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Net.Fakes.StubCookieCollection.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCookieCollection</summary>
        </member>
        <member name="P:System.Net.Fakes.StubCookieCollection.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Net.Fakes.StubCookieCollection.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Net.Fakes.StubCookieContainer">
            <summary>Тип заглушки System.Net.CookieContainer</summary>
        </member>
        <member name="M:System.Net.Fakes.StubCookieContainer.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Fakes.StubCookieContainer.#ctor(System.Int32)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Fakes.StubCookieContainer.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Net.Fakes.StubCookieContainer.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Net.Fakes.StubCookieContainer.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCookieContainer</summary>
        </member>
        <member name="P:System.Net.Fakes.StubCookieContainer.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Net.Fakes.StubCookieContainer.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Net.Fakes.StubCookieException">
            <summary>Тип заглушки System.Net.CookieException</summary>
        </member>
        <member name="M:System.Net.Fakes.StubCookieException.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Fakes.StubCookieException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Fakes.StubCookieException.AttachBackingFieldToHelpLink">
            <summary>Присоединение делегатов для эмуляции StubCookieException.HelpLink как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Net.Fakes.StubCookieException.AttachBackingFieldToSource">
            <summary>Присоединение делегатов для эмуляции StubCookieException.Source как свойства с резервным полем.</summary>
        </member>
        <member name="P:System.Net.Fakes.StubCookieException.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Net.Fakes.StubCookieException.Data">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubCookieException.DataGet">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="M:System.Net.Fakes.StubCookieException.GetBaseException">
            <summary>Задает заглушка Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubCookieException.GetBaseException01">
            <summary>Задает stub Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Net.Fakes.StubCookieException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка CookieException.GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext)</summary>
        </member>
        <member name="F:System.Net.Fakes.StubCookieException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub CookieException.GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext)</summary>
        </member>
        <member name="P:System.Net.Fakes.StubCookieException.HelpLink">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubCookieException.HelpLinkGet">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubCookieException.HelpLinkSetString">
            <summary>Задает stub Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Net.Fakes.StubCookieException.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCookieException</summary>
        </member>
        <member name="P:System.Net.Fakes.StubCookieException.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Net.Fakes.StubCookieException.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Net.Fakes.StubCookieException.Message">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubCookieException.MessageGet">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="P:System.Net.Fakes.StubCookieException.Source">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubCookieException.SourceGet">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubCookieException.SourceSetString">
            <summary>Задает stub Exception.set_Source(String value)</summary>
        </member>
        <member name="P:System.Net.Fakes.StubCookieException.StackTrace">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubCookieException.StackTraceGet">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Net.Fakes.StubCookieException.ToString">
            <summary>Задает заглушка Exception.ToString()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubCookieException.ToString01">
            <summary>Задает stub Exception.ToString()</summary>
        </member>
        <member name="T:System.Net.Fakes.StubCredentialCache">
            <summary>Тип заглушки System.Net.CredentialCache</summary>
        </member>
        <member name="M:System.Net.Fakes.StubCredentialCache.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Net.Fakes.StubCredentialCache.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Net.Fakes.StubCredentialCache.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCredentialCache</summary>
        </member>
        <member name="P:System.Net.Fakes.StubCredentialCache.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Net.Fakes.StubCredentialCache.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Net.Fakes.StubDnsEndPoint">
            <summary>Тип заглушки System.Net.DnsEndPoint</summary>
        </member>
        <member name="M:System.Net.Fakes.StubDnsEndPoint.#ctor(System.String,System.Int32)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Fakes.StubDnsEndPoint.#ctor(System.String,System.Int32,System.Net.Sockets.AddressFamily)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Net.Fakes.StubDnsEndPoint.AddressFamily">
            <summary>Задает stub DnsEndPoint.get_AddressFamily()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubDnsEndPoint.AddressFamilyGet">
            <summary>Задает stub DnsEndPoint.get_AddressFamily()</summary>
        </member>
        <member name="P:System.Net.Fakes.StubDnsEndPoint.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Net.Fakes.StubDnsEndPoint.Create(System.Net.SocketAddress)">
            <summary>Задает заглушка EndPoint.Create(SocketAddress socketAddress)</summary>
        </member>
        <member name="F:System.Net.Fakes.StubDnsEndPoint.CreateSocketAddress">
            <summary>Задает stub EndPoint.Create(SocketAddress socketAddress)</summary>
        </member>
        <member name="M:System.Net.Fakes.StubDnsEndPoint.Equals(System.Object)">
            <summary>Задает заглушка DnsEndPoint.Equals(Object comparand)</summary>
        </member>
        <member name="F:System.Net.Fakes.StubDnsEndPoint.EqualsObject">
            <summary>Задает stub DnsEndPoint.Equals(Object comparand)</summary>
        </member>
        <member name="M:System.Net.Fakes.StubDnsEndPoint.GetHashCode">
            <summary>Задает заглушка DnsEndPoint.GetHashCode()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubDnsEndPoint.GetHashCode01">
            <summary>Задает stub DnsEndPoint.GetHashCode()</summary>
        </member>
        <member name="M:System.Net.Fakes.StubDnsEndPoint.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubDnsEndPoint</summary>
        </member>
        <member name="P:System.Net.Fakes.StubDnsEndPoint.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Net.Fakes.StubDnsEndPoint.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.Net.Fakes.StubDnsEndPoint.Serialize">
            <summary>Задает заглушка EndPoint.Serialize()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubDnsEndPoint.Serialize01">
            <summary>Задает stub EndPoint.Serialize()</summary>
        </member>
        <member name="M:System.Net.Fakes.StubDnsEndPoint.ToString">
            <summary>Задает заглушка DnsEndPoint.ToString()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubDnsEndPoint.ToString01">
            <summary>Задает stub DnsEndPoint.ToString()</summary>
        </member>
        <member name="T:System.Net.Fakes.StubEndPoint">
            <summary>Тип заглушки System.Net.EndPoint</summary>
        </member>
        <member name="M:System.Net.Fakes.StubEndPoint.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Net.Fakes.StubEndPoint.AddressFamily">
            <summary>Задает stub EndPoint.get_AddressFamily()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubEndPoint.AddressFamilyGet">
            <summary>Задает stub EndPoint.get_AddressFamily()</summary>
        </member>
        <member name="P:System.Net.Fakes.StubEndPoint.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Net.Fakes.StubEndPoint.Create(System.Net.SocketAddress)">
            <summary>Задает заглушка EndPoint.Create(SocketAddress socketAddress)</summary>
        </member>
        <member name="F:System.Net.Fakes.StubEndPoint.CreateSocketAddress">
            <summary>Задает stub EndPoint.Create(SocketAddress socketAddress)</summary>
        </member>
        <member name="M:System.Net.Fakes.StubEndPoint.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubEndPoint</summary>
        </member>
        <member name="P:System.Net.Fakes.StubEndPoint.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Net.Fakes.StubEndPoint.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.Net.Fakes.StubEndPoint.Serialize">
            <summary>Задает заглушка EndPoint.Serialize()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubEndPoint.Serialize01">
            <summary>Задает stub EndPoint.Serialize()</summary>
        </member>
        <member name="T:System.Net.Fakes.StubFileWebRequest">
            <summary>Тип заглушки System.Net.FileWebRequest</summary>
        </member>
        <member name="M:System.Net.Fakes.StubFileWebRequest.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Fakes.StubFileWebRequest.Abort">
            <summary>Задает заглушка FileWebRequest.Abort()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubFileWebRequest.Abort01">
            <summary>Задает stub FileWebRequest.Abort()</summary>
        </member>
        <member name="M:System.Net.Fakes.StubFileWebRequest.AttachBackingFieldToCachePolicy">
            <summary>Присоединение делегатов для эмуляции StubFileWebRequest.CachePolicy как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Net.Fakes.StubFileWebRequest.AttachBackingFieldToConnectionGroupName">
            <summary>Присоединение делегатов для эмуляции StubFileWebRequest.ConnectionGroupName как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Net.Fakes.StubFileWebRequest.AttachBackingFieldToContentLength">
            <summary>Присоединение делегатов для эмуляции StubFileWebRequest.ContentLength как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Net.Fakes.StubFileWebRequest.AttachBackingFieldToContentType">
            <summary>Присоединение делегатов для эмуляции StubFileWebRequest.ContentType как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Net.Fakes.StubFileWebRequest.AttachBackingFieldToCredentials">
            <summary>Присоединение делегатов для эмуляции StubFileWebRequest.Credentials как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Net.Fakes.StubFileWebRequest.AttachBackingFieldToMethod">
            <summary>Присоединение делегатов для эмуляции StubFileWebRequest.Method как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Net.Fakes.StubFileWebRequest.AttachBackingFieldToPreAuthenticate">
            <summary>Присоединение делегатов для эмуляции StubFileWebRequest.PreAuthenticate как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Net.Fakes.StubFileWebRequest.AttachBackingFieldToProxy">
            <summary>Присоединение делегатов для эмуляции StubFileWebRequest.Proxy как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Net.Fakes.StubFileWebRequest.AttachBackingFieldToTimeout">
            <summary>Присоединение делегатов для эмуляции StubFileWebRequest.Timeout как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Net.Fakes.StubFileWebRequest.AttachBackingFieldToUseDefaultCredentials">
            <summary>Присоединение делегатов для эмуляции StubFileWebRequest.UseDefaultCredentials как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Net.Fakes.StubFileWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
            <summary>Задает заглушка FileWebRequest.BeginGetRequestStream(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:System.Net.Fakes.StubFileWebRequest.BeginGetRequestStreamAsyncCallbackObject">
            <summary>Задает stub FileWebRequest.BeginGetRequestStream(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:System.Net.Fakes.StubFileWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
            <summary>Задает заглушка FileWebRequest.BeginGetResponse(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:System.Net.Fakes.StubFileWebRequest.BeginGetResponseAsyncCallbackObject">
            <summary>Задает stub FileWebRequest.BeginGetResponse(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:System.Net.Fakes.StubFileWebRequest.CachePolicy">
            <summary>Задает stub WebRequest.get_CachePolicy()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubFileWebRequest.CachePolicyGet">
            <summary>Задает stub WebRequest.get_CachePolicy()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubFileWebRequest.CachePolicySetRequestCachePolicy">
            <summary>Задает stub WebRequest.set_CachePolicy(RequestCachePolicy value)</summary>
        </member>
        <member name="P:System.Net.Fakes.StubFileWebRequest.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Net.Fakes.StubFileWebRequest.ConnectionGroupName">
            <summary>Задает stub FileWebRequest.get_ConnectionGroupName()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubFileWebRequest.ConnectionGroupNameGet">
            <summary>Задает stub FileWebRequest.get_ConnectionGroupName()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubFileWebRequest.ConnectionGroupNameSetString">
            <summary>Задает stub FileWebRequest.set_ConnectionGroupName(String value)</summary>
        </member>
        <member name="P:System.Net.Fakes.StubFileWebRequest.ContentLength">
            <summary>Задает stub FileWebRequest.get_ContentLength()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubFileWebRequest.ContentLengthGet">
            <summary>Задает stub FileWebRequest.get_ContentLength()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubFileWebRequest.ContentLengthSetInt64">
            <summary>Задает stub FileWebRequest.set_ContentLength(Int64 value)</summary>
        </member>
        <member name="P:System.Net.Fakes.StubFileWebRequest.ContentType">
            <summary>Задает stub FileWebRequest.get_ContentType()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubFileWebRequest.ContentTypeGet">
            <summary>Задает stub FileWebRequest.get_ContentType()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubFileWebRequest.ContentTypeSetString">
            <summary>Задает stub FileWebRequest.set_ContentType(String value)</summary>
        </member>
        <member name="P:System.Net.Fakes.StubFileWebRequest.CreatorInstance">
            <summary>Задает stub WebRequest.get_CreatorInstance()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubFileWebRequest.CreatorInstanceGet">
            <summary>Задает stub WebRequest.get_CreatorInstance()</summary>
        </member>
        <member name="P:System.Net.Fakes.StubFileWebRequest.Credentials">
            <summary>Задает stub FileWebRequest.get_Credentials()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubFileWebRequest.CredentialsGet">
            <summary>Задает stub FileWebRequest.get_Credentials()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubFileWebRequest.CredentialsSetICredentials">
            <summary>Задает stub FileWebRequest.set_Credentials(ICredentials value)</summary>
        </member>
        <member name="M:System.Net.Fakes.StubFileWebRequest.EndGetRequestStream(System.IAsyncResult)">
            <summary>Задает заглушка FileWebRequest.EndGetRequestStream(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:System.Net.Fakes.StubFileWebRequest.EndGetRequestStreamIAsyncResult">
            <summary>Задает stub FileWebRequest.EndGetRequestStream(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:System.Net.Fakes.StubFileWebRequest.EndGetResponse(System.IAsyncResult)">
            <summary>Задает заглушка FileWebRequest.EndGetResponse(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:System.Net.Fakes.StubFileWebRequest.EndGetResponseIAsyncResult">
            <summary>Задает stub FileWebRequest.EndGetResponse(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:System.Net.Fakes.StubFileWebRequest.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка FileWebRequest.GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext)</summary>
        </member>
        <member name="F:System.Net.Fakes.StubFileWebRequest.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub FileWebRequest.GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext)</summary>
        </member>
        <member name="M:System.Net.Fakes.StubFileWebRequest.GetRequestStream">
            <summary>Задает заглушка FileWebRequest.GetRequestStream()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubFileWebRequest.GetRequestStream01">
            <summary>Задает stub FileWebRequest.GetRequestStream()</summary>
        </member>
        <member name="M:System.Net.Fakes.StubFileWebRequest.GetRequestStreamAsync">
            <summary>Задает заглушка WebRequest.GetRequestStreamAsync()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubFileWebRequest.GetRequestStreamAsync01">
            <summary>Задает stub WebRequest.GetRequestStreamAsync()</summary>
        </member>
        <member name="M:System.Net.Fakes.StubFileWebRequest.GetResponse">
            <summary>Задает заглушка FileWebRequest.GetResponse()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubFileWebRequest.GetResponse01">
            <summary>Задает stub FileWebRequest.GetResponse()</summary>
        </member>
        <member name="M:System.Net.Fakes.StubFileWebRequest.GetResponseAsync">
            <summary>Задает заглушка WebRequest.GetResponseAsync()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubFileWebRequest.GetResponseAsync01">
            <summary>Задает stub WebRequest.GetResponseAsync()</summary>
        </member>
        <member name="P:System.Net.Fakes.StubFileWebRequest.Headers">
            <summary>Задает stub FileWebRequest.get_Headers()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubFileWebRequest.HeadersGet">
            <summary>Задает stub FileWebRequest.get_Headers()</summary>
        </member>
        <member name="M:System.Net.Fakes.StubFileWebRequest.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubFileWebRequest</summary>
        </member>
        <member name="P:System.Net.Fakes.StubFileWebRequest.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Net.Fakes.StubFileWebRequest.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Net.Fakes.StubFileWebRequest.Method">
            <summary>Задает stub FileWebRequest.get_Method()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubFileWebRequest.MethodGet">
            <summary>Задает stub FileWebRequest.get_Method()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubFileWebRequest.MethodSetString">
            <summary>Задает stub FileWebRequest.set_Method(String value)</summary>
        </member>
        <member name="P:System.Net.Fakes.StubFileWebRequest.PreAuthenticate">
            <summary>Задает stub FileWebRequest.get_PreAuthenticate()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubFileWebRequest.PreAuthenticateGet">
            <summary>Задает stub FileWebRequest.get_PreAuthenticate()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubFileWebRequest.PreAuthenticateSetBoolean">
            <summary>Задает stub FileWebRequest.set_PreAuthenticate(Boolean value)</summary>
        </member>
        <member name="P:System.Net.Fakes.StubFileWebRequest.Proxy">
            <summary>Задает stub FileWebRequest.get_Proxy()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubFileWebRequest.ProxyGet">
            <summary>Задает stub FileWebRequest.get_Proxy()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubFileWebRequest.ProxySetIWebProxy">
            <summary>Задает stub FileWebRequest.set_Proxy(IWebProxy value)</summary>
        </member>
        <member name="P:System.Net.Fakes.StubFileWebRequest.RequestUri">
            <summary>Задает stub FileWebRequest.get_RequestUri()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubFileWebRequest.RequestUriGet">
            <summary>Задает stub FileWebRequest.get_RequestUri()</summary>
        </member>
        <member name="P:System.Net.Fakes.StubFileWebRequest.Timeout">
            <summary>Задает stub FileWebRequest.get_Timeout()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubFileWebRequest.TimeoutGet">
            <summary>Задает stub FileWebRequest.get_Timeout()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubFileWebRequest.TimeoutSetInt32">
            <summary>Задает stub FileWebRequest.set_Timeout(Int32 value)</summary>
        </member>
        <member name="P:System.Net.Fakes.StubFileWebRequest.UseDefaultCredentials">
            <summary>Задает stub FileWebRequest.get_UseDefaultCredentials()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubFileWebRequest.UseDefaultCredentialsGet">
            <summary>Задает stub FileWebRequest.get_UseDefaultCredentials()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubFileWebRequest.UseDefaultCredentialsSetBoolean">
            <summary>Задает stub FileWebRequest.set_UseDefaultCredentials(Boolean value)</summary>
        </member>
        <member name="T:System.Net.Fakes.StubFileWebResponse">
            <summary>Тип заглушки System.Net.FileWebResponse</summary>
        </member>
        <member name="M:System.Net.Fakes.StubFileWebResponse.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Net.Fakes.StubFileWebResponse.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Net.Fakes.StubFileWebResponse.Close">
            <summary>Задает заглушка FileWebResponse.Close()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubFileWebResponse.Close01">
            <summary>Задает stub FileWebResponse.Close()</summary>
        </member>
        <member name="P:System.Net.Fakes.StubFileWebResponse.ContentLength">
            <summary>Задает stub FileWebResponse.get_ContentLength()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubFileWebResponse.ContentLengthGet">
            <summary>Задает stub FileWebResponse.get_ContentLength()</summary>
        </member>
        <member name="P:System.Net.Fakes.StubFileWebResponse.ContentType">
            <summary>Задает stub FileWebResponse.get_ContentType()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubFileWebResponse.ContentTypeGet">
            <summary>Задает stub FileWebResponse.get_ContentType()</summary>
        </member>
        <member name="M:System.Net.Fakes.StubFileWebResponse.Dispose(System.Boolean)">
            <summary>Задает заглушка WebResponse.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.Net.Fakes.StubFileWebResponse.DisposeBoolean">
            <summary>Задает stub WebResponse.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:System.Net.Fakes.StubFileWebResponse.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка FileWebResponse.GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext)</summary>
        </member>
        <member name="F:System.Net.Fakes.StubFileWebResponse.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub FileWebResponse.GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext)</summary>
        </member>
        <member name="M:System.Net.Fakes.StubFileWebResponse.GetResponseStream">
            <summary>Задает заглушка FileWebResponse.GetResponseStream()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubFileWebResponse.GetResponseStream01">
            <summary>Задает stub FileWebResponse.GetResponseStream()</summary>
        </member>
        <member name="P:System.Net.Fakes.StubFileWebResponse.Headers">
            <summary>Задает stub FileWebResponse.get_Headers()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubFileWebResponse.HeadersGet">
            <summary>Задает stub FileWebResponse.get_Headers()</summary>
        </member>
        <member name="M:System.Net.Fakes.StubFileWebResponse.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubFileWebResponse</summary>
        </member>
        <member name="P:System.Net.Fakes.StubFileWebResponse.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Net.Fakes.StubFileWebResponse.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Net.Fakes.StubFileWebResponse.IsFromCache">
            <summary>Задает stub WebResponse.get_IsFromCache()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubFileWebResponse.IsFromCacheGet">
            <summary>Задает stub WebResponse.get_IsFromCache()</summary>
        </member>
        <member name="P:System.Net.Fakes.StubFileWebResponse.IsMutuallyAuthenticated">
            <summary>Задает stub WebResponse.get_IsMutuallyAuthenticated()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubFileWebResponse.IsMutuallyAuthenticatedGet">
            <summary>Задает stub WebResponse.get_IsMutuallyAuthenticated()</summary>
        </member>
        <member name="P:System.Net.Fakes.StubFileWebResponse.ResponseUri">
            <summary>Задает stub FileWebResponse.get_ResponseUri()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubFileWebResponse.ResponseUriGet">
            <summary>Задает stub FileWebResponse.get_ResponseUri()</summary>
        </member>
        <member name="P:System.Net.Fakes.StubFileWebResponse.SupportsHeaders">
            <summary>Задает stub FileWebResponse.get_SupportsHeaders()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubFileWebResponse.SupportsHeadersGet">
            <summary>Задает stub FileWebResponse.get_SupportsHeaders()</summary>
        </member>
        <member name="T:System.Net.Fakes.StubHttpListenerException">
            <summary>Тип заглушки System.Net.HttpListenerException</summary>
        </member>
        <member name="M:System.Net.Fakes.StubHttpListenerException.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Fakes.StubHttpListenerException.#ctor(System.Int32)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Fakes.StubHttpListenerException.#ctor(System.Int32,System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Fakes.StubHttpListenerException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Fakes.StubHttpListenerException.AttachBackingFieldToHelpLink">
            <summary>Присоединение делегатов для эмуляции StubHttpListenerException.HelpLink как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Net.Fakes.StubHttpListenerException.AttachBackingFieldToSource">
            <summary>Присоединение делегатов для эмуляции StubHttpListenerException.Source как свойства с резервным полем.</summary>
        </member>
        <member name="P:System.Net.Fakes.StubHttpListenerException.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Net.Fakes.StubHttpListenerException.Data">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubHttpListenerException.DataGet">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="P:System.Net.Fakes.StubHttpListenerException.ErrorCode">
            <summary>Задает stub HttpListenerException.get_ErrorCode()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubHttpListenerException.ErrorCodeGet">
            <summary>Задает stub HttpListenerException.get_ErrorCode()</summary>
        </member>
        <member name="M:System.Net.Fakes.StubHttpListenerException.GetBaseException">
            <summary>Задает заглушка Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubHttpListenerException.GetBaseException01">
            <summary>Задает stub Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Net.Fakes.StubHttpListenerException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка Win32Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Net.Fakes.StubHttpListenerException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub Win32Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.Net.Fakes.StubHttpListenerException.HelpLink">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubHttpListenerException.HelpLinkGet">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubHttpListenerException.HelpLinkSetString">
            <summary>Задает stub Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Net.Fakes.StubHttpListenerException.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubHttpListenerException</summary>
        </member>
        <member name="P:System.Net.Fakes.StubHttpListenerException.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Net.Fakes.StubHttpListenerException.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Net.Fakes.StubHttpListenerException.Message">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubHttpListenerException.MessageGet">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="P:System.Net.Fakes.StubHttpListenerException.Source">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubHttpListenerException.SourceGet">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubHttpListenerException.SourceSetString">
            <summary>Задает stub Exception.set_Source(String value)</summary>
        </member>
        <member name="P:System.Net.Fakes.StubHttpListenerException.StackTrace">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubHttpListenerException.StackTraceGet">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Net.Fakes.StubHttpListenerException.ToString">
            <summary>Задает заглушка ExternalException.ToString()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubHttpListenerException.ToString01">
            <summary>Задает stub ExternalException.ToString()</summary>
        </member>
        <member name="T:System.Net.Fakes.StubHttpVersion">
            <summary>Тип заглушки System.Net.HttpVersion</summary>
        </member>
        <member name="M:System.Net.Fakes.StubHttpVersion.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Net.Fakes.StubHttpVersion.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Net.Fakes.StubHttpVersion.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubHttpVersion</summary>
        </member>
        <member name="P:System.Net.Fakes.StubHttpVersion.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Net.Fakes.StubHttpVersion.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Net.Fakes.StubIAuthenticationModule">
            <summary>Тип заглушки System.Net.IAuthenticationModule</summary>
        </member>
        <member name="M:System.Net.Fakes.StubIAuthenticationModule.#ctor">
            <summary>Инициализирует новый экземпляр type StubIAuthenticationModule</summary>
        </member>
        <member name="F:System.Net.Fakes.StubIAuthenticationModule.AuthenticateStringWebRequestICredentials">
            <summary>Задает stub IAuthenticationModule.Authenticate(String challenge, WebRequest request, ICredentials credentials)</summary>
        </member>
        <member name="P:System.Net.Fakes.StubIAuthenticationModule.System#Net#IAuthenticationModule#AuthenticationType">
            <summary>Задает stub IAuthenticationModule.get_AuthenticationType()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubIAuthenticationModule.AuthenticationTypeGet">
            <summary>Задает stub IAuthenticationModule.get_AuthenticationType()</summary>
        </member>
        <member name="P:System.Net.Fakes.StubIAuthenticationModule.System#Net#IAuthenticationModule#CanPreAuthenticate">
            <summary>Задает stub IAuthenticationModule.get_CanPreAuthenticate()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubIAuthenticationModule.CanPreAuthenticateGet">
            <summary>Задает stub IAuthenticationModule.get_CanPreAuthenticate()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubIAuthenticationModule.PreAuthenticateWebRequestICredentials">
            <summary>Задает stub IAuthenticationModule.PreAuthenticate(WebRequest request, ICredentials credentials)</summary>
        </member>
        <member name="M:System.Net.Fakes.StubIAuthenticationModule.System#Net#IAuthenticationModule#Authenticate(System.String,System.Net.WebRequest,System.Net.ICredentials)">
            <summary>Задает заглушка IAuthenticationModule.Authenticate(String challenge, WebRequest request, ICredentials credentials)</summary>
        </member>
        <member name="M:System.Net.Fakes.StubIAuthenticationModule.System#Net#IAuthenticationModule#PreAuthenticate(System.Net.WebRequest,System.Net.ICredentials)">
            <summary>Задает заглушка IAuthenticationModule.PreAuthenticate(WebRequest request, ICredentials credentials)</summary>
        </member>
        <member name="T:System.Net.Fakes.StubICredentialPolicy">
            <summary>Тип заглушки System.Net.ICredentialPolicy</summary>
        </member>
        <member name="M:System.Net.Fakes.StubICredentialPolicy.#ctor">
            <summary>Инициализирует новый экземпляр type StubICredentialPolicy</summary>
        </member>
        <member name="F:System.Net.Fakes.StubICredentialPolicy.ShouldSendCredentialUriWebRequestNetworkCredentialIAuthenticationModule">
            <summary>Задает stub ICredentialPolicy.ShouldSendCredential(Uri challengeUri, WebRequest request, NetworkCredential credential, IAuthenticationModule authenticationModule)</summary>
        </member>
        <member name="M:System.Net.Fakes.StubICredentialPolicy.System#Net#ICredentialPolicy#ShouldSendCredential(System.Uri,System.Net.WebRequest,System.Net.NetworkCredential,System.Net.IAuthenticationModule)">
            <summary>Задает заглушка ICredentialPolicy.ShouldSendCredential(Uri challengeUri, WebRequest request, NetworkCredential credential, IAuthenticationModule authenticationModule)</summary>
        </member>
        <member name="T:System.Net.Fakes.StubICredentials">
            <summary>Тип заглушки System.Net.ICredentials</summary>
        </member>
        <member name="M:System.Net.Fakes.StubICredentials.#ctor">
            <summary>Инициализирует новый экземпляр type StubICredentials</summary>
        </member>
        <member name="F:System.Net.Fakes.StubICredentials.GetCredentialUriString">
            <summary>Задает stub ICredentials.GetCredential(Uri uri, String authType)</summary>
        </member>
        <member name="M:System.Net.Fakes.StubICredentials.System#Net#ICredentials#GetCredential(System.Uri,System.String)">
            <summary>Задает заглушка ICredentials.GetCredential(Uri uri, String authType)</summary>
        </member>
        <member name="T:System.Net.Fakes.StubICredentialsByHost">
            <summary>Тип заглушки System.Net.ICredentialsByHost</summary>
        </member>
        <member name="M:System.Net.Fakes.StubICredentialsByHost.#ctor">
            <summary>Инициализирует новый экземпляр type StubICredentialsByHost</summary>
        </member>
        <member name="F:System.Net.Fakes.StubICredentialsByHost.GetCredentialStringInt32String">
            <summary>Задает stub ICredentialsByHost.GetCredential(String host, Int32 port, String authenticationType)</summary>
        </member>
        <member name="M:System.Net.Fakes.StubICredentialsByHost.System#Net#ICredentialsByHost#GetCredential(System.String,System.Int32,System.String)">
            <summary>Задает заглушка ICredentialsByHost.GetCredential(String host, Int32 port, String authenticationType)</summary>
        </member>
        <member name="T:System.Net.Fakes.StubIPAddress">
            <summary>Тип заглушки System.Net.IPAddress</summary>
        </member>
        <member name="M:System.Net.Fakes.StubIPAddress.#ctor(System.Byte[])">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Fakes.StubIPAddress.#ctor(System.Int64)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Fakes.StubIPAddress.#ctor(System.Byte[],System.Int64)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Net.Fakes.StubIPAddress.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Net.Fakes.StubIPAddress.Equals(System.Object)">
            <summary>Задает заглушка IPAddress.Equals(Object comparand)</summary>
        </member>
        <member name="F:System.Net.Fakes.StubIPAddress.EqualsObject">
            <summary>Задает stub IPAddress.Equals(Object comparand)</summary>
        </member>
        <member name="M:System.Net.Fakes.StubIPAddress.GetHashCode">
            <summary>Задает заглушка IPAddress.GetHashCode()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubIPAddress.GetHashCode01">
            <summary>Задает stub IPAddress.GetHashCode()</summary>
        </member>
        <member name="M:System.Net.Fakes.StubIPAddress.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubIPAddress</summary>
        </member>
        <member name="P:System.Net.Fakes.StubIPAddress.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Net.Fakes.StubIPAddress.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.Net.Fakes.StubIPAddress.ToString">
            <summary>Задает заглушка IPAddress.ToString()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubIPAddress.ToString01">
            <summary>Задает stub IPAddress.ToString()</summary>
        </member>
        <member name="T:System.Net.Fakes.StubIPEndPoint">
            <summary>Тип заглушки System.Net.IPEndPoint</summary>
        </member>
        <member name="M:System.Net.Fakes.StubIPEndPoint.#ctor(System.Net.IPAddress,System.Int32)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Fakes.StubIPEndPoint.#ctor(System.Int64,System.Int32)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Net.Fakes.StubIPEndPoint.AddressFamily">
            <summary>Задает stub IPEndPoint.get_AddressFamily()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubIPEndPoint.AddressFamilyGet">
            <summary>Задает stub IPEndPoint.get_AddressFamily()</summary>
        </member>
        <member name="P:System.Net.Fakes.StubIPEndPoint.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Net.Fakes.StubIPEndPoint.Create(System.Net.SocketAddress)">
            <summary>Задает заглушка IPEndPoint.Create(SocketAddress socketAddress)</summary>
        </member>
        <member name="F:System.Net.Fakes.StubIPEndPoint.CreateSocketAddress">
            <summary>Задает stub IPEndPoint.Create(SocketAddress socketAddress)</summary>
        </member>
        <member name="M:System.Net.Fakes.StubIPEndPoint.Equals(System.Object)">
            <summary>Задает заглушка IPEndPoint.Equals(Object comparand)</summary>
        </member>
        <member name="F:System.Net.Fakes.StubIPEndPoint.EqualsObject">
            <summary>Задает stub IPEndPoint.Equals(Object comparand)</summary>
        </member>
        <member name="M:System.Net.Fakes.StubIPEndPoint.GetHashCode">
            <summary>Задает заглушка IPEndPoint.GetHashCode()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubIPEndPoint.GetHashCode01">
            <summary>Задает stub IPEndPoint.GetHashCode()</summary>
        </member>
        <member name="M:System.Net.Fakes.StubIPEndPoint.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubIPEndPoint</summary>
        </member>
        <member name="P:System.Net.Fakes.StubIPEndPoint.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Net.Fakes.StubIPEndPoint.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.Net.Fakes.StubIPEndPoint.Serialize">
            <summary>Задает заглушка IPEndPoint.Serialize()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubIPEndPoint.Serialize01">
            <summary>Задает stub IPEndPoint.Serialize()</summary>
        </member>
        <member name="M:System.Net.Fakes.StubIPEndPoint.ToString">
            <summary>Задает заглушка IPEndPoint.ToString()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubIPEndPoint.ToString01">
            <summary>Задает stub IPEndPoint.ToString()</summary>
        </member>
        <member name="T:System.Net.Fakes.StubIPHostEntry">
            <summary>Тип заглушки System.Net.IPHostEntry</summary>
        </member>
        <member name="M:System.Net.Fakes.StubIPHostEntry.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Net.Fakes.StubIPHostEntry.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Net.Fakes.StubIPHostEntry.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubIPHostEntry</summary>
        </member>
        <member name="P:System.Net.Fakes.StubIPHostEntry.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Net.Fakes.StubIPHostEntry.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Net.Fakes.StubIWebProxy">
            <summary>Тип заглушки System.Net.IWebProxy</summary>
        </member>
        <member name="M:System.Net.Fakes.StubIWebProxy.#ctor">
            <summary>Инициализирует новый экземпляр type StubIWebProxy</summary>
        </member>
        <member name="M:System.Net.Fakes.StubIWebProxy.AttachBackingFieldToCredentials">
            <summary>Присоединение делегатов для эмуляции StubIWebProxy.Credentials как свойства с резервным полем.</summary>
        </member>
        <member name="P:System.Net.Fakes.StubIWebProxy.System#Net#IWebProxy#Credentials">
            <summary>Задает stub IWebProxy.get_Credentials()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubIWebProxy.CredentialsGet">
            <summary>Задает stub IWebProxy.get_Credentials()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubIWebProxy.CredentialsSetICredentials">
            <summary>Задает stub IWebProxy.set_Credentials(ICredentials value)</summary>
        </member>
        <member name="F:System.Net.Fakes.StubIWebProxy.GetProxyUri">
            <summary>Задает stub IWebProxy.GetProxy(Uri destination)</summary>
        </member>
        <member name="F:System.Net.Fakes.StubIWebProxy.IsBypassedUri">
            <summary>Задает stub IWebProxy.IsBypassed(Uri host)</summary>
        </member>
        <member name="M:System.Net.Fakes.StubIWebProxy.System#Net#IWebProxy#GetProxy(System.Uri)">
            <summary>Задает заглушка IWebProxy.GetProxy(Uri destination)</summary>
        </member>
        <member name="M:System.Net.Fakes.StubIWebProxy.System#Net#IWebProxy#IsBypassed(System.Uri)">
            <summary>Задает заглушка IWebProxy.IsBypassed(Uri host)</summary>
        </member>
        <member name="T:System.Net.Fakes.StubIWebProxyScript">
            <summary>Тип заглушки System.Net.IWebProxyScript</summary>
        </member>
        <member name="M:System.Net.Fakes.StubIWebProxyScript.#ctor">
            <summary>Инициализирует новый экземпляр type StubIWebProxyScript</summary>
        </member>
        <member name="F:System.Net.Fakes.StubIWebProxyScript.Close">
            <summary>Задает stub IWebProxyScript.Close()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubIWebProxyScript.LoadUriStringType">
            <summary>Задает stub IWebProxyScript.Load(Uri scriptLocation, String script, Type helperType)</summary>
        </member>
        <member name="F:System.Net.Fakes.StubIWebProxyScript.RunStringString">
            <summary>Задает stub IWebProxyScript.Run(String url, String host)</summary>
        </member>
        <member name="M:System.Net.Fakes.StubIWebProxyScript.System#Net#IWebProxyScript#Close">
            <summary>Задает заглушка IWebProxyScript.Close()</summary>
        </member>
        <member name="M:System.Net.Fakes.StubIWebProxyScript.System#Net#IWebProxyScript#Load(System.Uri,System.String,System.Type)">
            <summary>Задает заглушка IWebProxyScript.Load(Uri scriptLocation, String script, Type helperType)</summary>
        </member>
        <member name="M:System.Net.Fakes.StubIWebProxyScript.System#Net#IWebProxyScript#Run(System.String,System.String)">
            <summary>Задает заглушка IWebProxyScript.Run(String url, String host)</summary>
        </member>
        <member name="T:System.Net.Fakes.StubIWebRequestCreate">
            <summary>Тип заглушки System.Net.IWebRequestCreate</summary>
        </member>
        <member name="M:System.Net.Fakes.StubIWebRequestCreate.#ctor">
            <summary>Инициализирует новый экземпляр type StubIWebRequestCreate</summary>
        </member>
        <member name="F:System.Net.Fakes.StubIWebRequestCreate.CreateUri">
            <summary>Задает stub IWebRequestCreate.Create(Uri uri)</summary>
        </member>
        <member name="M:System.Net.Fakes.StubIWebRequestCreate.System#Net#IWebRequestCreate#Create(System.Uri)">
            <summary>Задает заглушка IWebRequestCreate.Create(Uri uri)</summary>
        </member>
        <member name="T:System.Net.Fakes.StubNetworkCredential">
            <summary>Тип заглушки System.Net.NetworkCredential</summary>
        </member>
        <member name="M:System.Net.Fakes.StubNetworkCredential.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Fakes.StubNetworkCredential.#ctor(System.String,System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Fakes.StubNetworkCredential.#ctor(System.String,System.Security.SecureString)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Fakes.StubNetworkCredential.#ctor(System.String,System.String,System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Fakes.StubNetworkCredential.#ctor(System.String,System.Security.SecureString,System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Net.Fakes.StubNetworkCredential.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Net.Fakes.StubNetworkCredential.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubNetworkCredential</summary>
        </member>
        <member name="P:System.Net.Fakes.StubNetworkCredential.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Net.Fakes.StubNetworkCredential.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Net.Fakes.StubProtocolViolationException">
            <summary>Тип заглушки System.Net.ProtocolViolationException</summary>
        </member>
        <member name="M:System.Net.Fakes.StubProtocolViolationException.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Fakes.StubProtocolViolationException.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Fakes.StubProtocolViolationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Fakes.StubProtocolViolationException.AttachBackingFieldToHelpLink">
            <summary>Присоединение делегатов для эмуляции StubProtocolViolationException.HelpLink как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Net.Fakes.StubProtocolViolationException.AttachBackingFieldToSource">
            <summary>Присоединение делегатов для эмуляции StubProtocolViolationException.Source как свойства с резервным полем.</summary>
        </member>
        <member name="P:System.Net.Fakes.StubProtocolViolationException.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Net.Fakes.StubProtocolViolationException.Data">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubProtocolViolationException.DataGet">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="M:System.Net.Fakes.StubProtocolViolationException.GetBaseException">
            <summary>Задает заглушка Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubProtocolViolationException.GetBaseException01">
            <summary>Задает stub Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Net.Fakes.StubProtocolViolationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка ProtocolViolationException.GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext)</summary>
        </member>
        <member name="F:System.Net.Fakes.StubProtocolViolationException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub ProtocolViolationException.GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext)</summary>
        </member>
        <member name="P:System.Net.Fakes.StubProtocolViolationException.HelpLink">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubProtocolViolationException.HelpLinkGet">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubProtocolViolationException.HelpLinkSetString">
            <summary>Задает stub Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Net.Fakes.StubProtocolViolationException.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubProtocolViolationException</summary>
        </member>
        <member name="P:System.Net.Fakes.StubProtocolViolationException.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Net.Fakes.StubProtocolViolationException.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Net.Fakes.StubProtocolViolationException.Message">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubProtocolViolationException.MessageGet">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="P:System.Net.Fakes.StubProtocolViolationException.Source">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubProtocolViolationException.SourceGet">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubProtocolViolationException.SourceSetString">
            <summary>Задает stub Exception.set_Source(String value)</summary>
        </member>
        <member name="P:System.Net.Fakes.StubProtocolViolationException.StackTrace">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubProtocolViolationException.StackTraceGet">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Net.Fakes.StubProtocolViolationException.ToString">
            <summary>Задает заглушка Exception.ToString()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubProtocolViolationException.ToString01">
            <summary>Задает stub Exception.ToString()</summary>
        </member>
        <member name="T:System.Net.Fakes.StubSocketAddress">
            <summary>Тип заглушки System.Net.SocketAddress</summary>
        </member>
        <member name="M:System.Net.Fakes.StubSocketAddress.#ctor(System.Net.Sockets.AddressFamily)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Fakes.StubSocketAddress.#ctor(System.Net.Sockets.AddressFamily,System.Int32)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Net.Fakes.StubSocketAddress.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Net.Fakes.StubSocketAddress.Equals(System.Object)">
            <summary>Задает заглушка SocketAddress.Equals(Object comparand)</summary>
        </member>
        <member name="F:System.Net.Fakes.StubSocketAddress.EqualsObject">
            <summary>Задает stub SocketAddress.Equals(Object comparand)</summary>
        </member>
        <member name="M:System.Net.Fakes.StubSocketAddress.GetHashCode">
            <summary>Задает заглушка SocketAddress.GetHashCode()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubSocketAddress.GetHashCode01">
            <summary>Задает stub SocketAddress.GetHashCode()</summary>
        </member>
        <member name="M:System.Net.Fakes.StubSocketAddress.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubSocketAddress</summary>
        </member>
        <member name="P:System.Net.Fakes.StubSocketAddress.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Net.Fakes.StubSocketAddress.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.Net.Fakes.StubSocketAddress.ToString">
            <summary>Задает заглушка SocketAddress.ToString()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubSocketAddress.ToString01">
            <summary>Задает stub SocketAddress.ToString()</summary>
        </member>
        <member name="T:System.Net.Fakes.StubTransportContext">
            <summary>Тип заглушки System.Net.TransportContext</summary>
        </member>
        <member name="M:System.Net.Fakes.StubTransportContext.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Net.Fakes.StubTransportContext.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Net.Fakes.StubTransportContext.GetChannelBinding(System.Security.Authentication.ExtendedProtection.ChannelBindingKind)">
            <summary>Задает заглушка TransportContext.GetChannelBinding(ChannelBindingKind kind)</summary>
        </member>
        <member name="F:System.Net.Fakes.StubTransportContext.GetChannelBindingChannelBindingKind">
            <summary>Задает stub TransportContext.GetChannelBinding(ChannelBindingKind kind)</summary>
        </member>
        <member name="M:System.Net.Fakes.StubTransportContext.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubTransportContext</summary>
        </member>
        <member name="P:System.Net.Fakes.StubTransportContext.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Net.Fakes.StubTransportContext.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Net.Fakes.StubWebException">
            <summary>Тип заглушки System.Net.WebException</summary>
        </member>
        <member name="M:System.Net.Fakes.StubWebException.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Fakes.StubWebException.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Fakes.StubWebException.#ctor(System.String,System.Net.WebExceptionStatus)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Fakes.StubWebException.#ctor(System.String,System.Exception)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Fakes.StubWebException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Fakes.StubWebException.#ctor(System.String,System.Exception,System.Net.WebExceptionStatus,System.Net.WebResponse)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Fakes.StubWebException.AttachBackingFieldToHelpLink">
            <summary>Присоединение делегатов для эмуляции StubWebException.HelpLink как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Net.Fakes.StubWebException.AttachBackingFieldToSource">
            <summary>Присоединение делегатов для эмуляции StubWebException.Source как свойства с резервным полем.</summary>
        </member>
        <member name="P:System.Net.Fakes.StubWebException.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Net.Fakes.StubWebException.Data">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubWebException.DataGet">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="M:System.Net.Fakes.StubWebException.GetBaseException">
            <summary>Задает заглушка Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubWebException.GetBaseException01">
            <summary>Задает stub Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Net.Fakes.StubWebException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка WebException.GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext)</summary>
        </member>
        <member name="F:System.Net.Fakes.StubWebException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub WebException.GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext)</summary>
        </member>
        <member name="P:System.Net.Fakes.StubWebException.HelpLink">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubWebException.HelpLinkGet">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubWebException.HelpLinkSetString">
            <summary>Задает stub Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Net.Fakes.StubWebException.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubWebException</summary>
        </member>
        <member name="P:System.Net.Fakes.StubWebException.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Net.Fakes.StubWebException.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Net.Fakes.StubWebException.Message">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubWebException.MessageGet">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="P:System.Net.Fakes.StubWebException.Source">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubWebException.SourceGet">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubWebException.SourceSetString">
            <summary>Задает stub Exception.set_Source(String value)</summary>
        </member>
        <member name="P:System.Net.Fakes.StubWebException.StackTrace">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubWebException.StackTraceGet">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Net.Fakes.StubWebException.ToString">
            <summary>Задает заглушка Exception.ToString()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubWebException.ToString01">
            <summary>Задает stub Exception.ToString()</summary>
        </member>
        <member name="T:System.Net.Fakes.StubWebHeaderCollection">
            <summary>Тип заглушки System.Net.WebHeaderCollection</summary>
        </member>
        <member name="M:System.Net.Fakes.StubWebHeaderCollection.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Fakes.StubWebHeaderCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Fakes.StubWebHeaderCollection.Add(System.String,System.String)">
            <summary>Задает заглушка WebHeaderCollection.Add(String name, String value)</summary>
        </member>
        <member name="F:System.Net.Fakes.StubWebHeaderCollection.AddStringString">
            <summary>Задает stub WebHeaderCollection.Add(String name, String value)</summary>
        </member>
        <member name="P:System.Net.Fakes.StubWebHeaderCollection.AllKeys">
            <summary>Задает stub WebHeaderCollection.get_AllKeys()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubWebHeaderCollection.AllKeysGet">
            <summary>Задает stub WebHeaderCollection.get_AllKeys()</summary>
        </member>
        <member name="P:System.Net.Fakes.StubWebHeaderCollection.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Net.Fakes.StubWebHeaderCollection.Clear">
            <summary>Задает заглушка WebHeaderCollection.Clear()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubWebHeaderCollection.Clear01">
            <summary>Задает stub WebHeaderCollection.Clear()</summary>
        </member>
        <member name="P:System.Net.Fakes.StubWebHeaderCollection.Count">
            <summary>Задает stub WebHeaderCollection.get_Count()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubWebHeaderCollection.CountGet">
            <summary>Задает stub WebHeaderCollection.get_Count()</summary>
        </member>
        <member name="M:System.Net.Fakes.StubWebHeaderCollection.Get(System.String)">
            <summary>Задает заглушка WebHeaderCollection.Get(String name)</summary>
        </member>
        <member name="M:System.Net.Fakes.StubWebHeaderCollection.Get(System.Int32)">
            <summary>Задает заглушка WebHeaderCollection.Get(Int32 index)</summary>
        </member>
        <member name="M:System.Net.Fakes.StubWebHeaderCollection.GetEnumerator">
            <summary>Задает заглушка WebHeaderCollection.GetEnumerator()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubWebHeaderCollection.GetEnumerator01">
            <summary>Задает stub WebHeaderCollection.GetEnumerator()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubWebHeaderCollection.GetInt32">
            <summary>Задает stub WebHeaderCollection.Get(Int32 index)</summary>
        </member>
        <member name="M:System.Net.Fakes.StubWebHeaderCollection.GetKey(System.Int32)">
            <summary>Задает заглушка WebHeaderCollection.GetKey(Int32 index)</summary>
        </member>
        <member name="F:System.Net.Fakes.StubWebHeaderCollection.GetKeyInt32">
            <summary>Задает stub WebHeaderCollection.GetKey(Int32 index)</summary>
        </member>
        <member name="M:System.Net.Fakes.StubWebHeaderCollection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка WebHeaderCollection.GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext)</summary>
        </member>
        <member name="F:System.Net.Fakes.StubWebHeaderCollection.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub WebHeaderCollection.GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext)</summary>
        </member>
        <member name="F:System.Net.Fakes.StubWebHeaderCollection.GetString">
            <summary>Задает stub WebHeaderCollection.Get(String name)</summary>
        </member>
        <member name="M:System.Net.Fakes.StubWebHeaderCollection.GetValues(System.String)">
            <summary>Задает заглушка WebHeaderCollection.GetValues(String header)</summary>
        </member>
        <member name="M:System.Net.Fakes.StubWebHeaderCollection.GetValues(System.Int32)">
            <summary>Задает заглушка WebHeaderCollection.GetValues(Int32 index)</summary>
        </member>
        <member name="F:System.Net.Fakes.StubWebHeaderCollection.GetValuesInt32">
            <summary>Задает stub WebHeaderCollection.GetValues(Int32 index)</summary>
        </member>
        <member name="F:System.Net.Fakes.StubWebHeaderCollection.GetValuesString">
            <summary>Задает stub WebHeaderCollection.GetValues(String header)</summary>
        </member>
        <member name="M:System.Net.Fakes.StubWebHeaderCollection.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubWebHeaderCollection</summary>
        </member>
        <member name="P:System.Net.Fakes.StubWebHeaderCollection.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Net.Fakes.StubWebHeaderCollection.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Net.Fakes.StubWebHeaderCollection.Keys">
            <summary>Задает stub WebHeaderCollection.get_Keys()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubWebHeaderCollection.KeysGet">
            <summary>Задает stub WebHeaderCollection.get_Keys()</summary>
        </member>
        <member name="M:System.Net.Fakes.StubWebHeaderCollection.OnDeserialization(System.Object)">
            <summary>Задает заглушка WebHeaderCollection.OnDeserialization(Object sender)</summary>
        </member>
        <member name="F:System.Net.Fakes.StubWebHeaderCollection.OnDeserializationObject">
            <summary>Задает stub WebHeaderCollection.OnDeserialization(Object sender)</summary>
        </member>
        <member name="M:System.Net.Fakes.StubWebHeaderCollection.Remove(System.String)">
            <summary>Задает заглушка WebHeaderCollection.Remove(String name)</summary>
        </member>
        <member name="F:System.Net.Fakes.StubWebHeaderCollection.RemoveString">
            <summary>Задает stub WebHeaderCollection.Remove(String name)</summary>
        </member>
        <member name="M:System.Net.Fakes.StubWebHeaderCollection.Set(System.String,System.String)">
            <summary>Задает заглушка WebHeaderCollection.Set(String name, String value)</summary>
        </member>
        <member name="F:System.Net.Fakes.StubWebHeaderCollection.SetStringString">
            <summary>Задает stub WebHeaderCollection.Set(String name, String value)</summary>
        </member>
        <member name="M:System.Net.Fakes.StubWebHeaderCollection.ToString">
            <summary>Задает заглушка WebHeaderCollection.ToString()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubWebHeaderCollection.ToString01">
            <summary>Задает stub WebHeaderCollection.ToString()</summary>
        </member>
        <member name="T:System.Net.Fakes.StubWebProxy">
            <summary>Тип заглушки System.Net.WebProxy</summary>
        </member>
        <member name="M:System.Net.Fakes.StubWebProxy.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Fakes.StubWebProxy.#ctor(System.Uri)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Fakes.StubWebProxy.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Fakes.StubWebProxy.#ctor(System.Uri,System.Boolean)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Fakes.StubWebProxy.#ctor(System.String,System.Boolean)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Fakes.StubWebProxy.#ctor(System.String,System.Int32)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Fakes.StubWebProxy.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Fakes.StubWebProxy.#ctor(System.Uri,System.Boolean,System.String[])">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Fakes.StubWebProxy.#ctor(System.String,System.Boolean,System.String[])">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Fakes.StubWebProxy.#ctor(System.Uri,System.Boolean,System.String[],System.Net.ICredentials)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Fakes.StubWebProxy.#ctor(System.String,System.Boolean,System.String[],System.Net.ICredentials)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Net.Fakes.StubWebProxy.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Net.Fakes.StubWebProxy.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка WebProxy.GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext)</summary>
        </member>
        <member name="F:System.Net.Fakes.StubWebProxy.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub WebProxy.GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext)</summary>
        </member>
        <member name="M:System.Net.Fakes.StubWebProxy.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubWebProxy</summary>
        </member>
        <member name="P:System.Net.Fakes.StubWebProxy.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Net.Fakes.StubWebProxy.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Net.Fakes.StubWebResponse">
            <summary>Тип заглушки System.Net.WebResponse</summary>
        </member>
        <member name="M:System.Net.Fakes.StubWebResponse.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Fakes.StubWebResponse.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Fakes.StubWebResponse.AttachBackingFieldToContentLength">
            <summary>Присоединение делегатов для эмуляции StubWebResponse.ContentLength как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Net.Fakes.StubWebResponse.AttachBackingFieldToContentType">
            <summary>Присоединение делегатов для эмуляции StubWebResponse.ContentType как свойства с резервным полем.</summary>
        </member>
        <member name="P:System.Net.Fakes.StubWebResponse.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Net.Fakes.StubWebResponse.Close">
            <summary>Задает заглушка WebResponse.Close()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubWebResponse.Close01">
            <summary>Задает stub WebResponse.Close()</summary>
        </member>
        <member name="P:System.Net.Fakes.StubWebResponse.ContentLength">
            <summary>Задает stub WebResponse.get_ContentLength()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubWebResponse.ContentLengthGet">
            <summary>Задает stub WebResponse.get_ContentLength()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubWebResponse.ContentLengthSetInt64">
            <summary>Задает stub WebResponse.set_ContentLength(Int64 value)</summary>
        </member>
        <member name="P:System.Net.Fakes.StubWebResponse.ContentType">
            <summary>Задает stub WebResponse.get_ContentType()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubWebResponse.ContentTypeGet">
            <summary>Задает stub WebResponse.get_ContentType()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubWebResponse.ContentTypeSetString">
            <summary>Задает stub WebResponse.set_ContentType(String value)</summary>
        </member>
        <member name="M:System.Net.Fakes.StubWebResponse.Dispose(System.Boolean)">
            <summary>Задает заглушка WebResponse.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.Net.Fakes.StubWebResponse.DisposeBoolean">
            <summary>Задает stub WebResponse.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:System.Net.Fakes.StubWebResponse.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка WebResponse.GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext)</summary>
        </member>
        <member name="F:System.Net.Fakes.StubWebResponse.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub WebResponse.GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext)</summary>
        </member>
        <member name="M:System.Net.Fakes.StubWebResponse.GetResponseStream">
            <summary>Задает заглушка WebResponse.GetResponseStream()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubWebResponse.GetResponseStream01">
            <summary>Задает stub WebResponse.GetResponseStream()</summary>
        </member>
        <member name="P:System.Net.Fakes.StubWebResponse.Headers">
            <summary>Задает stub WebResponse.get_Headers()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubWebResponse.HeadersGet">
            <summary>Задает stub WebResponse.get_Headers()</summary>
        </member>
        <member name="M:System.Net.Fakes.StubWebResponse.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubWebResponse</summary>
        </member>
        <member name="P:System.Net.Fakes.StubWebResponse.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Net.Fakes.StubWebResponse.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Net.Fakes.StubWebResponse.IsFromCache">
            <summary>Задает stub WebResponse.get_IsFromCache()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubWebResponse.IsFromCacheGet">
            <summary>Задает stub WebResponse.get_IsFromCache()</summary>
        </member>
        <member name="P:System.Net.Fakes.StubWebResponse.IsMutuallyAuthenticated">
            <summary>Задает stub WebResponse.get_IsMutuallyAuthenticated()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubWebResponse.IsMutuallyAuthenticatedGet">
            <summary>Задает stub WebResponse.get_IsMutuallyAuthenticated()</summary>
        </member>
        <member name="P:System.Net.Fakes.StubWebResponse.ResponseUri">
            <summary>Задает stub WebResponse.get_ResponseUri()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubWebResponse.ResponseUriGet">
            <summary>Задает stub WebResponse.get_ResponseUri()</summary>
        </member>
        <member name="P:System.Net.Fakes.StubWebResponse.SupportsHeaders">
            <summary>Задает stub WebResponse.get_SupportsHeaders()</summary>
        </member>
        <member name="F:System.Net.Fakes.StubWebResponse.SupportsHeadersGet">
            <summary>Задает stub WebResponse.get_SupportsHeaders()</summary>
        </member>
        <member name="T:System.Net.Mail.Fakes.StubAlternateView">
            <summary>Тип заглушки System.Net.Mail.AlternateView</summary>
        </member>
        <member name="M:System.Net.Mail.Fakes.StubAlternateView.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Mail.Fakes.StubAlternateView.#ctor(System.IO.Stream)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Mail.Fakes.StubAlternateView.#ctor(System.String,System.Net.Mime.ContentType)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Mail.Fakes.StubAlternateView.#ctor(System.String,System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Mail.Fakes.StubAlternateView.#ctor(System.IO.Stream,System.Net.Mime.ContentType)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Mail.Fakes.StubAlternateView.#ctor(System.IO.Stream,System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Net.Mail.Fakes.StubAlternateView.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Net.Mail.Fakes.StubAlternateView.Dispose(System.Boolean)">
            <summary>Задает заглушка AlternateView.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.Net.Mail.Fakes.StubAlternateView.DisposeBoolean">
            <summary>Задает stub AlternateView.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:System.Net.Mail.Fakes.StubAlternateView.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubAlternateView</summary>
        </member>
        <member name="P:System.Net.Mail.Fakes.StubAlternateView.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Net.Mail.Fakes.StubAlternateView.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Net.Mail.Fakes.StubAttachment">
            <summary>Тип заглушки System.Net.Mail.Attachment</summary>
        </member>
        <member name="M:System.Net.Mail.Fakes.StubAttachment.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Mail.Fakes.StubAttachment.#ctor(System.String,System.Net.Mime.ContentType)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Mail.Fakes.StubAttachment.#ctor(System.String,System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Mail.Fakes.StubAttachment.#ctor(System.IO.Stream,System.Net.Mime.ContentType)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Mail.Fakes.StubAttachment.#ctor(System.IO.Stream,System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Mail.Fakes.StubAttachment.#ctor(System.IO.Stream,System.String,System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Net.Mail.Fakes.StubAttachment.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Net.Mail.Fakes.StubAttachment.Dispose(System.Boolean)">
            <summary>Задает заглушка AttachmentBase.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.Net.Mail.Fakes.StubAttachment.DisposeBoolean">
            <summary>Задает stub AttachmentBase.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:System.Net.Mail.Fakes.StubAttachment.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubAttachment</summary>
        </member>
        <member name="P:System.Net.Mail.Fakes.StubAttachment.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Net.Mail.Fakes.StubAttachment.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Net.Mail.Fakes.StubAttachmentBase">
            <summary>Тип заглушки System.Net.Mail.AttachmentBase</summary>
        </member>
        <member name="M:System.Net.Mail.Fakes.StubAttachmentBase.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Mail.Fakes.StubAttachmentBase.#ctor(System.IO.Stream)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Mail.Fakes.StubAttachmentBase.#ctor(System.String,System.Net.Mime.ContentType)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Mail.Fakes.StubAttachmentBase.#ctor(System.String,System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Mail.Fakes.StubAttachmentBase.#ctor(System.IO.Stream,System.Net.Mime.ContentType)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Mail.Fakes.StubAttachmentBase.#ctor(System.IO.Stream,System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Net.Mail.Fakes.StubAttachmentBase.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Net.Mail.Fakes.StubAttachmentBase.Dispose(System.Boolean)">
            <summary>Задает заглушка AttachmentBase.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.Net.Mail.Fakes.StubAttachmentBase.DisposeBoolean">
            <summary>Задает stub AttachmentBase.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:System.Net.Mail.Fakes.StubAttachmentBase.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubAttachmentBase</summary>
        </member>
        <member name="P:System.Net.Mail.Fakes.StubAttachmentBase.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Net.Mail.Fakes.StubAttachmentBase.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Net.Mail.Fakes.StubLinkedResource">
            <summary>Тип заглушки System.Net.Mail.LinkedResource</summary>
        </member>
        <member name="M:System.Net.Mail.Fakes.StubLinkedResource.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Mail.Fakes.StubLinkedResource.#ctor(System.IO.Stream)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Mail.Fakes.StubLinkedResource.#ctor(System.String,System.Net.Mime.ContentType)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Mail.Fakes.StubLinkedResource.#ctor(System.String,System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Mail.Fakes.StubLinkedResource.#ctor(System.IO.Stream,System.Net.Mime.ContentType)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Mail.Fakes.StubLinkedResource.#ctor(System.IO.Stream,System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Net.Mail.Fakes.StubLinkedResource.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Net.Mail.Fakes.StubLinkedResource.Dispose(System.Boolean)">
            <summary>Задает заглушка AttachmentBase.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.Net.Mail.Fakes.StubLinkedResource.DisposeBoolean">
            <summary>Задает stub AttachmentBase.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:System.Net.Mail.Fakes.StubLinkedResource.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubLinkedResource</summary>
        </member>
        <member name="P:System.Net.Mail.Fakes.StubLinkedResource.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Net.Mail.Fakes.StubLinkedResource.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Net.Mail.Fakes.StubMailAddress">
            <summary>Тип заглушки System.Net.Mail.MailAddress</summary>
        </member>
        <member name="M:System.Net.Mail.Fakes.StubMailAddress.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Mail.Fakes.StubMailAddress.#ctor(System.String,System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Mail.Fakes.StubMailAddress.#ctor(System.String,System.String,System.Text.Encoding)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Net.Mail.Fakes.StubMailAddress.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Net.Mail.Fakes.StubMailAddress.Equals(System.Object)">
            <summary>Задает заглушка MailAddress.Equals(Object value)</summary>
        </member>
        <member name="F:System.Net.Mail.Fakes.StubMailAddress.EqualsObject">
            <summary>Задает stub MailAddress.Equals(Object value)</summary>
        </member>
        <member name="M:System.Net.Mail.Fakes.StubMailAddress.GetHashCode">
            <summary>Задает заглушка MailAddress.GetHashCode()</summary>
        </member>
        <member name="F:System.Net.Mail.Fakes.StubMailAddress.GetHashCode01">
            <summary>Задает stub MailAddress.GetHashCode()</summary>
        </member>
        <member name="M:System.Net.Mail.Fakes.StubMailAddress.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubMailAddress</summary>
        </member>
        <member name="P:System.Net.Mail.Fakes.StubMailAddress.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Net.Mail.Fakes.StubMailAddress.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.Net.Mail.Fakes.StubMailAddress.ToString">
            <summary>Задает заглушка MailAddress.ToString()</summary>
        </member>
        <member name="F:System.Net.Mail.Fakes.StubMailAddress.ToString01">
            <summary>Задает stub MailAddress.ToString()</summary>
        </member>
        <member name="T:System.Net.Mail.Fakes.StubMailAddressCollection">
            <summary>Тип заглушки System.Net.Mail.MailAddressCollection</summary>
        </member>
        <member name="M:System.Net.Mail.Fakes.StubMailAddressCollection.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Net.Mail.Fakes.StubMailAddressCollection.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Net.Mail.Fakes.StubMailAddressCollection.ClearItems">
            <summary>Задает заглушка Collection`1.ClearItems()</summary>
        </member>
        <member name="F:System.Net.Mail.Fakes.StubMailAddressCollection.ClearItems01">
            <summary>Задает stub Collection`1.ClearItems()</summary>
        </member>
        <member name="M:System.Net.Mail.Fakes.StubMailAddressCollection.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubMailAddressCollection</summary>
        </member>
        <member name="M:System.Net.Mail.Fakes.StubMailAddressCollection.InsertItem(System.Int32,System.Net.Mail.MailAddress)">
            <summary>Задает заглушка MailAddressCollection.InsertItem(Int32 index, MailAddress item)</summary>
        </member>
        <member name="F:System.Net.Mail.Fakes.StubMailAddressCollection.InsertItemInt32MailAddress">
            <summary>Задает stub MailAddressCollection.InsertItem(Int32 index, MailAddress item)</summary>
        </member>
        <member name="P:System.Net.Mail.Fakes.StubMailAddressCollection.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Net.Mail.Fakes.StubMailAddressCollection.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.Net.Mail.Fakes.StubMailAddressCollection.RemoveItem(System.Int32)">
            <summary>Задает заглушка Collection`1.RemoveItem(Int32 index)</summary>
        </member>
        <member name="F:System.Net.Mail.Fakes.StubMailAddressCollection.RemoveItemInt32">
            <summary>Задает stub Collection`1.RemoveItem(Int32 index)</summary>
        </member>
        <member name="M:System.Net.Mail.Fakes.StubMailAddressCollection.SetItem(System.Int32,System.Net.Mail.MailAddress)">
            <summary>Задает заглушка MailAddressCollection.SetItem(Int32 index, MailAddress item)</summary>
        </member>
        <member name="F:System.Net.Mail.Fakes.StubMailAddressCollection.SetItemInt32MailAddress">
            <summary>Задает stub MailAddressCollection.SetItem(Int32 index, MailAddress item)</summary>
        </member>
        <member name="M:System.Net.Mail.Fakes.StubMailAddressCollection.ToString">
            <summary>Задает заглушка MailAddressCollection.ToString()</summary>
        </member>
        <member name="F:System.Net.Mail.Fakes.StubMailAddressCollection.ToString01">
            <summary>Задает stub MailAddressCollection.ToString()</summary>
        </member>
        <member name="T:System.Net.Mail.Fakes.StubMailMessage">
            <summary>Тип заглушки System.Net.Mail.MailMessage</summary>
        </member>
        <member name="M:System.Net.Mail.Fakes.StubMailMessage.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Mail.Fakes.StubMailMessage.#ctor(System.Net.Mail.MailAddress,System.Net.Mail.MailAddress)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Mail.Fakes.StubMailMessage.#ctor(System.String,System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Mail.Fakes.StubMailMessage.#ctor(System.String,System.String,System.String,System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Net.Mail.Fakes.StubMailMessage.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Net.Mail.Fakes.StubMailMessage.Dispose(System.Boolean)">
            <summary>Задает заглушка MailMessage.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.Net.Mail.Fakes.StubMailMessage.DisposeBoolean">
            <summary>Задает stub MailMessage.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:System.Net.Mail.Fakes.StubMailMessage.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubMailMessage</summary>
        </member>
        <member name="P:System.Net.Mail.Fakes.StubMailMessage.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Net.Mail.Fakes.StubMailMessage.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Net.Mail.Fakes.StubSmtpClient">
            <summary>Тип заглушки System.Net.Mail.SmtpClient</summary>
        </member>
        <member name="M:System.Net.Mail.Fakes.StubSmtpClient.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Mail.Fakes.StubSmtpClient.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Mail.Fakes.StubSmtpClient.#ctor(System.String,System.Int32)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Net.Mail.Fakes.StubSmtpClient.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Net.Mail.Fakes.StubSmtpClient.Dispose(System.Boolean)">
            <summary>Задает заглушка SmtpClient.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.Net.Mail.Fakes.StubSmtpClient.DisposeBoolean">
            <summary>Задает stub SmtpClient.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:System.Net.Mail.Fakes.StubSmtpClient.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubSmtpClient</summary>
        </member>
        <member name="P:System.Net.Mail.Fakes.StubSmtpClient.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Net.Mail.Fakes.StubSmtpClient.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Net.Mail.Fakes.StubSmtpException">
            <summary>Тип заглушки System.Net.Mail.SmtpException</summary>
        </member>
        <member name="M:System.Net.Mail.Fakes.StubSmtpException.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Mail.Fakes.StubSmtpException.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Mail.Fakes.StubSmtpException.#ctor(System.Net.Mail.SmtpStatusCode)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Mail.Fakes.StubSmtpException.#ctor(System.String,System.Exception)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Mail.Fakes.StubSmtpException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Mail.Fakes.StubSmtpException.#ctor(System.Net.Mail.SmtpStatusCode,System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Mail.Fakes.StubSmtpException.AttachBackingFieldToHelpLink">
            <summary>Присоединение делегатов для эмуляции StubSmtpException.HelpLink как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Net.Mail.Fakes.StubSmtpException.AttachBackingFieldToSource">
            <summary>Присоединение делегатов для эмуляции StubSmtpException.Source как свойства с резервным полем.</summary>
        </member>
        <member name="P:System.Net.Mail.Fakes.StubSmtpException.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Net.Mail.Fakes.StubSmtpException.Data">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="F:System.Net.Mail.Fakes.StubSmtpException.DataGet">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="M:System.Net.Mail.Fakes.StubSmtpException.GetBaseException">
            <summary>Задает заглушка Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Net.Mail.Fakes.StubSmtpException.GetBaseException01">
            <summary>Задает stub Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Net.Mail.Fakes.StubSmtpException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка SmtpException.GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext)</summary>
        </member>
        <member name="F:System.Net.Mail.Fakes.StubSmtpException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub SmtpException.GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext)</summary>
        </member>
        <member name="P:System.Net.Mail.Fakes.StubSmtpException.HelpLink">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Net.Mail.Fakes.StubSmtpException.HelpLinkGet">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Net.Mail.Fakes.StubSmtpException.HelpLinkSetString">
            <summary>Задает stub Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Net.Mail.Fakes.StubSmtpException.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubSmtpException</summary>
        </member>
        <member name="P:System.Net.Mail.Fakes.StubSmtpException.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Net.Mail.Fakes.StubSmtpException.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Net.Mail.Fakes.StubSmtpException.Message">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="F:System.Net.Mail.Fakes.StubSmtpException.MessageGet">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="P:System.Net.Mail.Fakes.StubSmtpException.Source">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.Net.Mail.Fakes.StubSmtpException.SourceGet">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.Net.Mail.Fakes.StubSmtpException.SourceSetString">
            <summary>Задает stub Exception.set_Source(String value)</summary>
        </member>
        <member name="P:System.Net.Mail.Fakes.StubSmtpException.StackTrace">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="F:System.Net.Mail.Fakes.StubSmtpException.StackTraceGet">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Net.Mail.Fakes.StubSmtpException.ToString">
            <summary>Задает заглушка Exception.ToString()</summary>
        </member>
        <member name="F:System.Net.Mail.Fakes.StubSmtpException.ToString01">
            <summary>Задает stub Exception.ToString()</summary>
        </member>
        <member name="T:System.Net.Mail.Fakes.StubSmtpFailedRecipientException">
            <summary>Тип заглушки System.Net.Mail.SmtpFailedRecipientException</summary>
        </member>
        <member name="M:System.Net.Mail.Fakes.StubSmtpFailedRecipientException.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Mail.Fakes.StubSmtpFailedRecipientException.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Mail.Fakes.StubSmtpFailedRecipientException.#ctor(System.Net.Mail.SmtpStatusCode,System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Mail.Fakes.StubSmtpFailedRecipientException.#ctor(System.String,System.Exception)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Mail.Fakes.StubSmtpFailedRecipientException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Mail.Fakes.StubSmtpFailedRecipientException.#ctor(System.Net.Mail.SmtpStatusCode,System.String,System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Mail.Fakes.StubSmtpFailedRecipientException.#ctor(System.String,System.String,System.Exception)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Mail.Fakes.StubSmtpFailedRecipientException.AttachBackingFieldToHelpLink">
            <summary>Присоединение делегатов для эмуляции StubSmtpFailedRecipientException.HelpLink как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Net.Mail.Fakes.StubSmtpFailedRecipientException.AttachBackingFieldToSource">
            <summary>Присоединение делегатов для эмуляции StubSmtpFailedRecipientException.Source как свойства с резервным полем.</summary>
        </member>
        <member name="P:System.Net.Mail.Fakes.StubSmtpFailedRecipientException.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Net.Mail.Fakes.StubSmtpFailedRecipientException.Data">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="F:System.Net.Mail.Fakes.StubSmtpFailedRecipientException.DataGet">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="M:System.Net.Mail.Fakes.StubSmtpFailedRecipientException.GetBaseException">
            <summary>Задает заглушка Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Net.Mail.Fakes.StubSmtpFailedRecipientException.GetBaseException01">
            <summary>Задает stub Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Net.Mail.Fakes.StubSmtpFailedRecipientException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка SmtpFailedRecipientException.GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext)</summary>
        </member>
        <member name="F:System.Net.Mail.Fakes.StubSmtpFailedRecipientException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub SmtpFailedRecipientException.GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext)</summary>
        </member>
        <member name="P:System.Net.Mail.Fakes.StubSmtpFailedRecipientException.HelpLink">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Net.Mail.Fakes.StubSmtpFailedRecipientException.HelpLinkGet">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Net.Mail.Fakes.StubSmtpFailedRecipientException.HelpLinkSetString">
            <summary>Задает stub Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Net.Mail.Fakes.StubSmtpFailedRecipientException.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubSmtpFailedRecipientException</summary>
        </member>
        <member name="P:System.Net.Mail.Fakes.StubSmtpFailedRecipientException.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Net.Mail.Fakes.StubSmtpFailedRecipientException.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Net.Mail.Fakes.StubSmtpFailedRecipientException.Message">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="F:System.Net.Mail.Fakes.StubSmtpFailedRecipientException.MessageGet">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="P:System.Net.Mail.Fakes.StubSmtpFailedRecipientException.Source">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.Net.Mail.Fakes.StubSmtpFailedRecipientException.SourceGet">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.Net.Mail.Fakes.StubSmtpFailedRecipientException.SourceSetString">
            <summary>Задает stub Exception.set_Source(String value)</summary>
        </member>
        <member name="P:System.Net.Mail.Fakes.StubSmtpFailedRecipientException.StackTrace">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="F:System.Net.Mail.Fakes.StubSmtpFailedRecipientException.StackTraceGet">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Net.Mail.Fakes.StubSmtpFailedRecipientException.ToString">
            <summary>Задает заглушка Exception.ToString()</summary>
        </member>
        <member name="F:System.Net.Mail.Fakes.StubSmtpFailedRecipientException.ToString01">
            <summary>Задает stub Exception.ToString()</summary>
        </member>
        <member name="T:System.Net.Mail.Fakes.StubSmtpFailedRecipientsException">
            <summary>Тип заглушки System.Net.Mail.SmtpFailedRecipientsException</summary>
        </member>
        <member name="M:System.Net.Mail.Fakes.StubSmtpFailedRecipientsException.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Mail.Fakes.StubSmtpFailedRecipientsException.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Mail.Fakes.StubSmtpFailedRecipientsException.#ctor(System.String,System.Net.Mail.SmtpFailedRecipientException[])">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Mail.Fakes.StubSmtpFailedRecipientsException.#ctor(System.String,System.Exception)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Mail.Fakes.StubSmtpFailedRecipientsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Mail.Fakes.StubSmtpFailedRecipientsException.AttachBackingFieldToHelpLink">
            <summary>Присоединение делегатов для эмуляции StubSmtpFailedRecipientsException.HelpLink как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Net.Mail.Fakes.StubSmtpFailedRecipientsException.AttachBackingFieldToSource">
            <summary>Присоединение делегатов для эмуляции StubSmtpFailedRecipientsException.Source как свойства с резервным полем.</summary>
        </member>
        <member name="P:System.Net.Mail.Fakes.StubSmtpFailedRecipientsException.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Net.Mail.Fakes.StubSmtpFailedRecipientsException.Data">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="F:System.Net.Mail.Fakes.StubSmtpFailedRecipientsException.DataGet">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="M:System.Net.Mail.Fakes.StubSmtpFailedRecipientsException.GetBaseException">
            <summary>Задает заглушка Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Net.Mail.Fakes.StubSmtpFailedRecipientsException.GetBaseException01">
            <summary>Задает stub Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Net.Mail.Fakes.StubSmtpFailedRecipientsException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка SmtpFailedRecipientsException.GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext)</summary>
        </member>
        <member name="F:System.Net.Mail.Fakes.StubSmtpFailedRecipientsException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub SmtpFailedRecipientsException.GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext)</summary>
        </member>
        <member name="P:System.Net.Mail.Fakes.StubSmtpFailedRecipientsException.HelpLink">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Net.Mail.Fakes.StubSmtpFailedRecipientsException.HelpLinkGet">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Net.Mail.Fakes.StubSmtpFailedRecipientsException.HelpLinkSetString">
            <summary>Задает stub Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Net.Mail.Fakes.StubSmtpFailedRecipientsException.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubSmtpFailedRecipientsException</summary>
        </member>
        <member name="P:System.Net.Mail.Fakes.StubSmtpFailedRecipientsException.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Net.Mail.Fakes.StubSmtpFailedRecipientsException.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Net.Mail.Fakes.StubSmtpFailedRecipientsException.Message">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="F:System.Net.Mail.Fakes.StubSmtpFailedRecipientsException.MessageGet">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="P:System.Net.Mail.Fakes.StubSmtpFailedRecipientsException.Source">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.Net.Mail.Fakes.StubSmtpFailedRecipientsException.SourceGet">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.Net.Mail.Fakes.StubSmtpFailedRecipientsException.SourceSetString">
            <summary>Задает stub Exception.set_Source(String value)</summary>
        </member>
        <member name="P:System.Net.Mail.Fakes.StubSmtpFailedRecipientsException.StackTrace">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="F:System.Net.Mail.Fakes.StubSmtpFailedRecipientsException.StackTraceGet">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Net.Mail.Fakes.StubSmtpFailedRecipientsException.ToString">
            <summary>Задает заглушка Exception.ToString()</summary>
        </member>
        <member name="F:System.Net.Mail.Fakes.StubSmtpFailedRecipientsException.ToString01">
            <summary>Задает stub Exception.ToString()</summary>
        </member>
        <member name="T:System.Net.Mime.Fakes.StubContentDisposition">
            <summary>Тип заглушки System.Net.Mime.ContentDisposition</summary>
        </member>
        <member name="M:System.Net.Mime.Fakes.StubContentDisposition.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Mime.Fakes.StubContentDisposition.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Net.Mime.Fakes.StubContentDisposition.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Net.Mime.Fakes.StubContentDisposition.Equals(System.Object)">
            <summary>Задает заглушка ContentDisposition.Equals(Object rparam)</summary>
        </member>
        <member name="F:System.Net.Mime.Fakes.StubContentDisposition.EqualsObject">
            <summary>Задает stub ContentDisposition.Equals(Object rparam)</summary>
        </member>
        <member name="M:System.Net.Mime.Fakes.StubContentDisposition.GetHashCode">
            <summary>Задает заглушка ContentDisposition.GetHashCode()</summary>
        </member>
        <member name="F:System.Net.Mime.Fakes.StubContentDisposition.GetHashCode01">
            <summary>Задает stub ContentDisposition.GetHashCode()</summary>
        </member>
        <member name="M:System.Net.Mime.Fakes.StubContentDisposition.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubContentDisposition</summary>
        </member>
        <member name="P:System.Net.Mime.Fakes.StubContentDisposition.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Net.Mime.Fakes.StubContentDisposition.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.Net.Mime.Fakes.StubContentDisposition.ToString">
            <summary>Задает заглушка ContentDisposition.ToString()</summary>
        </member>
        <member name="F:System.Net.Mime.Fakes.StubContentDisposition.ToString01">
            <summary>Задает stub ContentDisposition.ToString()</summary>
        </member>
        <member name="T:System.Net.Mime.Fakes.StubContentType">
            <summary>Тип заглушки System.Net.Mime.ContentType</summary>
        </member>
        <member name="M:System.Net.Mime.Fakes.StubContentType.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Mime.Fakes.StubContentType.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Net.Mime.Fakes.StubContentType.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Net.Mime.Fakes.StubContentType.Equals(System.Object)">
            <summary>Задает заглушка ContentType.Equals(Object rparam)</summary>
        </member>
        <member name="F:System.Net.Mime.Fakes.StubContentType.EqualsObject">
            <summary>Задает stub ContentType.Equals(Object rparam)</summary>
        </member>
        <member name="M:System.Net.Mime.Fakes.StubContentType.GetHashCode">
            <summary>Задает заглушка ContentType.GetHashCode()</summary>
        </member>
        <member name="F:System.Net.Mime.Fakes.StubContentType.GetHashCode01">
            <summary>Задает stub ContentType.GetHashCode()</summary>
        </member>
        <member name="M:System.Net.Mime.Fakes.StubContentType.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubContentType</summary>
        </member>
        <member name="P:System.Net.Mime.Fakes.StubContentType.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Net.Mime.Fakes.StubContentType.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.Net.Mime.Fakes.StubContentType.ToString">
            <summary>Задает заглушка ContentType.ToString()</summary>
        </member>
        <member name="F:System.Net.Mime.Fakes.StubContentType.ToString01">
            <summary>Задает stub ContentType.ToString()</summary>
        </member>
        <member name="T:System.Net.NetworkInformation.Fakes.StubGatewayIPAddressInformation">
            <summary>Тип заглушки System.Net.NetworkInformation.GatewayIPAddressInformation</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubGatewayIPAddressInformation.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubGatewayIPAddressInformation.Address">
            <summary>Задает stub GatewayIPAddressInformation.get_Address()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubGatewayIPAddressInformation.AddressGet">
            <summary>Задает stub GatewayIPAddressInformation.get_Address()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubGatewayIPAddressInformation.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubGatewayIPAddressInformation.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubGatewayIPAddressInformation</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubGatewayIPAddressInformation.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubGatewayIPAddressInformation.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Net.NetworkInformation.Fakes.StubGatewayIPAddressInformationCollection">
            <summary>Тип заглушки System.Net.NetworkInformation.GatewayIPAddressInformationCollection</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubGatewayIPAddressInformationCollection.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubGatewayIPAddressInformationCollection.Add(System.Net.NetworkInformation.GatewayIPAddressInformation)">
            <summary>Задает заглушка GatewayIPAddressInformationCollection.Add(GatewayIPAddressInformation address)</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubGatewayIPAddressInformationCollection.AddGatewayIPAddressInformation">
            <summary>Задает stub GatewayIPAddressInformationCollection.Add(GatewayIPAddressInformation address)</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubGatewayIPAddressInformationCollection.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubGatewayIPAddressInformationCollection.Clear">
            <summary>Задает заглушка GatewayIPAddressInformationCollection.Clear()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubGatewayIPAddressInformationCollection.Clear01">
            <summary>Задает stub GatewayIPAddressInformationCollection.Clear()</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubGatewayIPAddressInformationCollection.Contains(System.Net.NetworkInformation.GatewayIPAddressInformation)">
            <summary>Задает заглушка GatewayIPAddressInformationCollection.Contains(GatewayIPAddressInformation address)</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubGatewayIPAddressInformationCollection.ContainsGatewayIPAddressInformation">
            <summary>Задает stub GatewayIPAddressInformationCollection.Contains(GatewayIPAddressInformation address)</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubGatewayIPAddressInformationCollection.CopyTo(System.Net.NetworkInformation.GatewayIPAddressInformation[],System.Int32)">
            <summary>Задает заглушка GatewayIPAddressInformationCollection.CopyTo(GatewayIPAddressInformation[] array, Int32 offset)</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubGatewayIPAddressInformationCollection.CopyToGatewayIPAddressInformationArrayInt32">
            <summary>Задает stub GatewayIPAddressInformationCollection.CopyTo(GatewayIPAddressInformation[] array, Int32 offset)</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubGatewayIPAddressInformationCollection.Count">
            <summary>Задает stub GatewayIPAddressInformationCollection.get_Count()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubGatewayIPAddressInformationCollection.CountGet">
            <summary>Задает stub GatewayIPAddressInformationCollection.get_Count()</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubGatewayIPAddressInformationCollection.GetEnumerator">
            <summary>Задает заглушка GatewayIPAddressInformationCollection.GetEnumerator()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubGatewayIPAddressInformationCollection.GetEnumerator01">
            <summary>Задает stub GatewayIPAddressInformationCollection.GetEnumerator()</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubGatewayIPAddressInformationCollection.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubGatewayIPAddressInformationCollection</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubGatewayIPAddressInformationCollection.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubGatewayIPAddressInformationCollection.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubGatewayIPAddressInformationCollection.IsReadOnly">
            <summary>Задает stub GatewayIPAddressInformationCollection.get_IsReadOnly()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubGatewayIPAddressInformationCollection.IsReadOnlyGet">
            <summary>Задает stub GatewayIPAddressInformationCollection.get_IsReadOnly()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubGatewayIPAddressInformationCollection.Item(System.Int32)">
            <summary>Задает stub GatewayIPAddressInformationCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubGatewayIPAddressInformationCollection.ItemGetInt32">
            <summary>Задает stub GatewayIPAddressInformationCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubGatewayIPAddressInformationCollection.Remove(System.Net.NetworkInformation.GatewayIPAddressInformation)">
            <summary>Задает заглушка GatewayIPAddressInformationCollection.Remove(GatewayIPAddressInformation address)</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubGatewayIPAddressInformationCollection.RemoveGatewayIPAddressInformation">
            <summary>Задает stub GatewayIPAddressInformationCollection.Remove(GatewayIPAddressInformation address)</summary>
        </member>
        <member name="T:System.Net.NetworkInformation.Fakes.StubIPAddressCollection">
            <summary>Тип заглушки System.Net.NetworkInformation.IPAddressCollection</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubIPAddressCollection.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubIPAddressCollection.Add(System.Net.IPAddress)">
            <summary>Задает заглушка IPAddressCollection.Add(IPAddress address)</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIPAddressCollection.AddIPAddress">
            <summary>Задает stub IPAddressCollection.Add(IPAddress address)</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIPAddressCollection.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubIPAddressCollection.Clear">
            <summary>Задает заглушка IPAddressCollection.Clear()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIPAddressCollection.Clear01">
            <summary>Задает stub IPAddressCollection.Clear()</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubIPAddressCollection.Contains(System.Net.IPAddress)">
            <summary>Задает заглушка IPAddressCollection.Contains(IPAddress address)</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIPAddressCollection.ContainsIPAddress">
            <summary>Задает stub IPAddressCollection.Contains(IPAddress address)</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubIPAddressCollection.CopyTo(System.Net.IPAddress[],System.Int32)">
            <summary>Задает заглушка IPAddressCollection.CopyTo(IPAddress[] array, Int32 offset)</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIPAddressCollection.CopyToIPAddressArrayInt32">
            <summary>Задает stub IPAddressCollection.CopyTo(IPAddress[] array, Int32 offset)</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIPAddressCollection.Count">
            <summary>Задает stub IPAddressCollection.get_Count()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIPAddressCollection.CountGet">
            <summary>Задает stub IPAddressCollection.get_Count()</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubIPAddressCollection.GetEnumerator">
            <summary>Задает заглушка IPAddressCollection.GetEnumerator()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIPAddressCollection.GetEnumerator01">
            <summary>Задает stub IPAddressCollection.GetEnumerator()</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubIPAddressCollection.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubIPAddressCollection</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIPAddressCollection.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIPAddressCollection.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIPAddressCollection.IsReadOnly">
            <summary>Задает stub IPAddressCollection.get_IsReadOnly()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIPAddressCollection.IsReadOnlyGet">
            <summary>Задает stub IPAddressCollection.get_IsReadOnly()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIPAddressCollection.Item(System.Int32)">
            <summary>Задает stub IPAddressCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIPAddressCollection.ItemGetInt32">
            <summary>Задает stub IPAddressCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubIPAddressCollection.Remove(System.Net.IPAddress)">
            <summary>Задает заглушка IPAddressCollection.Remove(IPAddress address)</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIPAddressCollection.RemoveIPAddress">
            <summary>Задает stub IPAddressCollection.Remove(IPAddress address)</summary>
        </member>
        <member name="T:System.Net.NetworkInformation.Fakes.StubIPAddressInformation">
            <summary>Тип заглушки System.Net.NetworkInformation.IPAddressInformation</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubIPAddressInformation.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIPAddressInformation.Address">
            <summary>Задает stub IPAddressInformation.get_Address()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIPAddressInformation.AddressGet">
            <summary>Задает stub IPAddressInformation.get_Address()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIPAddressInformation.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubIPAddressInformation.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubIPAddressInformation</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIPAddressInformation.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIPAddressInformation.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIPAddressInformation.IsDnsEligible">
            <summary>Задает stub IPAddressInformation.get_IsDnsEligible()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIPAddressInformation.IsDnsEligibleGet">
            <summary>Задает stub IPAddressInformation.get_IsDnsEligible()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIPAddressInformation.IsTransient">
            <summary>Задает stub IPAddressInformation.get_IsTransient()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIPAddressInformation.IsTransientGet">
            <summary>Задает stub IPAddressInformation.get_IsTransient()</summary>
        </member>
        <member name="T:System.Net.NetworkInformation.Fakes.StubIPGlobalProperties">
            <summary>Тип заглушки System.Net.NetworkInformation.IPGlobalProperties</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubIPGlobalProperties.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubIPGlobalProperties.BeginGetUnicastAddresses(System.AsyncCallback,System.Object)">
            <summary>Задает заглушка IPGlobalProperties.BeginGetUnicastAddresses(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIPGlobalProperties.BeginGetUnicastAddressesAsyncCallbackObject">
            <summary>Задает stub IPGlobalProperties.BeginGetUnicastAddresses(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIPGlobalProperties.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIPGlobalProperties.DhcpScopeName">
            <summary>Задает stub IPGlobalProperties.get_DhcpScopeName()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIPGlobalProperties.DhcpScopeNameGet">
            <summary>Задает stub IPGlobalProperties.get_DhcpScopeName()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIPGlobalProperties.DomainName">
            <summary>Задает stub IPGlobalProperties.get_DomainName()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIPGlobalProperties.DomainNameGet">
            <summary>Задает stub IPGlobalProperties.get_DomainName()</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubIPGlobalProperties.EndGetUnicastAddresses(System.IAsyncResult)">
            <summary>Задает заглушка IPGlobalProperties.EndGetUnicastAddresses(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIPGlobalProperties.EndGetUnicastAddressesIAsyncResult">
            <summary>Задает stub IPGlobalProperties.EndGetUnicastAddresses(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubIPGlobalProperties.GetActiveTcpConnections">
            <summary>Задает заглушка IPGlobalProperties.GetActiveTcpConnections()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIPGlobalProperties.GetActiveTcpConnections01">
            <summary>Задает stub IPGlobalProperties.GetActiveTcpConnections()</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubIPGlobalProperties.GetActiveTcpListeners">
            <summary>Задает заглушка IPGlobalProperties.GetActiveTcpListeners()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIPGlobalProperties.GetActiveTcpListeners01">
            <summary>Задает stub IPGlobalProperties.GetActiveTcpListeners()</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubIPGlobalProperties.GetActiveUdpListeners">
            <summary>Задает заглушка IPGlobalProperties.GetActiveUdpListeners()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIPGlobalProperties.GetActiveUdpListeners01">
            <summary>Задает stub IPGlobalProperties.GetActiveUdpListeners()</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubIPGlobalProperties.GetIPv4GlobalStatistics">
            <summary>Задает заглушка IPGlobalProperties.GetIPv4GlobalStatistics()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIPGlobalProperties.GetIPv4GlobalStatistics01">
            <summary>Задает stub IPGlobalProperties.GetIPv4GlobalStatistics()</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubIPGlobalProperties.GetIPv6GlobalStatistics">
            <summary>Задает заглушка IPGlobalProperties.GetIPv6GlobalStatistics()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIPGlobalProperties.GetIPv6GlobalStatistics01">
            <summary>Задает stub IPGlobalProperties.GetIPv6GlobalStatistics()</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubIPGlobalProperties.GetIcmpV4Statistics">
            <summary>Задает заглушка IPGlobalProperties.GetIcmpV4Statistics()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIPGlobalProperties.GetIcmpV4Statistics01">
            <summary>Задает stub IPGlobalProperties.GetIcmpV4Statistics()</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubIPGlobalProperties.GetIcmpV6Statistics">
            <summary>Задает заглушка IPGlobalProperties.GetIcmpV6Statistics()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIPGlobalProperties.GetIcmpV6Statistics01">
            <summary>Задает stub IPGlobalProperties.GetIcmpV6Statistics()</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubIPGlobalProperties.GetTcpIPv4Statistics">
            <summary>Задает заглушка IPGlobalProperties.GetTcpIPv4Statistics()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIPGlobalProperties.GetTcpIPv4Statistics01">
            <summary>Задает stub IPGlobalProperties.GetTcpIPv4Statistics()</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubIPGlobalProperties.GetTcpIPv6Statistics">
            <summary>Задает заглушка IPGlobalProperties.GetTcpIPv6Statistics()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIPGlobalProperties.GetTcpIPv6Statistics01">
            <summary>Задает stub IPGlobalProperties.GetTcpIPv6Statistics()</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubIPGlobalProperties.GetUdpIPv4Statistics">
            <summary>Задает заглушка IPGlobalProperties.GetUdpIPv4Statistics()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIPGlobalProperties.GetUdpIPv4Statistics01">
            <summary>Задает stub IPGlobalProperties.GetUdpIPv4Statistics()</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubIPGlobalProperties.GetUdpIPv6Statistics">
            <summary>Задает заглушка IPGlobalProperties.GetUdpIPv6Statistics()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIPGlobalProperties.GetUdpIPv6Statistics01">
            <summary>Задает stub IPGlobalProperties.GetUdpIPv6Statistics()</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubIPGlobalProperties.GetUnicastAddresses">
            <summary>Задает заглушка IPGlobalProperties.GetUnicastAddresses()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIPGlobalProperties.GetUnicastAddresses01">
            <summary>Задает stub IPGlobalProperties.GetUnicastAddresses()</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubIPGlobalProperties.GetUnicastAddressesAsync">
            <summary>Задает заглушка IPGlobalProperties.GetUnicastAddressesAsync()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIPGlobalProperties.GetUnicastAddressesAsync01">
            <summary>Задает stub IPGlobalProperties.GetUnicastAddressesAsync()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIPGlobalProperties.HostName">
            <summary>Задает stub IPGlobalProperties.get_HostName()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIPGlobalProperties.HostNameGet">
            <summary>Задает stub IPGlobalProperties.get_HostName()</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubIPGlobalProperties.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubIPGlobalProperties</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIPGlobalProperties.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIPGlobalProperties.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIPGlobalProperties.IsWinsProxy">
            <summary>Задает stub IPGlobalProperties.get_IsWinsProxy()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIPGlobalProperties.IsWinsProxyGet">
            <summary>Задает stub IPGlobalProperties.get_IsWinsProxy()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIPGlobalProperties.NodeType">
            <summary>Задает stub IPGlobalProperties.get_NodeType()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIPGlobalProperties.NodeTypeGet">
            <summary>Задает stub IPGlobalProperties.get_NodeType()</summary>
        </member>
        <member name="T:System.Net.NetworkInformation.Fakes.StubIPGlobalStatistics">
            <summary>Тип заглушки System.Net.NetworkInformation.IPGlobalStatistics</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubIPGlobalStatistics.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIPGlobalStatistics.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIPGlobalStatistics.DefaultTtl">
            <summary>Задает stub IPGlobalStatistics.get_DefaultTtl()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIPGlobalStatistics.DefaultTtlGet">
            <summary>Задает stub IPGlobalStatistics.get_DefaultTtl()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIPGlobalStatistics.ForwardingEnabled">
            <summary>Задает stub IPGlobalStatistics.get_ForwardingEnabled()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIPGlobalStatistics.ForwardingEnabledGet">
            <summary>Задает stub IPGlobalStatistics.get_ForwardingEnabled()</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubIPGlobalStatistics.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubIPGlobalStatistics</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIPGlobalStatistics.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIPGlobalStatistics.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIPGlobalStatistics.NumberOfIPAddresses">
            <summary>Задает stub IPGlobalStatistics.get_NumberOfIPAddresses()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIPGlobalStatistics.NumberOfIPAddressesGet">
            <summary>Задает stub IPGlobalStatistics.get_NumberOfIPAddresses()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIPGlobalStatistics.NumberOfInterfaces">
            <summary>Задает stub IPGlobalStatistics.get_NumberOfInterfaces()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIPGlobalStatistics.NumberOfInterfacesGet">
            <summary>Задает stub IPGlobalStatistics.get_NumberOfInterfaces()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIPGlobalStatistics.NumberOfRoutes">
            <summary>Задает stub IPGlobalStatistics.get_NumberOfRoutes()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIPGlobalStatistics.NumberOfRoutesGet">
            <summary>Задает stub IPGlobalStatistics.get_NumberOfRoutes()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIPGlobalStatistics.OutputPacketRequests">
            <summary>Задает stub IPGlobalStatistics.get_OutputPacketRequests()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIPGlobalStatistics.OutputPacketRequestsGet">
            <summary>Задает stub IPGlobalStatistics.get_OutputPacketRequests()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIPGlobalStatistics.OutputPacketRoutingDiscards">
            <summary>Задает stub IPGlobalStatistics.get_OutputPacketRoutingDiscards()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIPGlobalStatistics.OutputPacketRoutingDiscardsGet">
            <summary>Задает stub IPGlobalStatistics.get_OutputPacketRoutingDiscards()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIPGlobalStatistics.OutputPacketsDiscarded">
            <summary>Задает stub IPGlobalStatistics.get_OutputPacketsDiscarded()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIPGlobalStatistics.OutputPacketsDiscardedGet">
            <summary>Задает stub IPGlobalStatistics.get_OutputPacketsDiscarded()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIPGlobalStatistics.OutputPacketsWithNoRoute">
            <summary>Задает stub IPGlobalStatistics.get_OutputPacketsWithNoRoute()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIPGlobalStatistics.OutputPacketsWithNoRouteGet">
            <summary>Задает stub IPGlobalStatistics.get_OutputPacketsWithNoRoute()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIPGlobalStatistics.PacketFragmentFailures">
            <summary>Задает stub IPGlobalStatistics.get_PacketFragmentFailures()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIPGlobalStatistics.PacketFragmentFailuresGet">
            <summary>Задает stub IPGlobalStatistics.get_PacketFragmentFailures()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIPGlobalStatistics.PacketReassembliesRequired">
            <summary>Задает stub IPGlobalStatistics.get_PacketReassembliesRequired()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIPGlobalStatistics.PacketReassembliesRequiredGet">
            <summary>Задает stub IPGlobalStatistics.get_PacketReassembliesRequired()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIPGlobalStatistics.PacketReassemblyFailures">
            <summary>Задает stub IPGlobalStatistics.get_PacketReassemblyFailures()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIPGlobalStatistics.PacketReassemblyFailuresGet">
            <summary>Задает stub IPGlobalStatistics.get_PacketReassemblyFailures()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIPGlobalStatistics.PacketReassemblyTimeout">
            <summary>Задает stub IPGlobalStatistics.get_PacketReassemblyTimeout()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIPGlobalStatistics.PacketReassemblyTimeoutGet">
            <summary>Задает stub IPGlobalStatistics.get_PacketReassemblyTimeout()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIPGlobalStatistics.PacketsFragmented">
            <summary>Задает stub IPGlobalStatistics.get_PacketsFragmented()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIPGlobalStatistics.PacketsFragmentedGet">
            <summary>Задает stub IPGlobalStatistics.get_PacketsFragmented()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIPGlobalStatistics.PacketsReassembled">
            <summary>Задает stub IPGlobalStatistics.get_PacketsReassembled()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIPGlobalStatistics.PacketsReassembledGet">
            <summary>Задает stub IPGlobalStatistics.get_PacketsReassembled()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIPGlobalStatistics.ReceivedPackets">
            <summary>Задает stub IPGlobalStatistics.get_ReceivedPackets()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIPGlobalStatistics.ReceivedPacketsDelivered">
            <summary>Задает stub IPGlobalStatistics.get_ReceivedPacketsDelivered()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIPGlobalStatistics.ReceivedPacketsDeliveredGet">
            <summary>Задает stub IPGlobalStatistics.get_ReceivedPacketsDelivered()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIPGlobalStatistics.ReceivedPacketsDiscarded">
            <summary>Задает stub IPGlobalStatistics.get_ReceivedPacketsDiscarded()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIPGlobalStatistics.ReceivedPacketsDiscardedGet">
            <summary>Задает stub IPGlobalStatistics.get_ReceivedPacketsDiscarded()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIPGlobalStatistics.ReceivedPacketsForwarded">
            <summary>Задает stub IPGlobalStatistics.get_ReceivedPacketsForwarded()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIPGlobalStatistics.ReceivedPacketsForwardedGet">
            <summary>Задает stub IPGlobalStatistics.get_ReceivedPacketsForwarded()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIPGlobalStatistics.ReceivedPacketsGet">
            <summary>Задает stub IPGlobalStatistics.get_ReceivedPackets()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIPGlobalStatistics.ReceivedPacketsWithAddressErrors">
            <summary>Задает stub IPGlobalStatistics.get_ReceivedPacketsWithAddressErrors()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIPGlobalStatistics.ReceivedPacketsWithAddressErrorsGet">
            <summary>Задает stub IPGlobalStatistics.get_ReceivedPacketsWithAddressErrors()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIPGlobalStatistics.ReceivedPacketsWithHeadersErrors">
            <summary>Задает stub IPGlobalStatistics.get_ReceivedPacketsWithHeadersErrors()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIPGlobalStatistics.ReceivedPacketsWithHeadersErrorsGet">
            <summary>Задает stub IPGlobalStatistics.get_ReceivedPacketsWithHeadersErrors()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIPGlobalStatistics.ReceivedPacketsWithUnknownProtocol">
            <summary>Задает stub IPGlobalStatistics.get_ReceivedPacketsWithUnknownProtocol()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIPGlobalStatistics.ReceivedPacketsWithUnknownProtocolGet">
            <summary>Задает stub IPGlobalStatistics.get_ReceivedPacketsWithUnknownProtocol()</summary>
        </member>
        <member name="T:System.Net.NetworkInformation.Fakes.StubIPInterfaceProperties">
            <summary>Тип заглушки System.Net.NetworkInformation.IPInterfaceProperties</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubIPInterfaceProperties.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIPInterfaceProperties.AnycastAddresses">
            <summary>Задает stub IPInterfaceProperties.get_AnycastAddresses()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIPInterfaceProperties.AnycastAddressesGet">
            <summary>Задает stub IPInterfaceProperties.get_AnycastAddresses()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIPInterfaceProperties.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIPInterfaceProperties.DhcpServerAddresses">
            <summary>Задает stub IPInterfaceProperties.get_DhcpServerAddresses()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIPInterfaceProperties.DhcpServerAddressesGet">
            <summary>Задает stub IPInterfaceProperties.get_DhcpServerAddresses()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIPInterfaceProperties.DnsAddresses">
            <summary>Задает stub IPInterfaceProperties.get_DnsAddresses()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIPInterfaceProperties.DnsAddressesGet">
            <summary>Задает stub IPInterfaceProperties.get_DnsAddresses()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIPInterfaceProperties.DnsSuffix">
            <summary>Задает stub IPInterfaceProperties.get_DnsSuffix()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIPInterfaceProperties.DnsSuffixGet">
            <summary>Задает stub IPInterfaceProperties.get_DnsSuffix()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIPInterfaceProperties.GatewayAddresses">
            <summary>Задает stub IPInterfaceProperties.get_GatewayAddresses()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIPInterfaceProperties.GatewayAddressesGet">
            <summary>Задает stub IPInterfaceProperties.get_GatewayAddresses()</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubIPInterfaceProperties.GetIPv4Properties">
            <summary>Задает заглушка IPInterfaceProperties.GetIPv4Properties()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIPInterfaceProperties.GetIPv4Properties01">
            <summary>Задает stub IPInterfaceProperties.GetIPv4Properties()</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubIPInterfaceProperties.GetIPv6Properties">
            <summary>Задает заглушка IPInterfaceProperties.GetIPv6Properties()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIPInterfaceProperties.GetIPv6Properties01">
            <summary>Задает stub IPInterfaceProperties.GetIPv6Properties()</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubIPInterfaceProperties.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubIPInterfaceProperties</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIPInterfaceProperties.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIPInterfaceProperties.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIPInterfaceProperties.IsDnsEnabled">
            <summary>Задает stub IPInterfaceProperties.get_IsDnsEnabled()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIPInterfaceProperties.IsDnsEnabledGet">
            <summary>Задает stub IPInterfaceProperties.get_IsDnsEnabled()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIPInterfaceProperties.IsDynamicDnsEnabled">
            <summary>Задает stub IPInterfaceProperties.get_IsDynamicDnsEnabled()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIPInterfaceProperties.IsDynamicDnsEnabledGet">
            <summary>Задает stub IPInterfaceProperties.get_IsDynamicDnsEnabled()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIPInterfaceProperties.MulticastAddresses">
            <summary>Задает stub IPInterfaceProperties.get_MulticastAddresses()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIPInterfaceProperties.MulticastAddressesGet">
            <summary>Задает stub IPInterfaceProperties.get_MulticastAddresses()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIPInterfaceProperties.UnicastAddresses">
            <summary>Задает stub IPInterfaceProperties.get_UnicastAddresses()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIPInterfaceProperties.UnicastAddressesGet">
            <summary>Задает stub IPInterfaceProperties.get_UnicastAddresses()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIPInterfaceProperties.WinsServersAddresses">
            <summary>Задает stub IPInterfaceProperties.get_WinsServersAddresses()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIPInterfaceProperties.WinsServersAddressesGet">
            <summary>Задает stub IPInterfaceProperties.get_WinsServersAddresses()</summary>
        </member>
        <member name="T:System.Net.NetworkInformation.Fakes.StubIPInterfaceStatistics">
            <summary>Тип заглушки System.Net.NetworkInformation.IPInterfaceStatistics</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubIPInterfaceStatistics.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIPInterfaceStatistics.BytesReceived">
            <summary>Задает stub IPInterfaceStatistics.get_BytesReceived()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIPInterfaceStatistics.BytesReceivedGet">
            <summary>Задает stub IPInterfaceStatistics.get_BytesReceived()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIPInterfaceStatistics.BytesSent">
            <summary>Задает stub IPInterfaceStatistics.get_BytesSent()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIPInterfaceStatistics.BytesSentGet">
            <summary>Задает stub IPInterfaceStatistics.get_BytesSent()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIPInterfaceStatistics.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIPInterfaceStatistics.IncomingPacketsDiscarded">
            <summary>Задает stub IPInterfaceStatistics.get_IncomingPacketsDiscarded()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIPInterfaceStatistics.IncomingPacketsDiscardedGet">
            <summary>Задает stub IPInterfaceStatistics.get_IncomingPacketsDiscarded()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIPInterfaceStatistics.IncomingPacketsWithErrors">
            <summary>Задает stub IPInterfaceStatistics.get_IncomingPacketsWithErrors()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIPInterfaceStatistics.IncomingPacketsWithErrorsGet">
            <summary>Задает stub IPInterfaceStatistics.get_IncomingPacketsWithErrors()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIPInterfaceStatistics.IncomingUnknownProtocolPackets">
            <summary>Задает stub IPInterfaceStatistics.get_IncomingUnknownProtocolPackets()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIPInterfaceStatistics.IncomingUnknownProtocolPacketsGet">
            <summary>Задает stub IPInterfaceStatistics.get_IncomingUnknownProtocolPackets()</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubIPInterfaceStatistics.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubIPInterfaceStatistics</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIPInterfaceStatistics.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIPInterfaceStatistics.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIPInterfaceStatistics.NonUnicastPacketsReceived">
            <summary>Задает stub IPInterfaceStatistics.get_NonUnicastPacketsReceived()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIPInterfaceStatistics.NonUnicastPacketsReceivedGet">
            <summary>Задает stub IPInterfaceStatistics.get_NonUnicastPacketsReceived()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIPInterfaceStatistics.NonUnicastPacketsSent">
            <summary>Задает stub IPInterfaceStatistics.get_NonUnicastPacketsSent()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIPInterfaceStatistics.NonUnicastPacketsSentGet">
            <summary>Задает stub IPInterfaceStatistics.get_NonUnicastPacketsSent()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIPInterfaceStatistics.OutgoingPacketsDiscarded">
            <summary>Задает stub IPInterfaceStatistics.get_OutgoingPacketsDiscarded()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIPInterfaceStatistics.OutgoingPacketsDiscardedGet">
            <summary>Задает stub IPInterfaceStatistics.get_OutgoingPacketsDiscarded()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIPInterfaceStatistics.OutgoingPacketsWithErrors">
            <summary>Задает stub IPInterfaceStatistics.get_OutgoingPacketsWithErrors()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIPInterfaceStatistics.OutgoingPacketsWithErrorsGet">
            <summary>Задает stub IPInterfaceStatistics.get_OutgoingPacketsWithErrors()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIPInterfaceStatistics.OutputQueueLength">
            <summary>Задает stub IPInterfaceStatistics.get_OutputQueueLength()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIPInterfaceStatistics.OutputQueueLengthGet">
            <summary>Задает stub IPInterfaceStatistics.get_OutputQueueLength()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIPInterfaceStatistics.UnicastPacketsReceived">
            <summary>Задает stub IPInterfaceStatistics.get_UnicastPacketsReceived()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIPInterfaceStatistics.UnicastPacketsReceivedGet">
            <summary>Задает stub IPInterfaceStatistics.get_UnicastPacketsReceived()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIPInterfaceStatistics.UnicastPacketsSent">
            <summary>Задает stub IPInterfaceStatistics.get_UnicastPacketsSent()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIPInterfaceStatistics.UnicastPacketsSentGet">
            <summary>Задает stub IPInterfaceStatistics.get_UnicastPacketsSent()</summary>
        </member>
        <member name="T:System.Net.NetworkInformation.Fakes.StubIPv4InterfaceProperties">
            <summary>Тип заглушки System.Net.NetworkInformation.IPv4InterfaceProperties</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubIPv4InterfaceProperties.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIPv4InterfaceProperties.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIPv4InterfaceProperties.Index">
            <summary>Задает stub IPv4InterfaceProperties.get_Index()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIPv4InterfaceProperties.IndexGet">
            <summary>Задает stub IPv4InterfaceProperties.get_Index()</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubIPv4InterfaceProperties.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubIPv4InterfaceProperties</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIPv4InterfaceProperties.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIPv4InterfaceProperties.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIPv4InterfaceProperties.IsAutomaticPrivateAddressingActive">
            <summary>Задает stub IPv4InterfaceProperties.get_IsAutomaticPrivateAddressingActive()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIPv4InterfaceProperties.IsAutomaticPrivateAddressingActiveGet">
            <summary>Задает stub IPv4InterfaceProperties.get_IsAutomaticPrivateAddressingActive()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIPv4InterfaceProperties.IsAutomaticPrivateAddressingEnabled">
            <summary>Задает stub IPv4InterfaceProperties.get_IsAutomaticPrivateAddressingEnabled()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIPv4InterfaceProperties.IsAutomaticPrivateAddressingEnabledGet">
            <summary>Задает stub IPv4InterfaceProperties.get_IsAutomaticPrivateAddressingEnabled()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIPv4InterfaceProperties.IsDhcpEnabled">
            <summary>Задает stub IPv4InterfaceProperties.get_IsDhcpEnabled()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIPv4InterfaceProperties.IsDhcpEnabledGet">
            <summary>Задает stub IPv4InterfaceProperties.get_IsDhcpEnabled()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIPv4InterfaceProperties.IsForwardingEnabled">
            <summary>Задает stub IPv4InterfaceProperties.get_IsForwardingEnabled()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIPv4InterfaceProperties.IsForwardingEnabledGet">
            <summary>Задает stub IPv4InterfaceProperties.get_IsForwardingEnabled()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIPv4InterfaceProperties.Mtu">
            <summary>Задает stub IPv4InterfaceProperties.get_Mtu()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIPv4InterfaceProperties.MtuGet">
            <summary>Задает stub IPv4InterfaceProperties.get_Mtu()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIPv4InterfaceProperties.UsesWins">
            <summary>Задает stub IPv4InterfaceProperties.get_UsesWins()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIPv4InterfaceProperties.UsesWinsGet">
            <summary>Задает stub IPv4InterfaceProperties.get_UsesWins()</summary>
        </member>
        <member name="T:System.Net.NetworkInformation.Fakes.StubIPv4InterfaceStatistics">
            <summary>Тип заглушки System.Net.NetworkInformation.IPv4InterfaceStatistics</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubIPv4InterfaceStatistics.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIPv4InterfaceStatistics.BytesReceived">
            <summary>Задает stub IPv4InterfaceStatistics.get_BytesReceived()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIPv4InterfaceStatistics.BytesReceivedGet">
            <summary>Задает stub IPv4InterfaceStatistics.get_BytesReceived()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIPv4InterfaceStatistics.BytesSent">
            <summary>Задает stub IPv4InterfaceStatistics.get_BytesSent()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIPv4InterfaceStatistics.BytesSentGet">
            <summary>Задает stub IPv4InterfaceStatistics.get_BytesSent()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIPv4InterfaceStatistics.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIPv4InterfaceStatistics.IncomingPacketsDiscarded">
            <summary>Задает stub IPv4InterfaceStatistics.get_IncomingPacketsDiscarded()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIPv4InterfaceStatistics.IncomingPacketsDiscardedGet">
            <summary>Задает stub IPv4InterfaceStatistics.get_IncomingPacketsDiscarded()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIPv4InterfaceStatistics.IncomingPacketsWithErrors">
            <summary>Задает stub IPv4InterfaceStatistics.get_IncomingPacketsWithErrors()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIPv4InterfaceStatistics.IncomingPacketsWithErrorsGet">
            <summary>Задает stub IPv4InterfaceStatistics.get_IncomingPacketsWithErrors()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIPv4InterfaceStatistics.IncomingUnknownProtocolPackets">
            <summary>Задает stub IPv4InterfaceStatistics.get_IncomingUnknownProtocolPackets()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIPv4InterfaceStatistics.IncomingUnknownProtocolPacketsGet">
            <summary>Задает stub IPv4InterfaceStatistics.get_IncomingUnknownProtocolPackets()</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubIPv4InterfaceStatistics.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubIPv4InterfaceStatistics</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIPv4InterfaceStatistics.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIPv4InterfaceStatistics.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIPv4InterfaceStatistics.NonUnicastPacketsReceived">
            <summary>Задает stub IPv4InterfaceStatistics.get_NonUnicastPacketsReceived()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIPv4InterfaceStatistics.NonUnicastPacketsReceivedGet">
            <summary>Задает stub IPv4InterfaceStatistics.get_NonUnicastPacketsReceived()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIPv4InterfaceStatistics.NonUnicastPacketsSent">
            <summary>Задает stub IPv4InterfaceStatistics.get_NonUnicastPacketsSent()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIPv4InterfaceStatistics.NonUnicastPacketsSentGet">
            <summary>Задает stub IPv4InterfaceStatistics.get_NonUnicastPacketsSent()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIPv4InterfaceStatistics.OutgoingPacketsDiscarded">
            <summary>Задает stub IPv4InterfaceStatistics.get_OutgoingPacketsDiscarded()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIPv4InterfaceStatistics.OutgoingPacketsDiscardedGet">
            <summary>Задает stub IPv4InterfaceStatistics.get_OutgoingPacketsDiscarded()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIPv4InterfaceStatistics.OutgoingPacketsWithErrors">
            <summary>Задает stub IPv4InterfaceStatistics.get_OutgoingPacketsWithErrors()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIPv4InterfaceStatistics.OutgoingPacketsWithErrorsGet">
            <summary>Задает stub IPv4InterfaceStatistics.get_OutgoingPacketsWithErrors()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIPv4InterfaceStatistics.OutputQueueLength">
            <summary>Задает stub IPv4InterfaceStatistics.get_OutputQueueLength()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIPv4InterfaceStatistics.OutputQueueLengthGet">
            <summary>Задает stub IPv4InterfaceStatistics.get_OutputQueueLength()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIPv4InterfaceStatistics.UnicastPacketsReceived">
            <summary>Задает stub IPv4InterfaceStatistics.get_UnicastPacketsReceived()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIPv4InterfaceStatistics.UnicastPacketsReceivedGet">
            <summary>Задает stub IPv4InterfaceStatistics.get_UnicastPacketsReceived()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIPv4InterfaceStatistics.UnicastPacketsSent">
            <summary>Задает stub IPv4InterfaceStatistics.get_UnicastPacketsSent()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIPv4InterfaceStatistics.UnicastPacketsSentGet">
            <summary>Задает stub IPv4InterfaceStatistics.get_UnicastPacketsSent()</summary>
        </member>
        <member name="T:System.Net.NetworkInformation.Fakes.StubIPv6InterfaceProperties">
            <summary>Тип заглушки System.Net.NetworkInformation.IPv6InterfaceProperties</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubIPv6InterfaceProperties.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIPv6InterfaceProperties.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubIPv6InterfaceProperties.GetScopeId(System.Net.NetworkInformation.ScopeLevel)">
            <summary>Задает заглушка IPv6InterfaceProperties.GetScopeId(ScopeLevel scopeLevel)</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIPv6InterfaceProperties.GetScopeIdScopeLevel">
            <summary>Задает stub IPv6InterfaceProperties.GetScopeId(ScopeLevel scopeLevel)</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIPv6InterfaceProperties.Index">
            <summary>Задает stub IPv6InterfaceProperties.get_Index()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIPv6InterfaceProperties.IndexGet">
            <summary>Задает stub IPv6InterfaceProperties.get_Index()</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubIPv6InterfaceProperties.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubIPv6InterfaceProperties</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIPv6InterfaceProperties.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIPv6InterfaceProperties.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIPv6InterfaceProperties.Mtu">
            <summary>Задает stub IPv6InterfaceProperties.get_Mtu()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIPv6InterfaceProperties.MtuGet">
            <summary>Задает stub IPv6InterfaceProperties.get_Mtu()</summary>
        </member>
        <member name="T:System.Net.NetworkInformation.Fakes.StubIcmpV4Statistics">
            <summary>Тип заглушки System.Net.NetworkInformation.IcmpV4Statistics</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubIcmpV4Statistics.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIcmpV4Statistics.AddressMaskRepliesReceived">
            <summary>Задает stub IcmpV4Statistics.get_AddressMaskRepliesReceived()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIcmpV4Statistics.AddressMaskRepliesReceivedGet">
            <summary>Задает stub IcmpV4Statistics.get_AddressMaskRepliesReceived()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIcmpV4Statistics.AddressMaskRepliesSent">
            <summary>Задает stub IcmpV4Statistics.get_AddressMaskRepliesSent()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIcmpV4Statistics.AddressMaskRepliesSentGet">
            <summary>Задает stub IcmpV4Statistics.get_AddressMaskRepliesSent()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIcmpV4Statistics.AddressMaskRequestsReceived">
            <summary>Задает stub IcmpV4Statistics.get_AddressMaskRequestsReceived()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIcmpV4Statistics.AddressMaskRequestsReceivedGet">
            <summary>Задает stub IcmpV4Statistics.get_AddressMaskRequestsReceived()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIcmpV4Statistics.AddressMaskRequestsSent">
            <summary>Задает stub IcmpV4Statistics.get_AddressMaskRequestsSent()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIcmpV4Statistics.AddressMaskRequestsSentGet">
            <summary>Задает stub IcmpV4Statistics.get_AddressMaskRequestsSent()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIcmpV4Statistics.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIcmpV4Statistics.DestinationUnreachableMessagesReceived">
            <summary>Задает stub IcmpV4Statistics.get_DestinationUnreachableMessagesReceived()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIcmpV4Statistics.DestinationUnreachableMessagesReceivedGet">
            <summary>Задает stub IcmpV4Statistics.get_DestinationUnreachableMessagesReceived()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIcmpV4Statistics.DestinationUnreachableMessagesSent">
            <summary>Задает stub IcmpV4Statistics.get_DestinationUnreachableMessagesSent()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIcmpV4Statistics.DestinationUnreachableMessagesSentGet">
            <summary>Задает stub IcmpV4Statistics.get_DestinationUnreachableMessagesSent()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIcmpV4Statistics.EchoRepliesReceived">
            <summary>Задает stub IcmpV4Statistics.get_EchoRepliesReceived()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIcmpV4Statistics.EchoRepliesReceivedGet">
            <summary>Задает stub IcmpV4Statistics.get_EchoRepliesReceived()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIcmpV4Statistics.EchoRepliesSent">
            <summary>Задает stub IcmpV4Statistics.get_EchoRepliesSent()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIcmpV4Statistics.EchoRepliesSentGet">
            <summary>Задает stub IcmpV4Statistics.get_EchoRepliesSent()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIcmpV4Statistics.EchoRequestsReceived">
            <summary>Задает stub IcmpV4Statistics.get_EchoRequestsReceived()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIcmpV4Statistics.EchoRequestsReceivedGet">
            <summary>Задает stub IcmpV4Statistics.get_EchoRequestsReceived()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIcmpV4Statistics.EchoRequestsSent">
            <summary>Задает stub IcmpV4Statistics.get_EchoRequestsSent()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIcmpV4Statistics.EchoRequestsSentGet">
            <summary>Задает stub IcmpV4Statistics.get_EchoRequestsSent()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIcmpV4Statistics.ErrorsReceived">
            <summary>Задает stub IcmpV4Statistics.get_ErrorsReceived()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIcmpV4Statistics.ErrorsReceivedGet">
            <summary>Задает stub IcmpV4Statistics.get_ErrorsReceived()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIcmpV4Statistics.ErrorsSent">
            <summary>Задает stub IcmpV4Statistics.get_ErrorsSent()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIcmpV4Statistics.ErrorsSentGet">
            <summary>Задает stub IcmpV4Statistics.get_ErrorsSent()</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubIcmpV4Statistics.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubIcmpV4Statistics</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIcmpV4Statistics.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIcmpV4Statistics.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIcmpV4Statistics.MessagesReceived">
            <summary>Задает stub IcmpV4Statistics.get_MessagesReceived()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIcmpV4Statistics.MessagesReceivedGet">
            <summary>Задает stub IcmpV4Statistics.get_MessagesReceived()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIcmpV4Statistics.MessagesSent">
            <summary>Задает stub IcmpV4Statistics.get_MessagesSent()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIcmpV4Statistics.MessagesSentGet">
            <summary>Задает stub IcmpV4Statistics.get_MessagesSent()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIcmpV4Statistics.ParameterProblemsReceived">
            <summary>Задает stub IcmpV4Statistics.get_ParameterProblemsReceived()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIcmpV4Statistics.ParameterProblemsReceivedGet">
            <summary>Задает stub IcmpV4Statistics.get_ParameterProblemsReceived()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIcmpV4Statistics.ParameterProblemsSent">
            <summary>Задает stub IcmpV4Statistics.get_ParameterProblemsSent()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIcmpV4Statistics.ParameterProblemsSentGet">
            <summary>Задает stub IcmpV4Statistics.get_ParameterProblemsSent()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIcmpV4Statistics.RedirectsReceived">
            <summary>Задает stub IcmpV4Statistics.get_RedirectsReceived()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIcmpV4Statistics.RedirectsReceivedGet">
            <summary>Задает stub IcmpV4Statistics.get_RedirectsReceived()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIcmpV4Statistics.RedirectsSent">
            <summary>Задает stub IcmpV4Statistics.get_RedirectsSent()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIcmpV4Statistics.RedirectsSentGet">
            <summary>Задает stub IcmpV4Statistics.get_RedirectsSent()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIcmpV4Statistics.SourceQuenchesReceived">
            <summary>Задает stub IcmpV4Statistics.get_SourceQuenchesReceived()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIcmpV4Statistics.SourceQuenchesReceivedGet">
            <summary>Задает stub IcmpV4Statistics.get_SourceQuenchesReceived()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIcmpV4Statistics.SourceQuenchesSent">
            <summary>Задает stub IcmpV4Statistics.get_SourceQuenchesSent()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIcmpV4Statistics.SourceQuenchesSentGet">
            <summary>Задает stub IcmpV4Statistics.get_SourceQuenchesSent()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIcmpV4Statistics.TimeExceededMessagesReceived">
            <summary>Задает stub IcmpV4Statistics.get_TimeExceededMessagesReceived()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIcmpV4Statistics.TimeExceededMessagesReceivedGet">
            <summary>Задает stub IcmpV4Statistics.get_TimeExceededMessagesReceived()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIcmpV4Statistics.TimeExceededMessagesSent">
            <summary>Задает stub IcmpV4Statistics.get_TimeExceededMessagesSent()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIcmpV4Statistics.TimeExceededMessagesSentGet">
            <summary>Задает stub IcmpV4Statistics.get_TimeExceededMessagesSent()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIcmpV4Statistics.TimestampRepliesReceived">
            <summary>Задает stub IcmpV4Statistics.get_TimestampRepliesReceived()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIcmpV4Statistics.TimestampRepliesReceivedGet">
            <summary>Задает stub IcmpV4Statistics.get_TimestampRepliesReceived()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIcmpV4Statistics.TimestampRepliesSent">
            <summary>Задает stub IcmpV4Statistics.get_TimestampRepliesSent()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIcmpV4Statistics.TimestampRepliesSentGet">
            <summary>Задает stub IcmpV4Statistics.get_TimestampRepliesSent()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIcmpV4Statistics.TimestampRequestsReceived">
            <summary>Задает stub IcmpV4Statistics.get_TimestampRequestsReceived()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIcmpV4Statistics.TimestampRequestsReceivedGet">
            <summary>Задает stub IcmpV4Statistics.get_TimestampRequestsReceived()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIcmpV4Statistics.TimestampRequestsSent">
            <summary>Задает stub IcmpV4Statistics.get_TimestampRequestsSent()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIcmpV4Statistics.TimestampRequestsSentGet">
            <summary>Задает stub IcmpV4Statistics.get_TimestampRequestsSent()</summary>
        </member>
        <member name="T:System.Net.NetworkInformation.Fakes.StubIcmpV6Statistics">
            <summary>Тип заглушки System.Net.NetworkInformation.IcmpV6Statistics</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubIcmpV6Statistics.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIcmpV6Statistics.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIcmpV6Statistics.DestinationUnreachableMessagesReceived">
            <summary>Задает stub IcmpV6Statistics.get_DestinationUnreachableMessagesReceived()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIcmpV6Statistics.DestinationUnreachableMessagesReceivedGet">
            <summary>Задает stub IcmpV6Statistics.get_DestinationUnreachableMessagesReceived()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIcmpV6Statistics.DestinationUnreachableMessagesSent">
            <summary>Задает stub IcmpV6Statistics.get_DestinationUnreachableMessagesSent()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIcmpV6Statistics.DestinationUnreachableMessagesSentGet">
            <summary>Задает stub IcmpV6Statistics.get_DestinationUnreachableMessagesSent()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIcmpV6Statistics.EchoRepliesReceived">
            <summary>Задает stub IcmpV6Statistics.get_EchoRepliesReceived()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIcmpV6Statistics.EchoRepliesReceivedGet">
            <summary>Задает stub IcmpV6Statistics.get_EchoRepliesReceived()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIcmpV6Statistics.EchoRepliesSent">
            <summary>Задает stub IcmpV6Statistics.get_EchoRepliesSent()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIcmpV6Statistics.EchoRepliesSentGet">
            <summary>Задает stub IcmpV6Statistics.get_EchoRepliesSent()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIcmpV6Statistics.EchoRequestsReceived">
            <summary>Задает stub IcmpV6Statistics.get_EchoRequestsReceived()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIcmpV6Statistics.EchoRequestsReceivedGet">
            <summary>Задает stub IcmpV6Statistics.get_EchoRequestsReceived()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIcmpV6Statistics.EchoRequestsSent">
            <summary>Задает stub IcmpV6Statistics.get_EchoRequestsSent()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIcmpV6Statistics.EchoRequestsSentGet">
            <summary>Задает stub IcmpV6Statistics.get_EchoRequestsSent()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIcmpV6Statistics.ErrorsReceived">
            <summary>Задает stub IcmpV6Statistics.get_ErrorsReceived()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIcmpV6Statistics.ErrorsReceivedGet">
            <summary>Задает stub IcmpV6Statistics.get_ErrorsReceived()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIcmpV6Statistics.ErrorsSent">
            <summary>Задает stub IcmpV6Statistics.get_ErrorsSent()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIcmpV6Statistics.ErrorsSentGet">
            <summary>Задает stub IcmpV6Statistics.get_ErrorsSent()</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubIcmpV6Statistics.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubIcmpV6Statistics</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIcmpV6Statistics.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIcmpV6Statistics.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIcmpV6Statistics.MembershipQueriesReceived">
            <summary>Задает stub IcmpV6Statistics.get_MembershipQueriesReceived()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIcmpV6Statistics.MembershipQueriesReceivedGet">
            <summary>Задает stub IcmpV6Statistics.get_MembershipQueriesReceived()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIcmpV6Statistics.MembershipQueriesSent">
            <summary>Задает stub IcmpV6Statistics.get_MembershipQueriesSent()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIcmpV6Statistics.MembershipQueriesSentGet">
            <summary>Задает stub IcmpV6Statistics.get_MembershipQueriesSent()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIcmpV6Statistics.MembershipReductionsReceived">
            <summary>Задает stub IcmpV6Statistics.get_MembershipReductionsReceived()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIcmpV6Statistics.MembershipReductionsReceivedGet">
            <summary>Задает stub IcmpV6Statistics.get_MembershipReductionsReceived()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIcmpV6Statistics.MembershipReductionsSent">
            <summary>Задает stub IcmpV6Statistics.get_MembershipReductionsSent()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIcmpV6Statistics.MembershipReductionsSentGet">
            <summary>Задает stub IcmpV6Statistics.get_MembershipReductionsSent()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIcmpV6Statistics.MembershipReportsReceived">
            <summary>Задает stub IcmpV6Statistics.get_MembershipReportsReceived()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIcmpV6Statistics.MembershipReportsReceivedGet">
            <summary>Задает stub IcmpV6Statistics.get_MembershipReportsReceived()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIcmpV6Statistics.MembershipReportsSent">
            <summary>Задает stub IcmpV6Statistics.get_MembershipReportsSent()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIcmpV6Statistics.MembershipReportsSentGet">
            <summary>Задает stub IcmpV6Statistics.get_MembershipReportsSent()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIcmpV6Statistics.MessagesReceived">
            <summary>Задает stub IcmpV6Statistics.get_MessagesReceived()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIcmpV6Statistics.MessagesReceivedGet">
            <summary>Задает stub IcmpV6Statistics.get_MessagesReceived()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIcmpV6Statistics.MessagesSent">
            <summary>Задает stub IcmpV6Statistics.get_MessagesSent()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIcmpV6Statistics.MessagesSentGet">
            <summary>Задает stub IcmpV6Statistics.get_MessagesSent()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIcmpV6Statistics.NeighborAdvertisementsReceived">
            <summary>Задает stub IcmpV6Statistics.get_NeighborAdvertisementsReceived()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIcmpV6Statistics.NeighborAdvertisementsReceivedGet">
            <summary>Задает stub IcmpV6Statistics.get_NeighborAdvertisementsReceived()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIcmpV6Statistics.NeighborAdvertisementsSent">
            <summary>Задает stub IcmpV6Statistics.get_NeighborAdvertisementsSent()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIcmpV6Statistics.NeighborAdvertisementsSentGet">
            <summary>Задает stub IcmpV6Statistics.get_NeighborAdvertisementsSent()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIcmpV6Statistics.NeighborSolicitsReceived">
            <summary>Задает stub IcmpV6Statistics.get_NeighborSolicitsReceived()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIcmpV6Statistics.NeighborSolicitsReceivedGet">
            <summary>Задает stub IcmpV6Statistics.get_NeighborSolicitsReceived()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIcmpV6Statistics.NeighborSolicitsSent">
            <summary>Задает stub IcmpV6Statistics.get_NeighborSolicitsSent()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIcmpV6Statistics.NeighborSolicitsSentGet">
            <summary>Задает stub IcmpV6Statistics.get_NeighborSolicitsSent()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIcmpV6Statistics.PacketTooBigMessagesReceived">
            <summary>Задает stub IcmpV6Statistics.get_PacketTooBigMessagesReceived()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIcmpV6Statistics.PacketTooBigMessagesReceivedGet">
            <summary>Задает stub IcmpV6Statistics.get_PacketTooBigMessagesReceived()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIcmpV6Statistics.PacketTooBigMessagesSent">
            <summary>Задает stub IcmpV6Statistics.get_PacketTooBigMessagesSent()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIcmpV6Statistics.PacketTooBigMessagesSentGet">
            <summary>Задает stub IcmpV6Statistics.get_PacketTooBigMessagesSent()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIcmpV6Statistics.ParameterProblemsReceived">
            <summary>Задает stub IcmpV6Statistics.get_ParameterProblemsReceived()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIcmpV6Statistics.ParameterProblemsReceivedGet">
            <summary>Задает stub IcmpV6Statistics.get_ParameterProblemsReceived()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIcmpV6Statistics.ParameterProblemsSent">
            <summary>Задает stub IcmpV6Statistics.get_ParameterProblemsSent()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIcmpV6Statistics.ParameterProblemsSentGet">
            <summary>Задает stub IcmpV6Statistics.get_ParameterProblemsSent()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIcmpV6Statistics.RedirectsReceived">
            <summary>Задает stub IcmpV6Statistics.get_RedirectsReceived()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIcmpV6Statistics.RedirectsReceivedGet">
            <summary>Задает stub IcmpV6Statistics.get_RedirectsReceived()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIcmpV6Statistics.RedirectsSent">
            <summary>Задает stub IcmpV6Statistics.get_RedirectsSent()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIcmpV6Statistics.RedirectsSentGet">
            <summary>Задает stub IcmpV6Statistics.get_RedirectsSent()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIcmpV6Statistics.RouterAdvertisementsReceived">
            <summary>Задает stub IcmpV6Statistics.get_RouterAdvertisementsReceived()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIcmpV6Statistics.RouterAdvertisementsReceivedGet">
            <summary>Задает stub IcmpV6Statistics.get_RouterAdvertisementsReceived()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIcmpV6Statistics.RouterAdvertisementsSent">
            <summary>Задает stub IcmpV6Statistics.get_RouterAdvertisementsSent()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIcmpV6Statistics.RouterAdvertisementsSentGet">
            <summary>Задает stub IcmpV6Statistics.get_RouterAdvertisementsSent()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIcmpV6Statistics.RouterSolicitsReceived">
            <summary>Задает stub IcmpV6Statistics.get_RouterSolicitsReceived()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIcmpV6Statistics.RouterSolicitsReceivedGet">
            <summary>Задает stub IcmpV6Statistics.get_RouterSolicitsReceived()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIcmpV6Statistics.RouterSolicitsSent">
            <summary>Задает stub IcmpV6Statistics.get_RouterSolicitsSent()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIcmpV6Statistics.RouterSolicitsSentGet">
            <summary>Задает stub IcmpV6Statistics.get_RouterSolicitsSent()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIcmpV6Statistics.TimeExceededMessagesReceived">
            <summary>Задает stub IcmpV6Statistics.get_TimeExceededMessagesReceived()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIcmpV6Statistics.TimeExceededMessagesReceivedGet">
            <summary>Задает stub IcmpV6Statistics.get_TimeExceededMessagesReceived()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubIcmpV6Statistics.TimeExceededMessagesSent">
            <summary>Задает stub IcmpV6Statistics.get_TimeExceededMessagesSent()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubIcmpV6Statistics.TimeExceededMessagesSentGet">
            <summary>Задает stub IcmpV6Statistics.get_TimeExceededMessagesSent()</summary>
        </member>
        <member name="T:System.Net.NetworkInformation.Fakes.StubMulticastIPAddressInformation">
            <summary>Тип заглушки System.Net.NetworkInformation.MulticastIPAddressInformation</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubMulticastIPAddressInformation.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubMulticastIPAddressInformation.Address">
            <summary>Задает stub IPAddressInformation.get_Address()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubMulticastIPAddressInformation.AddressGet">
            <summary>Задает stub IPAddressInformation.get_Address()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubMulticastIPAddressInformation.AddressPreferredLifetime">
            <summary>Задает stub MulticastIPAddressInformation.get_AddressPreferredLifetime()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubMulticastIPAddressInformation.AddressPreferredLifetimeGet">
            <summary>Задает stub MulticastIPAddressInformation.get_AddressPreferredLifetime()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubMulticastIPAddressInformation.AddressValidLifetime">
            <summary>Задает stub MulticastIPAddressInformation.get_AddressValidLifetime()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubMulticastIPAddressInformation.AddressValidLifetimeGet">
            <summary>Задает stub MulticastIPAddressInformation.get_AddressValidLifetime()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubMulticastIPAddressInformation.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubMulticastIPAddressInformation.DhcpLeaseLifetime">
            <summary>Задает stub MulticastIPAddressInformation.get_DhcpLeaseLifetime()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubMulticastIPAddressInformation.DhcpLeaseLifetimeGet">
            <summary>Задает stub MulticastIPAddressInformation.get_DhcpLeaseLifetime()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubMulticastIPAddressInformation.DuplicateAddressDetectionState">
            <summary>Задает stub MulticastIPAddressInformation.get_DuplicateAddressDetectionState()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubMulticastIPAddressInformation.DuplicateAddressDetectionStateGet">
            <summary>Задает stub MulticastIPAddressInformation.get_DuplicateAddressDetectionState()</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubMulticastIPAddressInformation.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubMulticastIPAddressInformation</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubMulticastIPAddressInformation.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubMulticastIPAddressInformation.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubMulticastIPAddressInformation.IsDnsEligible">
            <summary>Задает stub IPAddressInformation.get_IsDnsEligible()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubMulticastIPAddressInformation.IsDnsEligibleGet">
            <summary>Задает stub IPAddressInformation.get_IsDnsEligible()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubMulticastIPAddressInformation.IsTransient">
            <summary>Задает stub IPAddressInformation.get_IsTransient()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubMulticastIPAddressInformation.IsTransientGet">
            <summary>Задает stub IPAddressInformation.get_IsTransient()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubMulticastIPAddressInformation.PrefixOrigin">
            <summary>Задает stub MulticastIPAddressInformation.get_PrefixOrigin()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubMulticastIPAddressInformation.PrefixOriginGet">
            <summary>Задает stub MulticastIPAddressInformation.get_PrefixOrigin()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubMulticastIPAddressInformation.SuffixOrigin">
            <summary>Задает stub MulticastIPAddressInformation.get_SuffixOrigin()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubMulticastIPAddressInformation.SuffixOriginGet">
            <summary>Задает stub MulticastIPAddressInformation.get_SuffixOrigin()</summary>
        </member>
        <member name="T:System.Net.NetworkInformation.Fakes.StubMulticastIPAddressInformationCollection">
            <summary>Тип заглушки System.Net.NetworkInformation.MulticastIPAddressInformationCollection</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubMulticastIPAddressInformationCollection.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubMulticastIPAddressInformationCollection.Add(System.Net.NetworkInformation.MulticastIPAddressInformation)">
            <summary>Задает заглушка MulticastIPAddressInformationCollection.Add(MulticastIPAddressInformation address)</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubMulticastIPAddressInformationCollection.AddMulticastIPAddressInformation">
            <summary>Задает stub MulticastIPAddressInformationCollection.Add(MulticastIPAddressInformation address)</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubMulticastIPAddressInformationCollection.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubMulticastIPAddressInformationCollection.Clear">
            <summary>Задает заглушка MulticastIPAddressInformationCollection.Clear()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubMulticastIPAddressInformationCollection.Clear01">
            <summary>Задает stub MulticastIPAddressInformationCollection.Clear()</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubMulticastIPAddressInformationCollection.Contains(System.Net.NetworkInformation.MulticastIPAddressInformation)">
            <summary>Задает заглушка MulticastIPAddressInformationCollection.Contains(MulticastIPAddressInformation address)</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubMulticastIPAddressInformationCollection.ContainsMulticastIPAddressInformation">
            <summary>Задает stub MulticastIPAddressInformationCollection.Contains(MulticastIPAddressInformation address)</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubMulticastIPAddressInformationCollection.CopyTo(System.Net.NetworkInformation.MulticastIPAddressInformation[],System.Int32)">
            <summary>Задает заглушка MulticastIPAddressInformationCollection.CopyTo(MulticastIPAddressInformation[] array, Int32 offset)</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubMulticastIPAddressInformationCollection.CopyToMulticastIPAddressInformationArrayInt32">
            <summary>Задает stub MulticastIPAddressInformationCollection.CopyTo(MulticastIPAddressInformation[] array, Int32 offset)</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubMulticastIPAddressInformationCollection.Count">
            <summary>Задает stub MulticastIPAddressInformationCollection.get_Count()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubMulticastIPAddressInformationCollection.CountGet">
            <summary>Задает stub MulticastIPAddressInformationCollection.get_Count()</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubMulticastIPAddressInformationCollection.GetEnumerator">
            <summary>Задает заглушка MulticastIPAddressInformationCollection.GetEnumerator()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubMulticastIPAddressInformationCollection.GetEnumerator01">
            <summary>Задает stub MulticastIPAddressInformationCollection.GetEnumerator()</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubMulticastIPAddressInformationCollection.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubMulticastIPAddressInformationCollection</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubMulticastIPAddressInformationCollection.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubMulticastIPAddressInformationCollection.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubMulticastIPAddressInformationCollection.IsReadOnly">
            <summary>Задает stub MulticastIPAddressInformationCollection.get_IsReadOnly()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubMulticastIPAddressInformationCollection.IsReadOnlyGet">
            <summary>Задает stub MulticastIPAddressInformationCollection.get_IsReadOnly()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubMulticastIPAddressInformationCollection.Item(System.Int32)">
            <summary>Задает stub MulticastIPAddressInformationCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubMulticastIPAddressInformationCollection.ItemGetInt32">
            <summary>Задает stub MulticastIPAddressInformationCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubMulticastIPAddressInformationCollection.Remove(System.Net.NetworkInformation.MulticastIPAddressInformation)">
            <summary>Задает заглушка MulticastIPAddressInformationCollection.Remove(MulticastIPAddressInformation address)</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubMulticastIPAddressInformationCollection.RemoveMulticastIPAddressInformation">
            <summary>Задает stub MulticastIPAddressInformationCollection.Remove(MulticastIPAddressInformation address)</summary>
        </member>
        <member name="T:System.Net.NetworkInformation.Fakes.StubNetworkInformationException">
            <summary>Тип заглушки System.Net.NetworkInformation.NetworkInformationException</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubNetworkInformationException.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubNetworkInformationException.#ctor(System.Int32)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubNetworkInformationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubNetworkInformationException.AttachBackingFieldToHelpLink">
            <summary>Присоединение делегатов для эмуляции StubNetworkInformationException.HelpLink как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubNetworkInformationException.AttachBackingFieldToSource">
            <summary>Присоединение делегатов для эмуляции StubNetworkInformationException.Source как свойства с резервным полем.</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubNetworkInformationException.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubNetworkInformationException.Data">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubNetworkInformationException.DataGet">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubNetworkInformationException.ErrorCode">
            <summary>Задает stub NetworkInformationException.get_ErrorCode()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubNetworkInformationException.ErrorCodeGet">
            <summary>Задает stub NetworkInformationException.get_ErrorCode()</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubNetworkInformationException.GetBaseException">
            <summary>Задает заглушка Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubNetworkInformationException.GetBaseException01">
            <summary>Задает stub Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubNetworkInformationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка Win32Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubNetworkInformationException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub Win32Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubNetworkInformationException.HelpLink">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubNetworkInformationException.HelpLinkGet">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubNetworkInformationException.HelpLinkSetString">
            <summary>Задает stub Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubNetworkInformationException.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubNetworkInformationException</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubNetworkInformationException.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubNetworkInformationException.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubNetworkInformationException.Message">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubNetworkInformationException.MessageGet">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubNetworkInformationException.Source">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubNetworkInformationException.SourceGet">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubNetworkInformationException.SourceSetString">
            <summary>Задает stub Exception.set_Source(String value)</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubNetworkInformationException.StackTrace">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubNetworkInformationException.StackTraceGet">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubNetworkInformationException.ToString">
            <summary>Задает заглушка ExternalException.ToString()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubNetworkInformationException.ToString01">
            <summary>Задает stub ExternalException.ToString()</summary>
        </member>
        <member name="T:System.Net.NetworkInformation.Fakes.StubNetworkInterface">
            <summary>Тип заглушки System.Net.NetworkInformation.NetworkInterface</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubNetworkInterface.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubNetworkInterface.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubNetworkInterface.Description">
            <summary>Задает stub NetworkInterface.get_Description()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubNetworkInterface.DescriptionGet">
            <summary>Задает stub NetworkInterface.get_Description()</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubNetworkInterface.GetIPProperties">
            <summary>Задает заглушка NetworkInterface.GetIPProperties()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubNetworkInterface.GetIPProperties01">
            <summary>Задает stub NetworkInterface.GetIPProperties()</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubNetworkInterface.GetIPStatistics">
            <summary>Задает заглушка NetworkInterface.GetIPStatistics()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubNetworkInterface.GetIPStatistics01">
            <summary>Задает stub NetworkInterface.GetIPStatistics()</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubNetworkInterface.GetIPv4Statistics">
            <summary>Задает заглушка NetworkInterface.GetIPv4Statistics()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubNetworkInterface.GetIPv4Statistics01">
            <summary>Задает stub NetworkInterface.GetIPv4Statistics()</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubNetworkInterface.GetPhysicalAddress">
            <summary>Задает заглушка NetworkInterface.GetPhysicalAddress()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubNetworkInterface.GetPhysicalAddress01">
            <summary>Задает stub NetworkInterface.GetPhysicalAddress()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubNetworkInterface.Id">
            <summary>Задает stub NetworkInterface.get_Id()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubNetworkInterface.IdGet">
            <summary>Задает stub NetworkInterface.get_Id()</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubNetworkInterface.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubNetworkInterface</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubNetworkInterface.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubNetworkInterface.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubNetworkInterface.IsReceiveOnly">
            <summary>Задает stub NetworkInterface.get_IsReceiveOnly()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubNetworkInterface.IsReceiveOnlyGet">
            <summary>Задает stub NetworkInterface.get_IsReceiveOnly()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubNetworkInterface.Name">
            <summary>Задает stub NetworkInterface.get_Name()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubNetworkInterface.NameGet">
            <summary>Задает stub NetworkInterface.get_Name()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubNetworkInterface.NetworkInterfaceType">
            <summary>Задает stub NetworkInterface.get_NetworkInterfaceType()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubNetworkInterface.NetworkInterfaceTypeGet">
            <summary>Задает stub NetworkInterface.get_NetworkInterfaceType()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubNetworkInterface.OperationalStatus">
            <summary>Задает stub NetworkInterface.get_OperationalStatus()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubNetworkInterface.OperationalStatusGet">
            <summary>Задает stub NetworkInterface.get_OperationalStatus()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubNetworkInterface.Speed">
            <summary>Задает stub NetworkInterface.get_Speed()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubNetworkInterface.SpeedGet">
            <summary>Задает stub NetworkInterface.get_Speed()</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubNetworkInterface.Supports(System.Net.NetworkInformation.NetworkInterfaceComponent)">
            <summary>Задает заглушка NetworkInterface.Supports(NetworkInterfaceComponent networkInterfaceComponent)</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubNetworkInterface.SupportsMulticast">
            <summary>Задает stub NetworkInterface.get_SupportsMulticast()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubNetworkInterface.SupportsMulticastGet">
            <summary>Задает stub NetworkInterface.get_SupportsMulticast()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubNetworkInterface.SupportsNetworkInterfaceComponent">
            <summary>Задает stub NetworkInterface.Supports(NetworkInterfaceComponent networkInterfaceComponent)</summary>
        </member>
        <member name="T:System.Net.NetworkInformation.Fakes.StubPhysicalAddress">
            <summary>Тип заглушки System.Net.NetworkInformation.PhysicalAddress</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubPhysicalAddress.#ctor(System.Byte[])">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubPhysicalAddress.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubPhysicalAddress.Equals(System.Object)">
            <summary>Задает заглушка PhysicalAddress.Equals(Object comparand)</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubPhysicalAddress.EqualsObject">
            <summary>Задает stub PhysicalAddress.Equals(Object comparand)</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubPhysicalAddress.GetHashCode">
            <summary>Задает заглушка PhysicalAddress.GetHashCode()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubPhysicalAddress.GetHashCode01">
            <summary>Задает stub PhysicalAddress.GetHashCode()</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubPhysicalAddress.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubPhysicalAddress</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubPhysicalAddress.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubPhysicalAddress.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubPhysicalAddress.ToString">
            <summary>Задает заглушка PhysicalAddress.ToString()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubPhysicalAddress.ToString01">
            <summary>Задает stub PhysicalAddress.ToString()</summary>
        </member>
        <member name="T:System.Net.NetworkInformation.Fakes.StubPing">
            <summary>Тип заглушки System.Net.NetworkInformation.Ping</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubPing.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubPing.AttachBackingFieldToSite">
            <summary>Присоединение делегатов для эмуляции StubPing.Site как свойства с резервным полем.</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubPing.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubPing.CanRaiseEvents">
            <summary>Задает stub Component.get_CanRaiseEvents()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubPing.CanRaiseEventsGet">
            <summary>Задает stub Component.get_CanRaiseEvents()</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubPing.Dispose(System.Boolean)">
            <summary>Задает заглушка Ping.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubPing.DisposeBoolean">
            <summary>Задает stub Ping.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubPing.GetService(System.Type)">
            <summary>Задает заглушка Component.GetService(Type service)</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubPing.GetServiceType">
            <summary>Задает stub Component.GetService(Type service)</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubPing.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubPing</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubPing.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubPing.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubPing.Site">
            <summary>Задает stub Component.get_Site()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubPing.SiteGet">
            <summary>Задает stub Component.get_Site()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubPing.SiteSetISite">
            <summary>Задает stub Component.set_Site(ISite value)</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubPing.ToString">
            <summary>Задает заглушка Component.ToString()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubPing.ToString01">
            <summary>Задает stub Component.ToString()</summary>
        </member>
        <member name="T:System.Net.NetworkInformation.Fakes.StubPingException">
            <summary>Тип заглушки System.Net.NetworkInformation.PingException</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubPingException.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubPingException.#ctor(System.String,System.Exception)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubPingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubPingException.AttachBackingFieldToHelpLink">
            <summary>Присоединение делегатов для эмуляции StubPingException.HelpLink как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubPingException.AttachBackingFieldToSource">
            <summary>Присоединение делегатов для эмуляции StubPingException.Source как свойства с резервным полем.</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubPingException.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubPingException.Data">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubPingException.DataGet">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubPingException.GetBaseException">
            <summary>Задает заглушка Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubPingException.GetBaseException01">
            <summary>Задает stub Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubPingException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubPingException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubPingException.HelpLink">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubPingException.HelpLinkGet">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubPingException.HelpLinkSetString">
            <summary>Задает stub Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubPingException.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubPingException</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubPingException.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubPingException.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubPingException.Message">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubPingException.MessageGet">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubPingException.Source">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubPingException.SourceGet">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubPingException.SourceSetString">
            <summary>Задает stub Exception.set_Source(String value)</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubPingException.StackTrace">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubPingException.StackTraceGet">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubPingException.ToString">
            <summary>Задает заглушка Exception.ToString()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubPingException.ToString01">
            <summary>Задает stub Exception.ToString()</summary>
        </member>
        <member name="T:System.Net.NetworkInformation.Fakes.StubPingOptions">
            <summary>Тип заглушки System.Net.NetworkInformation.PingOptions</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubPingOptions.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubPingOptions.#ctor(System.Int32,System.Boolean)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubPingOptions.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubPingOptions.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubPingOptions</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubPingOptions.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubPingOptions.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Net.NetworkInformation.Fakes.StubTcpConnectionInformation">
            <summary>Тип заглушки System.Net.NetworkInformation.TcpConnectionInformation</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubTcpConnectionInformation.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubTcpConnectionInformation.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubTcpConnectionInformation.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubTcpConnectionInformation</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubTcpConnectionInformation.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubTcpConnectionInformation.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubTcpConnectionInformation.LocalEndPoint">
            <summary>Задает stub TcpConnectionInformation.get_LocalEndPoint()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubTcpConnectionInformation.LocalEndPointGet">
            <summary>Задает stub TcpConnectionInformation.get_LocalEndPoint()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubTcpConnectionInformation.RemoteEndPoint">
            <summary>Задает stub TcpConnectionInformation.get_RemoteEndPoint()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubTcpConnectionInformation.RemoteEndPointGet">
            <summary>Задает stub TcpConnectionInformation.get_RemoteEndPoint()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubTcpConnectionInformation.State">
            <summary>Задает stub TcpConnectionInformation.get_State()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubTcpConnectionInformation.StateGet">
            <summary>Задает stub TcpConnectionInformation.get_State()</summary>
        </member>
        <member name="T:System.Net.NetworkInformation.Fakes.StubTcpStatistics">
            <summary>Тип заглушки System.Net.NetworkInformation.TcpStatistics</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubTcpStatistics.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubTcpStatistics.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubTcpStatistics.ConnectionsAccepted">
            <summary>Задает stub TcpStatistics.get_ConnectionsAccepted()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubTcpStatistics.ConnectionsAcceptedGet">
            <summary>Задает stub TcpStatistics.get_ConnectionsAccepted()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubTcpStatistics.ConnectionsInitiated">
            <summary>Задает stub TcpStatistics.get_ConnectionsInitiated()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubTcpStatistics.ConnectionsInitiatedGet">
            <summary>Задает stub TcpStatistics.get_ConnectionsInitiated()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubTcpStatistics.CumulativeConnections">
            <summary>Задает stub TcpStatistics.get_CumulativeConnections()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubTcpStatistics.CumulativeConnectionsGet">
            <summary>Задает stub TcpStatistics.get_CumulativeConnections()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubTcpStatistics.CurrentConnections">
            <summary>Задает stub TcpStatistics.get_CurrentConnections()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubTcpStatistics.CurrentConnectionsGet">
            <summary>Задает stub TcpStatistics.get_CurrentConnections()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubTcpStatistics.ErrorsReceived">
            <summary>Задает stub TcpStatistics.get_ErrorsReceived()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubTcpStatistics.ErrorsReceivedGet">
            <summary>Задает stub TcpStatistics.get_ErrorsReceived()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubTcpStatistics.FailedConnectionAttempts">
            <summary>Задает stub TcpStatistics.get_FailedConnectionAttempts()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubTcpStatistics.FailedConnectionAttemptsGet">
            <summary>Задает stub TcpStatistics.get_FailedConnectionAttempts()</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubTcpStatistics.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubTcpStatistics</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubTcpStatistics.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubTcpStatistics.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubTcpStatistics.MaximumConnections">
            <summary>Задает stub TcpStatistics.get_MaximumConnections()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubTcpStatistics.MaximumConnectionsGet">
            <summary>Задает stub TcpStatistics.get_MaximumConnections()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubTcpStatistics.MaximumTransmissionTimeout">
            <summary>Задает stub TcpStatistics.get_MaximumTransmissionTimeout()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubTcpStatistics.MaximumTransmissionTimeoutGet">
            <summary>Задает stub TcpStatistics.get_MaximumTransmissionTimeout()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubTcpStatistics.MinimumTransmissionTimeout">
            <summary>Задает stub TcpStatistics.get_MinimumTransmissionTimeout()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubTcpStatistics.MinimumTransmissionTimeoutGet">
            <summary>Задает stub TcpStatistics.get_MinimumTransmissionTimeout()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubTcpStatistics.ResetConnections">
            <summary>Задает stub TcpStatistics.get_ResetConnections()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubTcpStatistics.ResetConnectionsGet">
            <summary>Задает stub TcpStatistics.get_ResetConnections()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubTcpStatistics.ResetsSent">
            <summary>Задает stub TcpStatistics.get_ResetsSent()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubTcpStatistics.ResetsSentGet">
            <summary>Задает stub TcpStatistics.get_ResetsSent()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubTcpStatistics.SegmentsReceived">
            <summary>Задает stub TcpStatistics.get_SegmentsReceived()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubTcpStatistics.SegmentsReceivedGet">
            <summary>Задает stub TcpStatistics.get_SegmentsReceived()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubTcpStatistics.SegmentsResent">
            <summary>Задает stub TcpStatistics.get_SegmentsResent()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubTcpStatistics.SegmentsResentGet">
            <summary>Задает stub TcpStatistics.get_SegmentsResent()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubTcpStatistics.SegmentsSent">
            <summary>Задает stub TcpStatistics.get_SegmentsSent()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubTcpStatistics.SegmentsSentGet">
            <summary>Задает stub TcpStatistics.get_SegmentsSent()</summary>
        </member>
        <member name="T:System.Net.NetworkInformation.Fakes.StubUdpStatistics">
            <summary>Тип заглушки System.Net.NetworkInformation.UdpStatistics</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubUdpStatistics.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubUdpStatistics.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubUdpStatistics.DatagramsReceived">
            <summary>Задает stub UdpStatistics.get_DatagramsReceived()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubUdpStatistics.DatagramsReceivedGet">
            <summary>Задает stub UdpStatistics.get_DatagramsReceived()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubUdpStatistics.DatagramsSent">
            <summary>Задает stub UdpStatistics.get_DatagramsSent()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubUdpStatistics.DatagramsSentGet">
            <summary>Задает stub UdpStatistics.get_DatagramsSent()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubUdpStatistics.IncomingDatagramsDiscarded">
            <summary>Задает stub UdpStatistics.get_IncomingDatagramsDiscarded()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubUdpStatistics.IncomingDatagramsDiscardedGet">
            <summary>Задает stub UdpStatistics.get_IncomingDatagramsDiscarded()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubUdpStatistics.IncomingDatagramsWithErrors">
            <summary>Задает stub UdpStatistics.get_IncomingDatagramsWithErrors()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubUdpStatistics.IncomingDatagramsWithErrorsGet">
            <summary>Задает stub UdpStatistics.get_IncomingDatagramsWithErrors()</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubUdpStatistics.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubUdpStatistics</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubUdpStatistics.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubUdpStatistics.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubUdpStatistics.UdpListeners">
            <summary>Задает stub UdpStatistics.get_UdpListeners()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubUdpStatistics.UdpListenersGet">
            <summary>Задает stub UdpStatistics.get_UdpListeners()</summary>
        </member>
        <member name="T:System.Net.NetworkInformation.Fakes.StubUnicastIPAddressInformation">
            <summary>Тип заглушки System.Net.NetworkInformation.UnicastIPAddressInformation</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubUnicastIPAddressInformation.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubUnicastIPAddressInformation.Address">
            <summary>Задает stub IPAddressInformation.get_Address()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubUnicastIPAddressInformation.AddressGet">
            <summary>Задает stub IPAddressInformation.get_Address()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubUnicastIPAddressInformation.AddressPreferredLifetime">
            <summary>Задает stub UnicastIPAddressInformation.get_AddressPreferredLifetime()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubUnicastIPAddressInformation.AddressPreferredLifetimeGet">
            <summary>Задает stub UnicastIPAddressInformation.get_AddressPreferredLifetime()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubUnicastIPAddressInformation.AddressValidLifetime">
            <summary>Задает stub UnicastIPAddressInformation.get_AddressValidLifetime()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubUnicastIPAddressInformation.AddressValidLifetimeGet">
            <summary>Задает stub UnicastIPAddressInformation.get_AddressValidLifetime()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubUnicastIPAddressInformation.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubUnicastIPAddressInformation.DhcpLeaseLifetime">
            <summary>Задает stub UnicastIPAddressInformation.get_DhcpLeaseLifetime()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubUnicastIPAddressInformation.DhcpLeaseLifetimeGet">
            <summary>Задает stub UnicastIPAddressInformation.get_DhcpLeaseLifetime()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubUnicastIPAddressInformation.DuplicateAddressDetectionState">
            <summary>Задает stub UnicastIPAddressInformation.get_DuplicateAddressDetectionState()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubUnicastIPAddressInformation.DuplicateAddressDetectionStateGet">
            <summary>Задает stub UnicastIPAddressInformation.get_DuplicateAddressDetectionState()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubUnicastIPAddressInformation.IPv4Mask">
            <summary>Задает stub UnicastIPAddressInformation.get_IPv4Mask()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubUnicastIPAddressInformation.IPv4MaskGet">
            <summary>Задает stub UnicastIPAddressInformation.get_IPv4Mask()</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubUnicastIPAddressInformation.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubUnicastIPAddressInformation</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubUnicastIPAddressInformation.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubUnicastIPAddressInformation.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubUnicastIPAddressInformation.IsDnsEligible">
            <summary>Задает stub IPAddressInformation.get_IsDnsEligible()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubUnicastIPAddressInformation.IsDnsEligibleGet">
            <summary>Задает stub IPAddressInformation.get_IsDnsEligible()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubUnicastIPAddressInformation.IsTransient">
            <summary>Задает stub IPAddressInformation.get_IsTransient()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubUnicastIPAddressInformation.IsTransientGet">
            <summary>Задает stub IPAddressInformation.get_IsTransient()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubUnicastIPAddressInformation.PrefixLength">
            <summary>Задает stub UnicastIPAddressInformation.get_PrefixLength()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubUnicastIPAddressInformation.PrefixLengthGet">
            <summary>Задает stub UnicastIPAddressInformation.get_PrefixLength()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubUnicastIPAddressInformation.PrefixOrigin">
            <summary>Задает stub UnicastIPAddressInformation.get_PrefixOrigin()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubUnicastIPAddressInformation.PrefixOriginGet">
            <summary>Задает stub UnicastIPAddressInformation.get_PrefixOrigin()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubUnicastIPAddressInformation.SuffixOrigin">
            <summary>Задает stub UnicastIPAddressInformation.get_SuffixOrigin()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubUnicastIPAddressInformation.SuffixOriginGet">
            <summary>Задает stub UnicastIPAddressInformation.get_SuffixOrigin()</summary>
        </member>
        <member name="T:System.Net.NetworkInformation.Fakes.StubUnicastIPAddressInformationCollection">
            <summary>Тип заглушки System.Net.NetworkInformation.UnicastIPAddressInformationCollection</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubUnicastIPAddressInformationCollection.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubUnicastIPAddressInformationCollection.Add(System.Net.NetworkInformation.UnicastIPAddressInformation)">
            <summary>Задает заглушка UnicastIPAddressInformationCollection.Add(UnicastIPAddressInformation address)</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubUnicastIPAddressInformationCollection.AddUnicastIPAddressInformation">
            <summary>Задает stub UnicastIPAddressInformationCollection.Add(UnicastIPAddressInformation address)</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubUnicastIPAddressInformationCollection.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubUnicastIPAddressInformationCollection.Clear">
            <summary>Задает заглушка UnicastIPAddressInformationCollection.Clear()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubUnicastIPAddressInformationCollection.Clear01">
            <summary>Задает stub UnicastIPAddressInformationCollection.Clear()</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubUnicastIPAddressInformationCollection.Contains(System.Net.NetworkInformation.UnicastIPAddressInformation)">
            <summary>Задает заглушка UnicastIPAddressInformationCollection.Contains(UnicastIPAddressInformation address)</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubUnicastIPAddressInformationCollection.ContainsUnicastIPAddressInformation">
            <summary>Задает stub UnicastIPAddressInformationCollection.Contains(UnicastIPAddressInformation address)</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubUnicastIPAddressInformationCollection.CopyTo(System.Net.NetworkInformation.UnicastIPAddressInformation[],System.Int32)">
            <summary>Задает заглушка UnicastIPAddressInformationCollection.CopyTo(UnicastIPAddressInformation[] array, Int32 offset)</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubUnicastIPAddressInformationCollection.CopyToUnicastIPAddressInformationArrayInt32">
            <summary>Задает stub UnicastIPAddressInformationCollection.CopyTo(UnicastIPAddressInformation[] array, Int32 offset)</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubUnicastIPAddressInformationCollection.Count">
            <summary>Задает stub UnicastIPAddressInformationCollection.get_Count()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubUnicastIPAddressInformationCollection.CountGet">
            <summary>Задает stub UnicastIPAddressInformationCollection.get_Count()</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubUnicastIPAddressInformationCollection.GetEnumerator">
            <summary>Задает заглушка UnicastIPAddressInformationCollection.GetEnumerator()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubUnicastIPAddressInformationCollection.GetEnumerator01">
            <summary>Задает stub UnicastIPAddressInformationCollection.GetEnumerator()</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubUnicastIPAddressInformationCollection.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubUnicastIPAddressInformationCollection</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubUnicastIPAddressInformationCollection.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubUnicastIPAddressInformationCollection.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubUnicastIPAddressInformationCollection.IsReadOnly">
            <summary>Задает stub UnicastIPAddressInformationCollection.get_IsReadOnly()</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubUnicastIPAddressInformationCollection.IsReadOnlyGet">
            <summary>Задает stub UnicastIPAddressInformationCollection.get_IsReadOnly()</summary>
        </member>
        <member name="P:System.Net.NetworkInformation.Fakes.StubUnicastIPAddressInformationCollection.Item(System.Int32)">
            <summary>Задает stub UnicastIPAddressInformationCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubUnicastIPAddressInformationCollection.ItemGetInt32">
            <summary>Задает stub UnicastIPAddressInformationCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.Fakes.StubUnicastIPAddressInformationCollection.Remove(System.Net.NetworkInformation.UnicastIPAddressInformation)">
            <summary>Задает заглушка UnicastIPAddressInformationCollection.Remove(UnicastIPAddressInformation address)</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.Fakes.StubUnicastIPAddressInformationCollection.RemoveUnicastIPAddressInformation">
            <summary>Задает stub UnicastIPAddressInformationCollection.Remove(UnicastIPAddressInformation address)</summary>
        </member>
        <member name="T:System.Net.Security.Fakes.StubAuthenticatedStream">
            <summary>Тип заглушки System.Net.Security.AuthenticatedStream</summary>
        </member>
        <member name="M:System.Net.Security.Fakes.StubAuthenticatedStream.#ctor(System.IO.Stream,System.Boolean)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Security.Fakes.StubAuthenticatedStream.AttachBackingFieldToPosition">
            <summary>Присоединение делегатов для эмуляции StubAuthenticatedStream.Position как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Net.Security.Fakes.StubAuthenticatedStream.AttachBackingFieldToReadTimeout">
            <summary>Присоединение делегатов для эмуляции StubAuthenticatedStream.ReadTimeout как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Net.Security.Fakes.StubAuthenticatedStream.AttachBackingFieldToWriteTimeout">
            <summary>Присоединение делегатов для эмуляции StubAuthenticatedStream.WriteTimeout как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Net.Security.Fakes.StubAuthenticatedStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>Задает заглушка Stream.BeginRead(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubAuthenticatedStream.BeginReadByteArrayInt32Int32AsyncCallbackObject">
            <summary>Задает stub Stream.BeginRead(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:System.Net.Security.Fakes.StubAuthenticatedStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>Задает заглушка Stream.BeginWrite(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubAuthenticatedStream.BeginWriteByteArrayInt32Int32AsyncCallbackObject">
            <summary>Задает stub Stream.BeginWrite(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:System.Net.Security.Fakes.StubAuthenticatedStream.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Net.Security.Fakes.StubAuthenticatedStream.CanRead">
            <summary>Задает stub Stream.get_CanRead()</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubAuthenticatedStream.CanReadGet">
            <summary>Задает stub Stream.get_CanRead()</summary>
        </member>
        <member name="P:System.Net.Security.Fakes.StubAuthenticatedStream.CanSeek">
            <summary>Задает stub Stream.get_CanSeek()</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubAuthenticatedStream.CanSeekGet">
            <summary>Задает stub Stream.get_CanSeek()</summary>
        </member>
        <member name="P:System.Net.Security.Fakes.StubAuthenticatedStream.CanTimeout">
            <summary>Задает stub Stream.get_CanTimeout()</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubAuthenticatedStream.CanTimeoutGet">
            <summary>Задает stub Stream.get_CanTimeout()</summary>
        </member>
        <member name="P:System.Net.Security.Fakes.StubAuthenticatedStream.CanWrite">
            <summary>Задает stub Stream.get_CanWrite()</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubAuthenticatedStream.CanWriteGet">
            <summary>Задает stub Stream.get_CanWrite()</summary>
        </member>
        <member name="M:System.Net.Security.Fakes.StubAuthenticatedStream.Close">
            <summary>Задает заглушка Stream.Close()</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubAuthenticatedStream.Close01">
            <summary>Задает stub Stream.Close()</summary>
        </member>
        <member name="M:System.Net.Security.Fakes.StubAuthenticatedStream.CreateWaitHandle">
            <summary>Задает заглушка Stream.CreateWaitHandle()</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubAuthenticatedStream.CreateWaitHandle01">
            <summary>Задает stub Stream.CreateWaitHandle()</summary>
        </member>
        <member name="M:System.Net.Security.Fakes.StubAuthenticatedStream.Dispose(System.Boolean)">
            <summary>Задает заглушка AuthenticatedStream.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubAuthenticatedStream.DisposeBoolean">
            <summary>Задает stub AuthenticatedStream.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:System.Net.Security.Fakes.StubAuthenticatedStream.EndRead(System.IAsyncResult)">
            <summary>Задает заглушка Stream.EndRead(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubAuthenticatedStream.EndReadIAsyncResult">
            <summary>Задает stub Stream.EndRead(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:System.Net.Security.Fakes.StubAuthenticatedStream.EndWrite(System.IAsyncResult)">
            <summary>Задает заглушка Stream.EndWrite(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubAuthenticatedStream.EndWriteIAsyncResult">
            <summary>Задает stub Stream.EndWrite(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:System.Net.Security.Fakes.StubAuthenticatedStream.Flush">
            <summary>Задает заглушка Stream.Flush()</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubAuthenticatedStream.Flush01">
            <summary>Задает stub Stream.Flush()</summary>
        </member>
        <member name="M:System.Net.Security.Fakes.StubAuthenticatedStream.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubAuthenticatedStream</summary>
        </member>
        <member name="P:System.Net.Security.Fakes.StubAuthenticatedStream.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Net.Security.Fakes.StubAuthenticatedStream.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Net.Security.Fakes.StubAuthenticatedStream.IsAuthenticated">
            <summary>Задает stub AuthenticatedStream.get_IsAuthenticated()</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubAuthenticatedStream.IsAuthenticatedGet">
            <summary>Задает stub AuthenticatedStream.get_IsAuthenticated()</summary>
        </member>
        <member name="P:System.Net.Security.Fakes.StubAuthenticatedStream.IsEncrypted">
            <summary>Задает stub AuthenticatedStream.get_IsEncrypted()</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubAuthenticatedStream.IsEncryptedGet">
            <summary>Задает stub AuthenticatedStream.get_IsEncrypted()</summary>
        </member>
        <member name="P:System.Net.Security.Fakes.StubAuthenticatedStream.IsMutuallyAuthenticated">
            <summary>Задает stub AuthenticatedStream.get_IsMutuallyAuthenticated()</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubAuthenticatedStream.IsMutuallyAuthenticatedGet">
            <summary>Задает stub AuthenticatedStream.get_IsMutuallyAuthenticated()</summary>
        </member>
        <member name="P:System.Net.Security.Fakes.StubAuthenticatedStream.IsServer">
            <summary>Задает stub AuthenticatedStream.get_IsServer()</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubAuthenticatedStream.IsServerGet">
            <summary>Задает stub AuthenticatedStream.get_IsServer()</summary>
        </member>
        <member name="P:System.Net.Security.Fakes.StubAuthenticatedStream.IsSigned">
            <summary>Задает stub AuthenticatedStream.get_IsSigned()</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubAuthenticatedStream.IsSignedGet">
            <summary>Задает stub AuthenticatedStream.get_IsSigned()</summary>
        </member>
        <member name="P:System.Net.Security.Fakes.StubAuthenticatedStream.Length">
            <summary>Задает stub Stream.get_Length()</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubAuthenticatedStream.LengthGet">
            <summary>Задает stub Stream.get_Length()</summary>
        </member>
        <member name="M:System.Net.Security.Fakes.StubAuthenticatedStream.ObjectInvariant">
            <summary>Задает заглушка Stream.ObjectInvariant()</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubAuthenticatedStream.ObjectInvariant01">
            <summary>Задает stub Stream.ObjectInvariant()</summary>
        </member>
        <member name="P:System.Net.Security.Fakes.StubAuthenticatedStream.Position">
            <summary>Задает stub Stream.get_Position()</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubAuthenticatedStream.PositionGet">
            <summary>Задает stub Stream.get_Position()</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubAuthenticatedStream.PositionSetInt64">
            <summary>Задает stub Stream.set_Position(Int64 value)</summary>
        </member>
        <member name="M:System.Net.Security.Fakes.StubAuthenticatedStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>Задает заглушка Stream.Read(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="M:System.Net.Security.Fakes.StubAuthenticatedStream.ReadByte">
            <summary>Задает заглушка Stream.ReadByte()</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubAuthenticatedStream.ReadByte01">
            <summary>Задает stub Stream.ReadByte()</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubAuthenticatedStream.ReadByteArrayInt32Int32">
            <summary>Задает stub Stream.Read(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:System.Net.Security.Fakes.StubAuthenticatedStream.ReadTimeout">
            <summary>Задает stub Stream.get_ReadTimeout()</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubAuthenticatedStream.ReadTimeoutGet">
            <summary>Задает stub Stream.get_ReadTimeout()</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubAuthenticatedStream.ReadTimeoutSetInt32">
            <summary>Задает stub Stream.set_ReadTimeout(Int32 value)</summary>
        </member>
        <member name="M:System.Net.Security.Fakes.StubAuthenticatedStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>Задает заглушка Stream.Seek(Int64 offset, SeekOrigin origin)</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubAuthenticatedStream.SeekInt64SeekOrigin">
            <summary>Задает stub Stream.Seek(Int64 offset, SeekOrigin origin)</summary>
        </member>
        <member name="M:System.Net.Security.Fakes.StubAuthenticatedStream.SetLength(System.Int64)">
            <summary>Задает заглушка Stream.SetLength(Int64 value)</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubAuthenticatedStream.SetLengthInt64">
            <summary>Задает stub Stream.SetLength(Int64 value)</summary>
        </member>
        <member name="M:System.Net.Security.Fakes.StubAuthenticatedStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>Задает заглушка Stream.Write(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="M:System.Net.Security.Fakes.StubAuthenticatedStream.WriteByte(System.Byte)">
            <summary>Задает заглушка Stream.WriteByte(Byte value)</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubAuthenticatedStream.WriteByteArrayInt32Int32">
            <summary>Задает stub Stream.Write(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubAuthenticatedStream.WriteByteByte">
            <summary>Задает stub Stream.WriteByte(Byte value)</summary>
        </member>
        <member name="P:System.Net.Security.Fakes.StubAuthenticatedStream.WriteTimeout">
            <summary>Задает stub Stream.get_WriteTimeout()</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubAuthenticatedStream.WriteTimeoutGet">
            <summary>Задает stub Stream.get_WriteTimeout()</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubAuthenticatedStream.WriteTimeoutSetInt32">
            <summary>Задает stub Stream.set_WriteTimeout(Int32 value)</summary>
        </member>
        <member name="T:System.Net.Security.Fakes.StubNegotiateStream">
            <summary>Тип заглушки System.Net.Security.NegotiateStream</summary>
        </member>
        <member name="M:System.Net.Security.Fakes.StubNegotiateStream.#ctor(System.IO.Stream)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Security.Fakes.StubNegotiateStream.#ctor(System.IO.Stream,System.Boolean)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Security.Fakes.StubNegotiateStream.AttachBackingFieldToPosition">
            <summary>Присоединение делегатов для эмуляции StubNegotiateStream.Position как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Net.Security.Fakes.StubNegotiateStream.AttachBackingFieldToReadTimeout">
            <summary>Присоединение делегатов для эмуляции StubNegotiateStream.ReadTimeout как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Net.Security.Fakes.StubNegotiateStream.AttachBackingFieldToWriteTimeout">
            <summary>Присоединение делегатов для эмуляции StubNegotiateStream.WriteTimeout как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Net.Security.Fakes.StubNegotiateStream.AuthenticateAsClient">
            <summary>Задает заглушка NegotiateStream.AuthenticateAsClient()</summary>
        </member>
        <member name="M:System.Net.Security.Fakes.StubNegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String)">
            <summary>Задает заглушка NegotiateStream.AuthenticateAsClient(NetworkCredential credential, String targetName)</summary>
        </member>
        <member name="M:System.Net.Security.Fakes.StubNegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
            <summary>Задает заглушка NegotiateStream.AuthenticateAsClient(NetworkCredential credential, ChannelBinding binding, String targetName)</summary>
        </member>
        <member name="M:System.Net.Security.Fakes.StubNegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
            <summary>Задает заглушка NegotiateStream.AuthenticateAsClient(NetworkCredential credential, String targetName, ProtectionLevel requiredProtectionLevel, TokenImpersonationLevel allowedImpersonationLevel)</summary>
        </member>
        <member name="M:System.Net.Security.Fakes.StubNegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
            <summary>Задает заглушка NegotiateStream.AuthenticateAsClient(NetworkCredential credential, ChannelBinding binding, String targetName, ProtectionLevel requiredProtectionLevel, TokenImpersonationLevel allowedImpersonationLevel)</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubNegotiateStream.AuthenticateAsClient01">
            <summary>Задает stub NegotiateStream.AuthenticateAsClient()</summary>
        </member>
        <member name="M:System.Net.Security.Fakes.StubNegotiateStream.AuthenticateAsClientAsync">
            <summary>Задает заглушка NegotiateStream.AuthenticateAsClientAsync()</summary>
        </member>
        <member name="M:System.Net.Security.Fakes.StubNegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String)">
            <summary>Задает заглушка NegotiateStream.AuthenticateAsClientAsync(NetworkCredential credential, String targetName)</summary>
        </member>
        <member name="M:System.Net.Security.Fakes.StubNegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
            <summary>Задает заглушка NegotiateStream.AuthenticateAsClientAsync(NetworkCredential credential, ChannelBinding binding, String targetName)</summary>
        </member>
        <member name="M:System.Net.Security.Fakes.StubNegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
            <summary>Задает заглушка NegotiateStream.AuthenticateAsClientAsync(NetworkCredential credential, String targetName, ProtectionLevel requiredProtectionLevel, TokenImpersonationLevel allowedImpersonationLevel)</summary>
        </member>
        <member name="M:System.Net.Security.Fakes.StubNegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
            <summary>Задает заглушка NegotiateStream.AuthenticateAsClientAsync(NetworkCredential credential, ChannelBinding binding, String targetName, ProtectionLevel requiredProtectionLevel, TokenImpersonationLevel allowedImpersonationLevel)</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubNegotiateStream.AuthenticateAsClientAsync01">
            <summary>Задает stub NegotiateStream.AuthenticateAsClientAsync()</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubNegotiateStream.AuthenticateAsClientAsyncNetworkCredentialChannelBindingString">
            <summary>Задает stub NegotiateStream.AuthenticateAsClientAsync(NetworkCredential credential, ChannelBinding binding, String targetName)</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubNegotiateStream.AuthenticateAsClientAsyncNetworkCredentialChannelBindingStringProtectionLevelTokenImpersonationLevel">
            <summary>Задает stub NegotiateStream.AuthenticateAsClientAsync(NetworkCredential credential, ChannelBinding binding, String targetName, ProtectionLevel requiredProtectionLevel, TokenImpersonationLevel allowedImpersonationLevel)</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubNegotiateStream.AuthenticateAsClientAsyncNetworkCredentialString">
            <summary>Задает stub NegotiateStream.AuthenticateAsClientAsync(NetworkCredential credential, String targetName)</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubNegotiateStream.AuthenticateAsClientAsyncNetworkCredentialStringProtectionLevelTokenImpersonationLevel">
            <summary>Задает stub NegotiateStream.AuthenticateAsClientAsync(NetworkCredential credential, String targetName, ProtectionLevel requiredProtectionLevel, TokenImpersonationLevel allowedImpersonationLevel)</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubNegotiateStream.AuthenticateAsClientNetworkCredentialChannelBindingString">
            <summary>Задает stub NegotiateStream.AuthenticateAsClient(NetworkCredential credential, ChannelBinding binding, String targetName)</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubNegotiateStream.AuthenticateAsClientNetworkCredentialChannelBindingStringProtectionLevelTokenImpersonationLevel">
            <summary>Задает stub NegotiateStream.AuthenticateAsClient(NetworkCredential credential, ChannelBinding binding, String targetName, ProtectionLevel requiredProtectionLevel, TokenImpersonationLevel allowedImpersonationLevel)</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubNegotiateStream.AuthenticateAsClientNetworkCredentialString">
            <summary>Задает stub NegotiateStream.AuthenticateAsClient(NetworkCredential credential, String targetName)</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubNegotiateStream.AuthenticateAsClientNetworkCredentialStringProtectionLevelTokenImpersonationLevel">
            <summary>Задает stub NegotiateStream.AuthenticateAsClient(NetworkCredential credential, String targetName, ProtectionLevel requiredProtectionLevel, TokenImpersonationLevel allowedImpersonationLevel)</summary>
        </member>
        <member name="M:System.Net.Security.Fakes.StubNegotiateStream.AuthenticateAsServer">
            <summary>Задает заглушка NegotiateStream.AuthenticateAsServer()</summary>
        </member>
        <member name="M:System.Net.Security.Fakes.StubNegotiateStream.AuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)">
            <summary>Задает заглушка NegotiateStream.AuthenticateAsServer(ExtendedProtectionPolicy policy)</summary>
        </member>
        <member name="M:System.Net.Security.Fakes.StubNegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
            <summary>Задает заглушка NegotiateStream.AuthenticateAsServer(NetworkCredential credential, ProtectionLevel requiredProtectionLevel, TokenImpersonationLevel requiredImpersonationLevel)</summary>
        </member>
        <member name="M:System.Net.Security.Fakes.StubNegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
            <summary>Задает заглушка NegotiateStream.AuthenticateAsServer(NetworkCredential credential, ExtendedProtectionPolicy policy, ProtectionLevel requiredProtectionLevel, TokenImpersonationLevel requiredImpersonationLevel)</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubNegotiateStream.AuthenticateAsServer01">
            <summary>Задает stub NegotiateStream.AuthenticateAsServer()</summary>
        </member>
        <member name="M:System.Net.Security.Fakes.StubNegotiateStream.AuthenticateAsServerAsync">
            <summary>Задает заглушка NegotiateStream.AuthenticateAsServerAsync()</summary>
        </member>
        <member name="M:System.Net.Security.Fakes.StubNegotiateStream.AuthenticateAsServerAsync(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)">
            <summary>Задает заглушка NegotiateStream.AuthenticateAsServerAsync(ExtendedProtectionPolicy policy)</summary>
        </member>
        <member name="M:System.Net.Security.Fakes.StubNegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
            <summary>Задает заглушка NegotiateStream.AuthenticateAsServerAsync(NetworkCredential credential, ProtectionLevel requiredProtectionLevel, TokenImpersonationLevel requiredImpersonationLevel)</summary>
        </member>
        <member name="M:System.Net.Security.Fakes.StubNegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
            <summary>Задает заглушка NegotiateStream.AuthenticateAsServerAsync(NetworkCredential credential, ExtendedProtectionPolicy policy, ProtectionLevel requiredProtectionLevel, TokenImpersonationLevel requiredImpersonationLevel)</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubNegotiateStream.AuthenticateAsServerAsync01">
            <summary>Задает stub NegotiateStream.AuthenticateAsServerAsync()</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubNegotiateStream.AuthenticateAsServerAsyncExtendedProtectionPolicy">
            <summary>Задает stub NegotiateStream.AuthenticateAsServerAsync(ExtendedProtectionPolicy policy)</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubNegotiateStream.AuthenticateAsServerAsyncNetworkCredentialExtendedProtectionPolicyProtectionLevelTokenImpersonationLevel">
            <summary>Задает stub NegotiateStream.AuthenticateAsServerAsync(NetworkCredential credential, ExtendedProtectionPolicy policy, ProtectionLevel requiredProtectionLevel, TokenImpersonationLevel requiredImpersonationLevel)</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubNegotiateStream.AuthenticateAsServerAsyncNetworkCredentialProtectionLevelTokenImpersonationLevel">
            <summary>Задает stub NegotiateStream.AuthenticateAsServerAsync(NetworkCredential credential, ProtectionLevel requiredProtectionLevel, TokenImpersonationLevel requiredImpersonationLevel)</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubNegotiateStream.AuthenticateAsServerExtendedProtectionPolicy">
            <summary>Задает stub NegotiateStream.AuthenticateAsServer(ExtendedProtectionPolicy policy)</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubNegotiateStream.AuthenticateAsServerNetworkCredentialExtendedProtectionPolicyProtectionLevelTokenImpersonationLevel">
            <summary>Задает stub NegotiateStream.AuthenticateAsServer(NetworkCredential credential, ExtendedProtectionPolicy policy, ProtectionLevel requiredProtectionLevel, TokenImpersonationLevel requiredImpersonationLevel)</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubNegotiateStream.AuthenticateAsServerNetworkCredentialProtectionLevelTokenImpersonationLevel">
            <summary>Задает stub NegotiateStream.AuthenticateAsServer(NetworkCredential credential, ProtectionLevel requiredProtectionLevel, TokenImpersonationLevel requiredImpersonationLevel)</summary>
        </member>
        <member name="M:System.Net.Security.Fakes.StubNegotiateStream.BeginAuthenticateAsClient(System.AsyncCallback,System.Object)">
            <summary>Задает заглушка NegotiateStream.BeginAuthenticateAsClient(AsyncCallback asyncCallback, Object asyncState)</summary>
        </member>
        <member name="M:System.Net.Security.Fakes.StubNegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.AsyncCallback,System.Object)">
            <summary>Задает заглушка NegotiateStream.BeginAuthenticateAsClient(NetworkCredential credential, String targetName, AsyncCallback asyncCallback, Object asyncState)</summary>
        </member>
        <member name="M:System.Net.Security.Fakes.StubNegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.AsyncCallback,System.Object)">
            <summary>Задает заглушка NegotiateStream.BeginAuthenticateAsClient(NetworkCredential credential, ChannelBinding binding, String targetName, AsyncCallback asyncCallback, Object asyncState)</summary>
        </member>
        <member name="M:System.Net.Security.Fakes.StubNegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
            <summary>Задает заглушка NegotiateStream.BeginAuthenticateAsClient(NetworkCredential credential, String targetName, ProtectionLevel requiredProtectionLevel, TokenImpersonationLevel allowedImpersonationLevel, AsyncCallback asyncCallback, Object asyncState)</summary>
        </member>
        <member name="M:System.Net.Security.Fakes.StubNegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
            <summary>Задает заглушка NegotiateStream.BeginAuthenticateAsClient(NetworkCredential credential, ChannelBinding binding, String targetName, ProtectionLevel requiredProtectionLevel, TokenImpersonationLevel allowedImpersonationLevel, AsyncCallback asyncCallback, Object asyncState)</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubNegotiateStream.BeginAuthenticateAsClientAsyncCallbackObject">
            <summary>Задает stub NegotiateStream.BeginAuthenticateAsClient(AsyncCallback asyncCallback, Object asyncState)</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubNegotiateStream.BeginAuthenticateAsClientNetworkCredentialChannelBindingStringAsyncCallbackObject">
            <summary>Задает stub NegotiateStream.BeginAuthenticateAsClient(NetworkCredential credential, ChannelBinding binding, String targetName, AsyncCallback asyncCallback, Object asyncState)</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubNegotiateStream.BeginAuthenticateAsClientNetworkCredentialChannelBindingStringProtectionLevelTokenImpersonationLevelAsyncCallbackObject">
            <summary>Задает stub NegotiateStream.BeginAuthenticateAsClient(NetworkCredential credential, ChannelBinding binding, String targetName, ProtectionLevel requiredProtectionLevel, TokenImpersonationLevel allowedImpersonationLevel, AsyncCallback asyncCallback, Object asyncState)</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubNegotiateStream.BeginAuthenticateAsClientNetworkCredentialStringAsyncCallbackObject">
            <summary>Задает stub NegotiateStream.BeginAuthenticateAsClient(NetworkCredential credential, String targetName, AsyncCallback asyncCallback, Object asyncState)</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubNegotiateStream.BeginAuthenticateAsClientNetworkCredentialStringProtectionLevelTokenImpersonationLevelAsyncCallbackObject">
            <summary>Задает stub NegotiateStream.BeginAuthenticateAsClient(NetworkCredential credential, String targetName, ProtectionLevel requiredProtectionLevel, TokenImpersonationLevel allowedImpersonationLevel, AsyncCallback asyncCallback, Object asyncState)</summary>
        </member>
        <member name="M:System.Net.Security.Fakes.StubNegotiateStream.BeginAuthenticateAsServer(System.AsyncCallback,System.Object)">
            <summary>Задает заглушка NegotiateStream.BeginAuthenticateAsServer(AsyncCallback asyncCallback, Object asyncState)</summary>
        </member>
        <member name="M:System.Net.Security.Fakes.StubNegotiateStream.BeginAuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.AsyncCallback,System.Object)">
            <summary>Задает заглушка NegotiateStream.BeginAuthenticateAsServer(ExtendedProtectionPolicy policy, AsyncCallback asyncCallback, Object asyncState)</summary>
        </member>
        <member name="M:System.Net.Security.Fakes.StubNegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
            <summary>Задает заглушка NegotiateStream.BeginAuthenticateAsServer(NetworkCredential credential, ProtectionLevel requiredProtectionLevel, TokenImpersonationLevel requiredImpersonationLevel, AsyncCallback asyncCallback, Object asyncState)</summary>
        </member>
        <member name="M:System.Net.Security.Fakes.StubNegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
            <summary>Задает заглушка NegotiateStream.BeginAuthenticateAsServer(NetworkCredential credential, ExtendedProtectionPolicy policy, ProtectionLevel requiredProtectionLevel, TokenImpersonationLevel requiredImpersonationLevel, AsyncCallback asyncCallback, Object asyncState)</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubNegotiateStream.BeginAuthenticateAsServerAsyncCallbackObject">
            <summary>Задает stub NegotiateStream.BeginAuthenticateAsServer(AsyncCallback asyncCallback, Object asyncState)</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubNegotiateStream.BeginAuthenticateAsServerExtendedProtectionPolicyAsyncCallbackObject">
            <summary>Задает stub NegotiateStream.BeginAuthenticateAsServer(ExtendedProtectionPolicy policy, AsyncCallback asyncCallback, Object asyncState)</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubNegotiateStream.BeginAuthenticateAsServerNetworkCredentialExtendedProtectionPolicyProtectionLevelTokenImpersonationLevelAsyncCallbackObject">
            <summary>Задает stub NegotiateStream.BeginAuthenticateAsServer(NetworkCredential credential, ExtendedProtectionPolicy policy, ProtectionLevel requiredProtectionLevel, TokenImpersonationLevel requiredImpersonationLevel, AsyncCallback asyncCallback, Object asyncState)</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubNegotiateStream.BeginAuthenticateAsServerNetworkCredentialProtectionLevelTokenImpersonationLevelAsyncCallbackObject">
            <summary>Задает stub NegotiateStream.BeginAuthenticateAsServer(NetworkCredential credential, ProtectionLevel requiredProtectionLevel, TokenImpersonationLevel requiredImpersonationLevel, AsyncCallback asyncCallback, Object asyncState)</summary>
        </member>
        <member name="M:System.Net.Security.Fakes.StubNegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>Задает заглушка NegotiateStream.BeginRead(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback asyncCallback, Object asyncState)</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubNegotiateStream.BeginReadByteArrayInt32Int32AsyncCallbackObject">
            <summary>Задает stub NegotiateStream.BeginRead(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback asyncCallback, Object asyncState)</summary>
        </member>
        <member name="M:System.Net.Security.Fakes.StubNegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>Задает заглушка NegotiateStream.BeginWrite(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback asyncCallback, Object asyncState)</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubNegotiateStream.BeginWriteByteArrayInt32Int32AsyncCallbackObject">
            <summary>Задает stub NegotiateStream.BeginWrite(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback asyncCallback, Object asyncState)</summary>
        </member>
        <member name="P:System.Net.Security.Fakes.StubNegotiateStream.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Net.Security.Fakes.StubNegotiateStream.CanRead">
            <summary>Задает stub NegotiateStream.get_CanRead()</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubNegotiateStream.CanReadGet">
            <summary>Задает stub NegotiateStream.get_CanRead()</summary>
        </member>
        <member name="P:System.Net.Security.Fakes.StubNegotiateStream.CanSeek">
            <summary>Задает stub NegotiateStream.get_CanSeek()</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubNegotiateStream.CanSeekGet">
            <summary>Задает stub NegotiateStream.get_CanSeek()</summary>
        </member>
        <member name="P:System.Net.Security.Fakes.StubNegotiateStream.CanTimeout">
            <summary>Задает stub NegotiateStream.get_CanTimeout()</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubNegotiateStream.CanTimeoutGet">
            <summary>Задает stub NegotiateStream.get_CanTimeout()</summary>
        </member>
        <member name="P:System.Net.Security.Fakes.StubNegotiateStream.CanWrite">
            <summary>Задает stub NegotiateStream.get_CanWrite()</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubNegotiateStream.CanWriteGet">
            <summary>Задает stub NegotiateStream.get_CanWrite()</summary>
        </member>
        <member name="M:System.Net.Security.Fakes.StubNegotiateStream.Close">
            <summary>Задает заглушка Stream.Close()</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubNegotiateStream.Close01">
            <summary>Задает stub Stream.Close()</summary>
        </member>
        <member name="M:System.Net.Security.Fakes.StubNegotiateStream.CreateWaitHandle">
            <summary>Задает заглушка Stream.CreateWaitHandle()</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubNegotiateStream.CreateWaitHandle01">
            <summary>Задает stub Stream.CreateWaitHandle()</summary>
        </member>
        <member name="M:System.Net.Security.Fakes.StubNegotiateStream.Dispose(System.Boolean)">
            <summary>Задает заглушка NegotiateStream.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubNegotiateStream.DisposeBoolean">
            <summary>Задает stub NegotiateStream.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:System.Net.Security.Fakes.StubNegotiateStream.EndAuthenticateAsClient(System.IAsyncResult)">
            <summary>Задает заглушка NegotiateStream.EndAuthenticateAsClient(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubNegotiateStream.EndAuthenticateAsClientIAsyncResult">
            <summary>Задает stub NegotiateStream.EndAuthenticateAsClient(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:System.Net.Security.Fakes.StubNegotiateStream.EndAuthenticateAsServer(System.IAsyncResult)">
            <summary>Задает заглушка NegotiateStream.EndAuthenticateAsServer(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubNegotiateStream.EndAuthenticateAsServerIAsyncResult">
            <summary>Задает stub NegotiateStream.EndAuthenticateAsServer(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:System.Net.Security.Fakes.StubNegotiateStream.EndRead(System.IAsyncResult)">
            <summary>Задает заглушка NegotiateStream.EndRead(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubNegotiateStream.EndReadIAsyncResult">
            <summary>Задает stub NegotiateStream.EndRead(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:System.Net.Security.Fakes.StubNegotiateStream.EndWrite(System.IAsyncResult)">
            <summary>Задает заглушка NegotiateStream.EndWrite(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubNegotiateStream.EndWriteIAsyncResult">
            <summary>Задает stub NegotiateStream.EndWrite(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:System.Net.Security.Fakes.StubNegotiateStream.Flush">
            <summary>Задает заглушка NegotiateStream.Flush()</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubNegotiateStream.Flush01">
            <summary>Задает stub NegotiateStream.Flush()</summary>
        </member>
        <member name="P:System.Net.Security.Fakes.StubNegotiateStream.ImpersonationLevel">
            <summary>Задает stub NegotiateStream.get_ImpersonationLevel()</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubNegotiateStream.ImpersonationLevelGet">
            <summary>Задает stub NegotiateStream.get_ImpersonationLevel()</summary>
        </member>
        <member name="M:System.Net.Security.Fakes.StubNegotiateStream.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubNegotiateStream</summary>
        </member>
        <member name="P:System.Net.Security.Fakes.StubNegotiateStream.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Net.Security.Fakes.StubNegotiateStream.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Net.Security.Fakes.StubNegotiateStream.IsAuthenticated">
            <summary>Задает stub NegotiateStream.get_IsAuthenticated()</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubNegotiateStream.IsAuthenticatedGet">
            <summary>Задает stub NegotiateStream.get_IsAuthenticated()</summary>
        </member>
        <member name="P:System.Net.Security.Fakes.StubNegotiateStream.IsEncrypted">
            <summary>Задает stub NegotiateStream.get_IsEncrypted()</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubNegotiateStream.IsEncryptedGet">
            <summary>Задает stub NegotiateStream.get_IsEncrypted()</summary>
        </member>
        <member name="P:System.Net.Security.Fakes.StubNegotiateStream.IsMutuallyAuthenticated">
            <summary>Задает stub NegotiateStream.get_IsMutuallyAuthenticated()</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubNegotiateStream.IsMutuallyAuthenticatedGet">
            <summary>Задает stub NegotiateStream.get_IsMutuallyAuthenticated()</summary>
        </member>
        <member name="P:System.Net.Security.Fakes.StubNegotiateStream.IsServer">
            <summary>Задает stub NegotiateStream.get_IsServer()</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubNegotiateStream.IsServerGet">
            <summary>Задает stub NegotiateStream.get_IsServer()</summary>
        </member>
        <member name="P:System.Net.Security.Fakes.StubNegotiateStream.IsSigned">
            <summary>Задает stub NegotiateStream.get_IsSigned()</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubNegotiateStream.IsSignedGet">
            <summary>Задает stub NegotiateStream.get_IsSigned()</summary>
        </member>
        <member name="P:System.Net.Security.Fakes.StubNegotiateStream.Length">
            <summary>Задает stub NegotiateStream.get_Length()</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubNegotiateStream.LengthGet">
            <summary>Задает stub NegotiateStream.get_Length()</summary>
        </member>
        <member name="M:System.Net.Security.Fakes.StubNegotiateStream.ObjectInvariant">
            <summary>Задает заглушка Stream.ObjectInvariant()</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubNegotiateStream.ObjectInvariant01">
            <summary>Задает stub Stream.ObjectInvariant()</summary>
        </member>
        <member name="P:System.Net.Security.Fakes.StubNegotiateStream.Position">
            <summary>Задает stub NegotiateStream.get_Position()</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubNegotiateStream.PositionGet">
            <summary>Задает stub NegotiateStream.get_Position()</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubNegotiateStream.PositionSetInt64">
            <summary>Задает stub NegotiateStream.set_Position(Int64 value)</summary>
        </member>
        <member name="M:System.Net.Security.Fakes.StubNegotiateStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>Задает заглушка NegotiateStream.Read(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="M:System.Net.Security.Fakes.StubNegotiateStream.ReadByte">
            <summary>Задает заглушка Stream.ReadByte()</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubNegotiateStream.ReadByte01">
            <summary>Задает stub Stream.ReadByte()</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubNegotiateStream.ReadByteArrayInt32Int32">
            <summary>Задает stub NegotiateStream.Read(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:System.Net.Security.Fakes.StubNegotiateStream.ReadTimeout">
            <summary>Задает stub NegotiateStream.get_ReadTimeout()</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubNegotiateStream.ReadTimeoutGet">
            <summary>Задает stub NegotiateStream.get_ReadTimeout()</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubNegotiateStream.ReadTimeoutSetInt32">
            <summary>Задает stub NegotiateStream.set_ReadTimeout(Int32 value)</summary>
        </member>
        <member name="P:System.Net.Security.Fakes.StubNegotiateStream.RemoteIdentity">
            <summary>Задает stub NegotiateStream.get_RemoteIdentity()</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubNegotiateStream.RemoteIdentityGet">
            <summary>Задает stub NegotiateStream.get_RemoteIdentity()</summary>
        </member>
        <member name="M:System.Net.Security.Fakes.StubNegotiateStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>Задает заглушка NegotiateStream.Seek(Int64 offset, SeekOrigin origin)</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubNegotiateStream.SeekInt64SeekOrigin">
            <summary>Задает stub NegotiateStream.Seek(Int64 offset, SeekOrigin origin)</summary>
        </member>
        <member name="M:System.Net.Security.Fakes.StubNegotiateStream.SetLength(System.Int64)">
            <summary>Задает заглушка NegotiateStream.SetLength(Int64 value)</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubNegotiateStream.SetLengthInt64">
            <summary>Задает stub NegotiateStream.SetLength(Int64 value)</summary>
        </member>
        <member name="M:System.Net.Security.Fakes.StubNegotiateStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>Задает заглушка NegotiateStream.Write(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="M:System.Net.Security.Fakes.StubNegotiateStream.WriteByte(System.Byte)">
            <summary>Задает заглушка Stream.WriteByte(Byte value)</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubNegotiateStream.WriteByteArrayInt32Int32">
            <summary>Задает stub NegotiateStream.Write(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubNegotiateStream.WriteByteByte">
            <summary>Задает stub Stream.WriteByte(Byte value)</summary>
        </member>
        <member name="P:System.Net.Security.Fakes.StubNegotiateStream.WriteTimeout">
            <summary>Задает stub NegotiateStream.get_WriteTimeout()</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubNegotiateStream.WriteTimeoutGet">
            <summary>Задает stub NegotiateStream.get_WriteTimeout()</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubNegotiateStream.WriteTimeoutSetInt32">
            <summary>Задает stub NegotiateStream.set_WriteTimeout(Int32 value)</summary>
        </member>
        <member name="T:System.Net.Security.Fakes.StubSslStream">
            <summary>Тип заглушки System.Net.Security.SslStream</summary>
        </member>
        <member name="M:System.Net.Security.Fakes.StubSslStream.#ctor(System.IO.Stream)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Security.Fakes.StubSslStream.#ctor(System.IO.Stream,System.Boolean)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Security.Fakes.StubSslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Security.Fakes.StubSslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Security.Fakes.StubSslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback,System.Net.Security.EncryptionPolicy)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Security.Fakes.StubSslStream.AttachBackingFieldToPosition">
            <summary>Присоединение делегатов для эмуляции StubSslStream.Position как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Net.Security.Fakes.StubSslStream.AttachBackingFieldToReadTimeout">
            <summary>Присоединение делегатов для эмуляции StubSslStream.ReadTimeout как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Net.Security.Fakes.StubSslStream.AttachBackingFieldToWriteTimeout">
            <summary>Присоединение делегатов для эмуляции StubSslStream.WriteTimeout как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Net.Security.Fakes.StubSslStream.AuthenticateAsClient(System.String)">
            <summary>Задает заглушка SslStream.AuthenticateAsClient(String targetHost)</summary>
        </member>
        <member name="M:System.Net.Security.Fakes.StubSslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)">
            <summary>Задает заглушка SslStream.AuthenticateAsClient(String targetHost, X509CertificateCollection clientCertificates, SslProtocols enabledSslProtocols, Boolean checkCertificateRevocation)</summary>
        </member>
        <member name="M:System.Net.Security.Fakes.StubSslStream.AuthenticateAsClientAsync(System.String)">
            <summary>Задает заглушка SslStream.AuthenticateAsClientAsync(String targetHost)</summary>
        </member>
        <member name="M:System.Net.Security.Fakes.StubSslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)">
            <summary>Задает заглушка SslStream.AuthenticateAsClientAsync(String targetHost, X509CertificateCollection clientCertificates, SslProtocols enabledSslProtocols, Boolean checkCertificateRevocation)</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubSslStream.AuthenticateAsClientAsyncString">
            <summary>Задает stub SslStream.AuthenticateAsClientAsync(String targetHost)</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubSslStream.AuthenticateAsClientAsyncStringX509CertificateCollectionSslProtocolsBoolean">
            <summary>Задает stub SslStream.AuthenticateAsClientAsync(String targetHost, X509CertificateCollection clientCertificates, SslProtocols enabledSslProtocols, Boolean checkCertificateRevocation)</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubSslStream.AuthenticateAsClientString">
            <summary>Задает stub SslStream.AuthenticateAsClient(String targetHost)</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubSslStream.AuthenticateAsClientStringX509CertificateCollectionSslProtocolsBoolean">
            <summary>Задает stub SslStream.AuthenticateAsClient(String targetHost, X509CertificateCollection clientCertificates, SslProtocols enabledSslProtocols, Boolean checkCertificateRevocation)</summary>
        </member>
        <member name="M:System.Net.Security.Fakes.StubSslStream.BeginAuthenticateAsClient(System.String,System.AsyncCallback,System.Object)">
            <summary>Задает заглушка SslStream.BeginAuthenticateAsClient(String targetHost, AsyncCallback asyncCallback, Object asyncState)</summary>
        </member>
        <member name="M:System.Net.Security.Fakes.StubSslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)">
            <summary>Задает заглушка SslStream.BeginAuthenticateAsClient(String targetHost, X509CertificateCollection clientCertificates, SslProtocols enabledSslProtocols, Boolean checkCertificateRevocation, AsyncCallback asyncCallback, Object asyncState)</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubSslStream.BeginAuthenticateAsClientStringAsyncCallbackObject">
            <summary>Задает stub SslStream.BeginAuthenticateAsClient(String targetHost, AsyncCallback asyncCallback, Object asyncState)</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubSslStream.BeginAuthenticateAsClientStringX509CertificateCollectionSslProtocolsBooleanAsyncCallbackObject">
            <summary>Задает stub SslStream.BeginAuthenticateAsClient(String targetHost, X509CertificateCollection clientCertificates, SslProtocols enabledSslProtocols, Boolean checkCertificateRevocation, AsyncCallback asyncCallback, Object asyncState)</summary>
        </member>
        <member name="M:System.Net.Security.Fakes.StubSslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>Задает заглушка SslStream.BeginRead(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback asyncCallback, Object asyncState)</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubSslStream.BeginReadByteArrayInt32Int32AsyncCallbackObject">
            <summary>Задает stub SslStream.BeginRead(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback asyncCallback, Object asyncState)</summary>
        </member>
        <member name="M:System.Net.Security.Fakes.StubSslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>Задает заглушка SslStream.BeginWrite(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback asyncCallback, Object asyncState)</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubSslStream.BeginWriteByteArrayInt32Int32AsyncCallbackObject">
            <summary>Задает stub SslStream.BeginWrite(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback asyncCallback, Object asyncState)</summary>
        </member>
        <member name="P:System.Net.Security.Fakes.StubSslStream.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Net.Security.Fakes.StubSslStream.CanRead">
            <summary>Задает stub SslStream.get_CanRead()</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubSslStream.CanReadGet">
            <summary>Задает stub SslStream.get_CanRead()</summary>
        </member>
        <member name="P:System.Net.Security.Fakes.StubSslStream.CanSeek">
            <summary>Задает stub SslStream.get_CanSeek()</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubSslStream.CanSeekGet">
            <summary>Задает stub SslStream.get_CanSeek()</summary>
        </member>
        <member name="P:System.Net.Security.Fakes.StubSslStream.CanTimeout">
            <summary>Задает stub SslStream.get_CanTimeout()</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubSslStream.CanTimeoutGet">
            <summary>Задает stub SslStream.get_CanTimeout()</summary>
        </member>
        <member name="P:System.Net.Security.Fakes.StubSslStream.CanWrite">
            <summary>Задает stub SslStream.get_CanWrite()</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubSslStream.CanWriteGet">
            <summary>Задает stub SslStream.get_CanWrite()</summary>
        </member>
        <member name="P:System.Net.Security.Fakes.StubSslStream.CheckCertRevocationStatus">
            <summary>Задает stub SslStream.get_CheckCertRevocationStatus()</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubSslStream.CheckCertRevocationStatusGet">
            <summary>Задает stub SslStream.get_CheckCertRevocationStatus()</summary>
        </member>
        <member name="P:System.Net.Security.Fakes.StubSslStream.CipherAlgorithm">
            <summary>Задает stub SslStream.get_CipherAlgorithm()</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubSslStream.CipherAlgorithmGet">
            <summary>Задает stub SslStream.get_CipherAlgorithm()</summary>
        </member>
        <member name="P:System.Net.Security.Fakes.StubSslStream.CipherStrength">
            <summary>Задает stub SslStream.get_CipherStrength()</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubSslStream.CipherStrengthGet">
            <summary>Задает stub SslStream.get_CipherStrength()</summary>
        </member>
        <member name="M:System.Net.Security.Fakes.StubSslStream.Close">
            <summary>Задает заглушка Stream.Close()</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubSslStream.Close01">
            <summary>Задает stub Stream.Close()</summary>
        </member>
        <member name="M:System.Net.Security.Fakes.StubSslStream.CreateWaitHandle">
            <summary>Задает заглушка Stream.CreateWaitHandle()</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubSslStream.CreateWaitHandle01">
            <summary>Задает stub Stream.CreateWaitHandle()</summary>
        </member>
        <member name="M:System.Net.Security.Fakes.StubSslStream.Dispose(System.Boolean)">
            <summary>Задает заглушка SslStream.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubSslStream.DisposeBoolean">
            <summary>Задает stub SslStream.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:System.Net.Security.Fakes.StubSslStream.EndAuthenticateAsClient(System.IAsyncResult)">
            <summary>Задает заглушка SslStream.EndAuthenticateAsClient(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubSslStream.EndAuthenticateAsClientIAsyncResult">
            <summary>Задает stub SslStream.EndAuthenticateAsClient(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:System.Net.Security.Fakes.StubSslStream.EndAuthenticateAsServer(System.IAsyncResult)">
            <summary>Задает заглушка SslStream.EndAuthenticateAsServer(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubSslStream.EndAuthenticateAsServerIAsyncResult">
            <summary>Задает stub SslStream.EndAuthenticateAsServer(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:System.Net.Security.Fakes.StubSslStream.EndRead(System.IAsyncResult)">
            <summary>Задает заглушка SslStream.EndRead(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubSslStream.EndReadIAsyncResult">
            <summary>Задает stub SslStream.EndRead(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:System.Net.Security.Fakes.StubSslStream.EndWrite(System.IAsyncResult)">
            <summary>Задает заглушка SslStream.EndWrite(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubSslStream.EndWriteIAsyncResult">
            <summary>Задает stub SslStream.EndWrite(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:System.Net.Security.Fakes.StubSslStream.Flush">
            <summary>Задает заглушка SslStream.Flush()</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubSslStream.Flush01">
            <summary>Задает stub SslStream.Flush()</summary>
        </member>
        <member name="P:System.Net.Security.Fakes.StubSslStream.HashAlgorithm">
            <summary>Задает stub SslStream.get_HashAlgorithm()</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubSslStream.HashAlgorithmGet">
            <summary>Задает stub SslStream.get_HashAlgorithm()</summary>
        </member>
        <member name="P:System.Net.Security.Fakes.StubSslStream.HashStrength">
            <summary>Задает stub SslStream.get_HashStrength()</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubSslStream.HashStrengthGet">
            <summary>Задает stub SslStream.get_HashStrength()</summary>
        </member>
        <member name="M:System.Net.Security.Fakes.StubSslStream.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubSslStream</summary>
        </member>
        <member name="P:System.Net.Security.Fakes.StubSslStream.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Net.Security.Fakes.StubSslStream.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Net.Security.Fakes.StubSslStream.IsAuthenticated">
            <summary>Задает stub SslStream.get_IsAuthenticated()</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubSslStream.IsAuthenticatedGet">
            <summary>Задает stub SslStream.get_IsAuthenticated()</summary>
        </member>
        <member name="P:System.Net.Security.Fakes.StubSslStream.IsEncrypted">
            <summary>Задает stub SslStream.get_IsEncrypted()</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubSslStream.IsEncryptedGet">
            <summary>Задает stub SslStream.get_IsEncrypted()</summary>
        </member>
        <member name="P:System.Net.Security.Fakes.StubSslStream.IsMutuallyAuthenticated">
            <summary>Задает stub SslStream.get_IsMutuallyAuthenticated()</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubSslStream.IsMutuallyAuthenticatedGet">
            <summary>Задает stub SslStream.get_IsMutuallyAuthenticated()</summary>
        </member>
        <member name="P:System.Net.Security.Fakes.StubSslStream.IsServer">
            <summary>Задает stub SslStream.get_IsServer()</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubSslStream.IsServerGet">
            <summary>Задает stub SslStream.get_IsServer()</summary>
        </member>
        <member name="P:System.Net.Security.Fakes.StubSslStream.IsSigned">
            <summary>Задает stub SslStream.get_IsSigned()</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubSslStream.IsSignedGet">
            <summary>Задает stub SslStream.get_IsSigned()</summary>
        </member>
        <member name="P:System.Net.Security.Fakes.StubSslStream.KeyExchangeAlgorithm">
            <summary>Задает stub SslStream.get_KeyExchangeAlgorithm()</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubSslStream.KeyExchangeAlgorithmGet">
            <summary>Задает stub SslStream.get_KeyExchangeAlgorithm()</summary>
        </member>
        <member name="P:System.Net.Security.Fakes.StubSslStream.KeyExchangeStrength">
            <summary>Задает stub SslStream.get_KeyExchangeStrength()</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubSslStream.KeyExchangeStrengthGet">
            <summary>Задает stub SslStream.get_KeyExchangeStrength()</summary>
        </member>
        <member name="P:System.Net.Security.Fakes.StubSslStream.Length">
            <summary>Задает stub SslStream.get_Length()</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubSslStream.LengthGet">
            <summary>Задает stub SslStream.get_Length()</summary>
        </member>
        <member name="M:System.Net.Security.Fakes.StubSslStream.ObjectInvariant">
            <summary>Задает заглушка Stream.ObjectInvariant()</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubSslStream.ObjectInvariant01">
            <summary>Задает stub Stream.ObjectInvariant()</summary>
        </member>
        <member name="P:System.Net.Security.Fakes.StubSslStream.Position">
            <summary>Задает stub SslStream.get_Position()</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubSslStream.PositionGet">
            <summary>Задает stub SslStream.get_Position()</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubSslStream.PositionSetInt64">
            <summary>Задает stub SslStream.set_Position(Int64 value)</summary>
        </member>
        <member name="M:System.Net.Security.Fakes.StubSslStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>Задает заглушка SslStream.Read(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="M:System.Net.Security.Fakes.StubSslStream.ReadByte">
            <summary>Задает заглушка Stream.ReadByte()</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubSslStream.ReadByte01">
            <summary>Задает stub Stream.ReadByte()</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubSslStream.ReadByteArrayInt32Int32">
            <summary>Задает stub SslStream.Read(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:System.Net.Security.Fakes.StubSslStream.ReadTimeout">
            <summary>Задает stub SslStream.get_ReadTimeout()</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubSslStream.ReadTimeoutGet">
            <summary>Задает stub SslStream.get_ReadTimeout()</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubSslStream.ReadTimeoutSetInt32">
            <summary>Задает stub SslStream.set_ReadTimeout(Int32 value)</summary>
        </member>
        <member name="M:System.Net.Security.Fakes.StubSslStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>Задает заглушка SslStream.Seek(Int64 offset, SeekOrigin origin)</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubSslStream.SeekInt64SeekOrigin">
            <summary>Задает stub SslStream.Seek(Int64 offset, SeekOrigin origin)</summary>
        </member>
        <member name="M:System.Net.Security.Fakes.StubSslStream.SetLength(System.Int64)">
            <summary>Задает заглушка SslStream.SetLength(Int64 value)</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubSslStream.SetLengthInt64">
            <summary>Задает stub SslStream.SetLength(Int64 value)</summary>
        </member>
        <member name="P:System.Net.Security.Fakes.StubSslStream.SslProtocol">
            <summary>Задает stub SslStream.get_SslProtocol()</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubSslStream.SslProtocolGet">
            <summary>Задает stub SslStream.get_SslProtocol()</summary>
        </member>
        <member name="M:System.Net.Security.Fakes.StubSslStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>Задает заглушка SslStream.Write(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="M:System.Net.Security.Fakes.StubSslStream.WriteByte(System.Byte)">
            <summary>Задает заглушка Stream.WriteByte(Byte value)</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubSslStream.WriteByteArrayInt32Int32">
            <summary>Задает stub SslStream.Write(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubSslStream.WriteByteByte">
            <summary>Задает stub Stream.WriteByte(Byte value)</summary>
        </member>
        <member name="P:System.Net.Security.Fakes.StubSslStream.WriteTimeout">
            <summary>Задает stub SslStream.get_WriteTimeout()</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubSslStream.WriteTimeoutGet">
            <summary>Задает stub SslStream.get_WriteTimeout()</summary>
        </member>
        <member name="F:System.Net.Security.Fakes.StubSslStream.WriteTimeoutSetInt32">
            <summary>Задает stub SslStream.set_WriteTimeout(Int32 value)</summary>
        </member>
        <member name="T:System.Net.Sockets.Fakes.StubIPv6MulticastOption">
            <summary>Тип заглушки System.Net.Sockets.IPv6MulticastOption</summary>
        </member>
        <member name="M:System.Net.Sockets.Fakes.StubIPv6MulticastOption.#ctor(System.Net.IPAddress)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Sockets.Fakes.StubIPv6MulticastOption.#ctor(System.Net.IPAddress,System.Int64)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Net.Sockets.Fakes.StubIPv6MulticastOption.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Net.Sockets.Fakes.StubIPv6MulticastOption.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubIPv6MulticastOption</summary>
        </member>
        <member name="P:System.Net.Sockets.Fakes.StubIPv6MulticastOption.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Net.Sockets.Fakes.StubIPv6MulticastOption.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Net.Sockets.Fakes.StubLingerOption">
            <summary>Тип заглушки System.Net.Sockets.LingerOption</summary>
        </member>
        <member name="M:System.Net.Sockets.Fakes.StubLingerOption.#ctor(System.Boolean,System.Int32)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Net.Sockets.Fakes.StubLingerOption.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Net.Sockets.Fakes.StubLingerOption.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubLingerOption</summary>
        </member>
        <member name="P:System.Net.Sockets.Fakes.StubLingerOption.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Net.Sockets.Fakes.StubLingerOption.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Net.Sockets.Fakes.StubMulticastOption">
            <summary>Тип заглушки System.Net.Sockets.MulticastOption</summary>
        </member>
        <member name="M:System.Net.Sockets.Fakes.StubMulticastOption.#ctor(System.Net.IPAddress)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Sockets.Fakes.StubMulticastOption.#ctor(System.Net.IPAddress,System.Net.IPAddress)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Sockets.Fakes.StubMulticastOption.#ctor(System.Net.IPAddress,System.Int32)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Net.Sockets.Fakes.StubMulticastOption.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Net.Sockets.Fakes.StubMulticastOption.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubMulticastOption</summary>
        </member>
        <member name="P:System.Net.Sockets.Fakes.StubMulticastOption.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Net.Sockets.Fakes.StubMulticastOption.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Net.Sockets.Fakes.StubNetworkStream">
            <summary>Тип заглушки System.Net.Sockets.NetworkStream</summary>
        </member>
        <member name="M:System.Net.Sockets.Fakes.StubNetworkStream.#ctor(System.Net.Sockets.Socket)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Sockets.Fakes.StubNetworkStream.#ctor(System.Net.Sockets.Socket,System.Boolean)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Sockets.Fakes.StubNetworkStream.#ctor(System.Net.Sockets.Socket,System.IO.FileAccess)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Sockets.Fakes.StubNetworkStream.#ctor(System.Net.Sockets.Socket,System.IO.FileAccess,System.Boolean)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Sockets.Fakes.StubNetworkStream.AttachBackingFieldToPosition">
            <summary>Присоединение делегатов для эмуляции StubNetworkStream.Position как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Net.Sockets.Fakes.StubNetworkStream.AttachBackingFieldToReadTimeout">
            <summary>Присоединение делегатов для эмуляции StubNetworkStream.ReadTimeout как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Net.Sockets.Fakes.StubNetworkStream.AttachBackingFieldToWriteTimeout">
            <summary>Присоединение делегатов для эмуляции StubNetworkStream.WriteTimeout как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Net.Sockets.Fakes.StubNetworkStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>Задает заглушка NetworkStream.BeginRead(Byte[] buffer, Int32 offset, Int32 size, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:System.Net.Sockets.Fakes.StubNetworkStream.BeginReadByteArrayInt32Int32AsyncCallbackObject">
            <summary>Задает stub NetworkStream.BeginRead(Byte[] buffer, Int32 offset, Int32 size, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:System.Net.Sockets.Fakes.StubNetworkStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>Задает заглушка NetworkStream.BeginWrite(Byte[] buffer, Int32 offset, Int32 size, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:System.Net.Sockets.Fakes.StubNetworkStream.BeginWriteByteArrayInt32Int32AsyncCallbackObject">
            <summary>Задает stub NetworkStream.BeginWrite(Byte[] buffer, Int32 offset, Int32 size, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:System.Net.Sockets.Fakes.StubNetworkStream.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Net.Sockets.Fakes.StubNetworkStream.CanRead">
            <summary>Задает stub NetworkStream.get_CanRead()</summary>
        </member>
        <member name="F:System.Net.Sockets.Fakes.StubNetworkStream.CanReadGet">
            <summary>Задает stub NetworkStream.get_CanRead()</summary>
        </member>
        <member name="P:System.Net.Sockets.Fakes.StubNetworkStream.CanSeek">
            <summary>Задает stub NetworkStream.get_CanSeek()</summary>
        </member>
        <member name="F:System.Net.Sockets.Fakes.StubNetworkStream.CanSeekGet">
            <summary>Задает stub NetworkStream.get_CanSeek()</summary>
        </member>
        <member name="P:System.Net.Sockets.Fakes.StubNetworkStream.CanTimeout">
            <summary>Задает stub NetworkStream.get_CanTimeout()</summary>
        </member>
        <member name="F:System.Net.Sockets.Fakes.StubNetworkStream.CanTimeoutGet">
            <summary>Задает stub NetworkStream.get_CanTimeout()</summary>
        </member>
        <member name="P:System.Net.Sockets.Fakes.StubNetworkStream.CanWrite">
            <summary>Задает stub NetworkStream.get_CanWrite()</summary>
        </member>
        <member name="F:System.Net.Sockets.Fakes.StubNetworkStream.CanWriteGet">
            <summary>Задает stub NetworkStream.get_CanWrite()</summary>
        </member>
        <member name="M:System.Net.Sockets.Fakes.StubNetworkStream.Close">
            <summary>Задает заглушка Stream.Close()</summary>
        </member>
        <member name="F:System.Net.Sockets.Fakes.StubNetworkStream.Close01">
            <summary>Задает stub Stream.Close()</summary>
        </member>
        <member name="M:System.Net.Sockets.Fakes.StubNetworkStream.CreateWaitHandle">
            <summary>Задает заглушка Stream.CreateWaitHandle()</summary>
        </member>
        <member name="F:System.Net.Sockets.Fakes.StubNetworkStream.CreateWaitHandle01">
            <summary>Задает stub Stream.CreateWaitHandle()</summary>
        </member>
        <member name="P:System.Net.Sockets.Fakes.StubNetworkStream.DataAvailable">
            <summary>Задает stub NetworkStream.get_DataAvailable()</summary>
        </member>
        <member name="F:System.Net.Sockets.Fakes.StubNetworkStream.DataAvailableGet">
            <summary>Задает stub NetworkStream.get_DataAvailable()</summary>
        </member>
        <member name="M:System.Net.Sockets.Fakes.StubNetworkStream.Dispose(System.Boolean)">
            <summary>Задает заглушка NetworkStream.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.Net.Sockets.Fakes.StubNetworkStream.DisposeBoolean">
            <summary>Задает stub NetworkStream.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:System.Net.Sockets.Fakes.StubNetworkStream.EndRead(System.IAsyncResult)">
            <summary>Задает заглушка NetworkStream.EndRead(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:System.Net.Sockets.Fakes.StubNetworkStream.EndReadIAsyncResult">
            <summary>Задает stub NetworkStream.EndRead(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:System.Net.Sockets.Fakes.StubNetworkStream.EndWrite(System.IAsyncResult)">
            <summary>Задает заглушка NetworkStream.EndWrite(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:System.Net.Sockets.Fakes.StubNetworkStream.EndWriteIAsyncResult">
            <summary>Задает stub NetworkStream.EndWrite(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:System.Net.Sockets.Fakes.StubNetworkStream.Flush">
            <summary>Задает заглушка NetworkStream.Flush()</summary>
        </member>
        <member name="F:System.Net.Sockets.Fakes.StubNetworkStream.Flush01">
            <summary>Задает stub NetworkStream.Flush()</summary>
        </member>
        <member name="M:System.Net.Sockets.Fakes.StubNetworkStream.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubNetworkStream</summary>
        </member>
        <member name="P:System.Net.Sockets.Fakes.StubNetworkStream.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Net.Sockets.Fakes.StubNetworkStream.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Net.Sockets.Fakes.StubNetworkStream.Length">
            <summary>Задает stub NetworkStream.get_Length()</summary>
        </member>
        <member name="F:System.Net.Sockets.Fakes.StubNetworkStream.LengthGet">
            <summary>Задает stub NetworkStream.get_Length()</summary>
        </member>
        <member name="M:System.Net.Sockets.Fakes.StubNetworkStream.ObjectInvariant">
            <summary>Задает заглушка Stream.ObjectInvariant()</summary>
        </member>
        <member name="F:System.Net.Sockets.Fakes.StubNetworkStream.ObjectInvariant01">
            <summary>Задает stub Stream.ObjectInvariant()</summary>
        </member>
        <member name="P:System.Net.Sockets.Fakes.StubNetworkStream.Position">
            <summary>Задает stub NetworkStream.get_Position()</summary>
        </member>
        <member name="F:System.Net.Sockets.Fakes.StubNetworkStream.PositionGet">
            <summary>Задает stub NetworkStream.get_Position()</summary>
        </member>
        <member name="F:System.Net.Sockets.Fakes.StubNetworkStream.PositionSetInt64">
            <summary>Задает stub NetworkStream.set_Position(Int64 value)</summary>
        </member>
        <member name="M:System.Net.Sockets.Fakes.StubNetworkStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>Задает заглушка NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)</summary>
        </member>
        <member name="M:System.Net.Sockets.Fakes.StubNetworkStream.ReadByte">
            <summary>Задает заглушка Stream.ReadByte()</summary>
        </member>
        <member name="F:System.Net.Sockets.Fakes.StubNetworkStream.ReadByte01">
            <summary>Задает stub Stream.ReadByte()</summary>
        </member>
        <member name="F:System.Net.Sockets.Fakes.StubNetworkStream.ReadByteArrayInt32Int32">
            <summary>Задает stub NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)</summary>
        </member>
        <member name="P:System.Net.Sockets.Fakes.StubNetworkStream.ReadTimeout">
            <summary>Задает stub NetworkStream.get_ReadTimeout()</summary>
        </member>
        <member name="F:System.Net.Sockets.Fakes.StubNetworkStream.ReadTimeoutGet">
            <summary>Задает stub NetworkStream.get_ReadTimeout()</summary>
        </member>
        <member name="F:System.Net.Sockets.Fakes.StubNetworkStream.ReadTimeoutSetInt32">
            <summary>Задает stub NetworkStream.set_ReadTimeout(Int32 value)</summary>
        </member>
        <member name="M:System.Net.Sockets.Fakes.StubNetworkStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>Задает заглушка NetworkStream.Seek(Int64 offset, SeekOrigin origin)</summary>
        </member>
        <member name="F:System.Net.Sockets.Fakes.StubNetworkStream.SeekInt64SeekOrigin">
            <summary>Задает stub NetworkStream.Seek(Int64 offset, SeekOrigin origin)</summary>
        </member>
        <member name="M:System.Net.Sockets.Fakes.StubNetworkStream.SetLength(System.Int64)">
            <summary>Задает заглушка NetworkStream.SetLength(Int64 value)</summary>
        </member>
        <member name="F:System.Net.Sockets.Fakes.StubNetworkStream.SetLengthInt64">
            <summary>Задает stub NetworkStream.SetLength(Int64 value)</summary>
        </member>
        <member name="M:System.Net.Sockets.Fakes.StubNetworkStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>Задает заглушка NetworkStream.Write(Byte[] buffer, Int32 offset, Int32 size)</summary>
        </member>
        <member name="M:System.Net.Sockets.Fakes.StubNetworkStream.WriteByte(System.Byte)">
            <summary>Задает заглушка Stream.WriteByte(Byte value)</summary>
        </member>
        <member name="F:System.Net.Sockets.Fakes.StubNetworkStream.WriteByteArrayInt32Int32">
            <summary>Задает stub NetworkStream.Write(Byte[] buffer, Int32 offset, Int32 size)</summary>
        </member>
        <member name="F:System.Net.Sockets.Fakes.StubNetworkStream.WriteByteByte">
            <summary>Задает stub Stream.WriteByte(Byte value)</summary>
        </member>
        <member name="P:System.Net.Sockets.Fakes.StubNetworkStream.WriteTimeout">
            <summary>Задает stub NetworkStream.get_WriteTimeout()</summary>
        </member>
        <member name="F:System.Net.Sockets.Fakes.StubNetworkStream.WriteTimeoutGet">
            <summary>Задает stub NetworkStream.get_WriteTimeout()</summary>
        </member>
        <member name="F:System.Net.Sockets.Fakes.StubNetworkStream.WriteTimeoutSetInt32">
            <summary>Задает stub NetworkStream.set_WriteTimeout(Int32 value)</summary>
        </member>
        <member name="T:System.Net.Sockets.Fakes.StubSendPacketsElement">
            <summary>Тип заглушки System.Net.Sockets.SendPacketsElement</summary>
        </member>
        <member name="M:System.Net.Sockets.Fakes.StubSendPacketsElement.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Sockets.Fakes.StubSendPacketsElement.#ctor(System.Byte[])">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Sockets.Fakes.StubSendPacketsElement.#ctor(System.Byte[],System.Int32,System.Int32)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Sockets.Fakes.StubSendPacketsElement.#ctor(System.String,System.Int32,System.Int32)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Sockets.Fakes.StubSendPacketsElement.#ctor(System.Byte[],System.Int32,System.Int32,System.Boolean)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Sockets.Fakes.StubSendPacketsElement.#ctor(System.String,System.Int32,System.Int32,System.Boolean)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Net.Sockets.Fakes.StubSendPacketsElement.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Net.Sockets.Fakes.StubSendPacketsElement.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubSendPacketsElement</summary>
        </member>
        <member name="P:System.Net.Sockets.Fakes.StubSendPacketsElement.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Net.Sockets.Fakes.StubSendPacketsElement.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Net.Sockets.Fakes.StubSocket">
            <summary>Тип заглушки System.Net.Sockets.Socket</summary>
        </member>
        <member name="M:System.Net.Sockets.Fakes.StubSocket.#ctor(System.Net.Sockets.SocketInformation)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Sockets.Fakes.StubSocket.#ctor(System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Sockets.Fakes.StubSocket.#ctor(System.Net.Sockets.AddressFamily,System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Net.Sockets.Fakes.StubSocket.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Net.Sockets.Fakes.StubSocket.Dispose(System.Boolean)">
            <summary>Задает заглушка Socket.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.Net.Sockets.Fakes.StubSocket.DisposeBoolean">
            <summary>Задает stub Socket.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:System.Net.Sockets.Fakes.StubSocket.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubSocket</summary>
        </member>
        <member name="P:System.Net.Sockets.Fakes.StubSocket.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Net.Sockets.Fakes.StubSocket.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Net.Sockets.Fakes.StubSocketException">
            <summary>Тип заглушки System.Net.Sockets.SocketException</summary>
        </member>
        <member name="M:System.Net.Sockets.Fakes.StubSocketException.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Sockets.Fakes.StubSocketException.#ctor(System.Int32)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Sockets.Fakes.StubSocketException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Sockets.Fakes.StubSocketException.AttachBackingFieldToHelpLink">
            <summary>Присоединение делегатов для эмуляции StubSocketException.HelpLink как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Net.Sockets.Fakes.StubSocketException.AttachBackingFieldToSource">
            <summary>Присоединение делегатов для эмуляции StubSocketException.Source как свойства с резервным полем.</summary>
        </member>
        <member name="P:System.Net.Sockets.Fakes.StubSocketException.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Net.Sockets.Fakes.StubSocketException.Data">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="F:System.Net.Sockets.Fakes.StubSocketException.DataGet">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="P:System.Net.Sockets.Fakes.StubSocketException.ErrorCode">
            <summary>Задает stub SocketException.get_ErrorCode()</summary>
        </member>
        <member name="F:System.Net.Sockets.Fakes.StubSocketException.ErrorCodeGet">
            <summary>Задает stub SocketException.get_ErrorCode()</summary>
        </member>
        <member name="M:System.Net.Sockets.Fakes.StubSocketException.GetBaseException">
            <summary>Задает заглушка Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Net.Sockets.Fakes.StubSocketException.GetBaseException01">
            <summary>Задает stub Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Net.Sockets.Fakes.StubSocketException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка Win32Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Net.Sockets.Fakes.StubSocketException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub Win32Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.Net.Sockets.Fakes.StubSocketException.HelpLink">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Net.Sockets.Fakes.StubSocketException.HelpLinkGet">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Net.Sockets.Fakes.StubSocketException.HelpLinkSetString">
            <summary>Задает stub Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Net.Sockets.Fakes.StubSocketException.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubSocketException</summary>
        </member>
        <member name="P:System.Net.Sockets.Fakes.StubSocketException.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Net.Sockets.Fakes.StubSocketException.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Net.Sockets.Fakes.StubSocketException.Message">
            <summary>Задает stub SocketException.get_Message()</summary>
        </member>
        <member name="F:System.Net.Sockets.Fakes.StubSocketException.MessageGet">
            <summary>Задает stub SocketException.get_Message()</summary>
        </member>
        <member name="P:System.Net.Sockets.Fakes.StubSocketException.Source">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.Net.Sockets.Fakes.StubSocketException.SourceGet">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.Net.Sockets.Fakes.StubSocketException.SourceSetString">
            <summary>Задает stub Exception.set_Source(String value)</summary>
        </member>
        <member name="P:System.Net.Sockets.Fakes.StubSocketException.StackTrace">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="F:System.Net.Sockets.Fakes.StubSocketException.StackTraceGet">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Net.Sockets.Fakes.StubSocketException.ToString">
            <summary>Задает заглушка ExternalException.ToString()</summary>
        </member>
        <member name="F:System.Net.Sockets.Fakes.StubSocketException.ToString01">
            <summary>Задает stub ExternalException.ToString()</summary>
        </member>
        <member name="T:System.Net.Sockets.Fakes.StubTcpClient">
            <summary>Тип заглушки System.Net.Sockets.TcpClient</summary>
        </member>
        <member name="M:System.Net.Sockets.Fakes.StubTcpClient.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Sockets.Fakes.StubTcpClient.#ctor(System.Net.IPEndPoint)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Sockets.Fakes.StubTcpClient.#ctor(System.Net.Sockets.AddressFamily)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Sockets.Fakes.StubTcpClient.#ctor(System.String,System.Int32)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Net.Sockets.Fakes.StubTcpClient.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Net.Sockets.Fakes.StubTcpClient.Dispose(System.Boolean)">
            <summary>Задает заглушка TcpClient.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.Net.Sockets.Fakes.StubTcpClient.DisposeBoolean">
            <summary>Задает stub TcpClient.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:System.Net.Sockets.Fakes.StubTcpClient.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubTcpClient</summary>
        </member>
        <member name="P:System.Net.Sockets.Fakes.StubTcpClient.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Net.Sockets.Fakes.StubTcpClient.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Net.Sockets.Fakes.StubTcpListener">
            <summary>Тип заглушки System.Net.Sockets.TcpListener</summary>
        </member>
        <member name="M:System.Net.Sockets.Fakes.StubTcpListener.#ctor(System.Int32)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Sockets.Fakes.StubTcpListener.#ctor(System.Net.IPEndPoint)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Sockets.Fakes.StubTcpListener.#ctor(System.Net.IPAddress,System.Int32)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Net.Sockets.Fakes.StubTcpListener.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Net.Sockets.Fakes.StubTcpListener.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubTcpListener</summary>
        </member>
        <member name="P:System.Net.Sockets.Fakes.StubTcpListener.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Net.Sockets.Fakes.StubTcpListener.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Net.Sockets.Fakes.StubUdpClient">
            <summary>Тип заглушки System.Net.Sockets.UdpClient</summary>
        </member>
        <member name="M:System.Net.Sockets.Fakes.StubUdpClient.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Sockets.Fakes.StubUdpClient.#ctor(System.Int32)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Sockets.Fakes.StubUdpClient.#ctor(System.Net.IPEndPoint)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Sockets.Fakes.StubUdpClient.#ctor(System.Net.Sockets.AddressFamily)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Sockets.Fakes.StubUdpClient.#ctor(System.Int32,System.Net.Sockets.AddressFamily)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.Sockets.Fakes.StubUdpClient.#ctor(System.String,System.Int32)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Net.Sockets.Fakes.StubUdpClient.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Net.Sockets.Fakes.StubUdpClient.Dispose(System.Boolean)">
            <summary>Задает заглушка UdpClient.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.Net.Sockets.Fakes.StubUdpClient.DisposeBoolean">
            <summary>Задает stub UdpClient.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:System.Net.Sockets.Fakes.StubUdpClient.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubUdpClient</summary>
        </member>
        <member name="P:System.Net.Sockets.Fakes.StubUdpClient.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Net.Sockets.Fakes.StubUdpClient.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Net.WebSockets.Fakes.StubWebSocket">
            <summary>Тип заглушки System.Net.WebSockets.WebSocket</summary>
        </member>
        <member name="M:System.Net.WebSockets.Fakes.StubWebSocket.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.WebSockets.Fakes.StubWebSocket.Abort">
            <summary>Задает заглушка WebSocket.Abort()</summary>
        </member>
        <member name="F:System.Net.WebSockets.Fakes.StubWebSocket.Abort01">
            <summary>Задает stub WebSocket.Abort()</summary>
        </member>
        <member name="P:System.Net.WebSockets.Fakes.StubWebSocket.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Net.WebSockets.Fakes.StubWebSocket.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
            <summary>Задает заглушка WebSocket.CloseAsync(WebSocketCloseStatus closeStatus, String statusDescription, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:System.Net.WebSockets.Fakes.StubWebSocket.CloseAsyncWebSocketCloseStatusStringCancellationToken">
            <summary>Задает stub WebSocket.CloseAsync(WebSocketCloseStatus closeStatus, String statusDescription, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:System.Net.WebSockets.Fakes.StubWebSocket.CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
            <summary>Задает заглушка WebSocket.CloseOutputAsync(WebSocketCloseStatus closeStatus, String statusDescription, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:System.Net.WebSockets.Fakes.StubWebSocket.CloseOutputAsyncWebSocketCloseStatusStringCancellationToken">
            <summary>Задает stub WebSocket.CloseOutputAsync(WebSocketCloseStatus closeStatus, String statusDescription, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:System.Net.WebSockets.Fakes.StubWebSocket.CloseStatus">
            <summary>Задает stub WebSocket.get_CloseStatus()</summary>
        </member>
        <member name="P:System.Net.WebSockets.Fakes.StubWebSocket.CloseStatusDescription">
            <summary>Задает stub WebSocket.get_CloseStatusDescription()</summary>
        </member>
        <member name="F:System.Net.WebSockets.Fakes.StubWebSocket.CloseStatusDescriptionGet">
            <summary>Задает stub WebSocket.get_CloseStatusDescription()</summary>
        </member>
        <member name="F:System.Net.WebSockets.Fakes.StubWebSocket.CloseStatusGet">
            <summary>Задает stub WebSocket.get_CloseStatus()</summary>
        </member>
        <member name="M:System.Net.WebSockets.Fakes.StubWebSocket.Dispose">
            <summary>Задает заглушка WebSocket.Dispose()</summary>
        </member>
        <member name="F:System.Net.WebSockets.Fakes.StubWebSocket.Dispose01">
            <summary>Задает stub WebSocket.Dispose()</summary>
        </member>
        <member name="M:System.Net.WebSockets.Fakes.StubWebSocket.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubWebSocket</summary>
        </member>
        <member name="P:System.Net.WebSockets.Fakes.StubWebSocket.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Net.WebSockets.Fakes.StubWebSocket.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.Net.WebSockets.Fakes.StubWebSocket.ReceiveAsync(System.ArraySegment{System.Byte},System.Threading.CancellationToken)">
            <summary>Задает заглушка WebSocket.ReceiveAsync(ArraySegment`1&lt;Byte&gt; buffer, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:System.Net.WebSockets.Fakes.StubWebSocket.ReceiveAsyncArraySegmentOfByteCancellationToken">
            <summary>Задает stub WebSocket.ReceiveAsync(ArraySegment`1&lt;Byte&gt; buffer, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:System.Net.WebSockets.Fakes.StubWebSocket.SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)">
            <summary>Задает заглушка WebSocket.SendAsync(ArraySegment`1&lt;Byte&gt; buffer, WebSocketMessageType messageType, Boolean endOfMessage, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:System.Net.WebSockets.Fakes.StubWebSocket.SendAsyncArraySegmentOfByteWebSocketMessageTypeBooleanCancellationToken">
            <summary>Задает stub WebSocket.SendAsync(ArraySegment`1&lt;Byte&gt; buffer, WebSocketMessageType messageType, Boolean endOfMessage, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:System.Net.WebSockets.Fakes.StubWebSocket.State">
            <summary>Задает stub WebSocket.get_State()</summary>
        </member>
        <member name="F:System.Net.WebSockets.Fakes.StubWebSocket.StateGet">
            <summary>Задает stub WebSocket.get_State()</summary>
        </member>
        <member name="P:System.Net.WebSockets.Fakes.StubWebSocket.SubProtocol">
            <summary>Задает stub WebSocket.get_SubProtocol()</summary>
        </member>
        <member name="F:System.Net.WebSockets.Fakes.StubWebSocket.SubProtocolGet">
            <summary>Задает stub WebSocket.get_SubProtocol()</summary>
        </member>
        <member name="T:System.Net.WebSockets.Fakes.StubWebSocketContext">
            <summary>Тип заглушки System.Net.WebSockets.WebSocketContext</summary>
        </member>
        <member name="M:System.Net.WebSockets.Fakes.StubWebSocketContext.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Net.WebSockets.Fakes.StubWebSocketContext.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Net.WebSockets.Fakes.StubWebSocketContext.CookieCollection">
            <summary>Задает stub WebSocketContext.get_CookieCollection()</summary>
        </member>
        <member name="F:System.Net.WebSockets.Fakes.StubWebSocketContext.CookieCollectionGet">
            <summary>Задает stub WebSocketContext.get_CookieCollection()</summary>
        </member>
        <member name="P:System.Net.WebSockets.Fakes.StubWebSocketContext.Headers">
            <summary>Задает stub WebSocketContext.get_Headers()</summary>
        </member>
        <member name="F:System.Net.WebSockets.Fakes.StubWebSocketContext.HeadersGet">
            <summary>Задает stub WebSocketContext.get_Headers()</summary>
        </member>
        <member name="M:System.Net.WebSockets.Fakes.StubWebSocketContext.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubWebSocketContext</summary>
        </member>
        <member name="P:System.Net.WebSockets.Fakes.StubWebSocketContext.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Net.WebSockets.Fakes.StubWebSocketContext.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Net.WebSockets.Fakes.StubWebSocketContext.IsAuthenticated">
            <summary>Задает stub WebSocketContext.get_IsAuthenticated()</summary>
        </member>
        <member name="F:System.Net.WebSockets.Fakes.StubWebSocketContext.IsAuthenticatedGet">
            <summary>Задает stub WebSocketContext.get_IsAuthenticated()</summary>
        </member>
        <member name="P:System.Net.WebSockets.Fakes.StubWebSocketContext.IsLocal">
            <summary>Задает stub WebSocketContext.get_IsLocal()</summary>
        </member>
        <member name="F:System.Net.WebSockets.Fakes.StubWebSocketContext.IsLocalGet">
            <summary>Задает stub WebSocketContext.get_IsLocal()</summary>
        </member>
        <member name="P:System.Net.WebSockets.Fakes.StubWebSocketContext.IsSecureConnection">
            <summary>Задает stub WebSocketContext.get_IsSecureConnection()</summary>
        </member>
        <member name="F:System.Net.WebSockets.Fakes.StubWebSocketContext.IsSecureConnectionGet">
            <summary>Задает stub WebSocketContext.get_IsSecureConnection()</summary>
        </member>
        <member name="P:System.Net.WebSockets.Fakes.StubWebSocketContext.Origin">
            <summary>Задает stub WebSocketContext.get_Origin()</summary>
        </member>
        <member name="F:System.Net.WebSockets.Fakes.StubWebSocketContext.OriginGet">
            <summary>Задает stub WebSocketContext.get_Origin()</summary>
        </member>
        <member name="P:System.Net.WebSockets.Fakes.StubWebSocketContext.RequestUri">
            <summary>Задает stub WebSocketContext.get_RequestUri()</summary>
        </member>
        <member name="F:System.Net.WebSockets.Fakes.StubWebSocketContext.RequestUriGet">
            <summary>Задает stub WebSocketContext.get_RequestUri()</summary>
        </member>
        <member name="P:System.Net.WebSockets.Fakes.StubWebSocketContext.SecWebSocketKey">
            <summary>Задает stub WebSocketContext.get_SecWebSocketKey()</summary>
        </member>
        <member name="F:System.Net.WebSockets.Fakes.StubWebSocketContext.SecWebSocketKeyGet">
            <summary>Задает stub WebSocketContext.get_SecWebSocketKey()</summary>
        </member>
        <member name="P:System.Net.WebSockets.Fakes.StubWebSocketContext.SecWebSocketProtocols">
            <summary>Задает stub WebSocketContext.get_SecWebSocketProtocols()</summary>
        </member>
        <member name="F:System.Net.WebSockets.Fakes.StubWebSocketContext.SecWebSocketProtocolsGet">
            <summary>Задает stub WebSocketContext.get_SecWebSocketProtocols()</summary>
        </member>
        <member name="P:System.Net.WebSockets.Fakes.StubWebSocketContext.SecWebSocketVersion">
            <summary>Задает stub WebSocketContext.get_SecWebSocketVersion()</summary>
        </member>
        <member name="F:System.Net.WebSockets.Fakes.StubWebSocketContext.SecWebSocketVersionGet">
            <summary>Задает stub WebSocketContext.get_SecWebSocketVersion()</summary>
        </member>
        <member name="P:System.Net.WebSockets.Fakes.StubWebSocketContext.User">
            <summary>Задает stub WebSocketContext.get_User()</summary>
        </member>
        <member name="F:System.Net.WebSockets.Fakes.StubWebSocketContext.UserGet">
            <summary>Задает stub WebSocketContext.get_User()</summary>
        </member>
        <member name="P:System.Net.WebSockets.Fakes.StubWebSocketContext.WebSocket">
            <summary>Задает stub WebSocketContext.get_WebSocket()</summary>
        </member>
        <member name="F:System.Net.WebSockets.Fakes.StubWebSocketContext.WebSocketGet">
            <summary>Задает stub WebSocketContext.get_WebSocket()</summary>
        </member>
        <member name="T:System.Net.WebSockets.Fakes.StubWebSocketReceiveResult">
            <summary>Тип заглушки System.Net.WebSockets.WebSocketReceiveResult</summary>
        </member>
        <member name="M:System.Net.WebSockets.Fakes.StubWebSocketReceiveResult.#ctor(System.Int32,System.Net.WebSockets.WebSocketMessageType,System.Boolean)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Net.WebSockets.Fakes.StubWebSocketReceiveResult.#ctor(System.Int32,System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Nullable{System.Net.WebSockets.WebSocketCloseStatus},System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Net.WebSockets.Fakes.StubWebSocketReceiveResult.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Net.WebSockets.Fakes.StubWebSocketReceiveResult.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubWebSocketReceiveResult</summary>
        </member>
        <member name="P:System.Net.WebSockets.Fakes.StubWebSocketReceiveResult.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Net.WebSockets.Fakes.StubWebSocketReceiveResult.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Reflection.Fakes.StubICustomTypeProvider">
            <summary>Тип заглушки System.Reflection.ICustomTypeProvider</summary>
        </member>
        <member name="M:System.Reflection.Fakes.StubICustomTypeProvider.#ctor">
            <summary>Инициализирует новый экземпляр type StubICustomTypeProvider</summary>
        </member>
        <member name="F:System.Reflection.Fakes.StubICustomTypeProvider.GetCustomType">
            <summary>Задает stub ICustomTypeProvider.GetCustomType()</summary>
        </member>
        <member name="M:System.Reflection.Fakes.StubICustomTypeProvider.System#Reflection#ICustomTypeProvider#GetCustomType">
            <summary>Задает заглушка ICustomTypeProvider.GetCustomType()</summary>
        </member>
        <member name="T:System.Runtime.InteropServices.ComTypes.Fakes.StubIAdviseSink">
            <summary>Тип заглушки System.Runtime.InteropServices.ComTypes.IAdviseSink</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIAdviseSink.#ctor">
            <summary>Инициализирует новый экземпляр type StubIAdviseSink</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubIAdviseSink.OnClose">
            <summary>Задает stub IAdviseSink.OnClose()</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubIAdviseSink.OnDataChangeFORMATETCRefSTGMEDIUMRef">
            <summary>Задает stub IAdviseSink.OnDataChange(FORMATETC&amp; format, STGMEDIUM&amp; stgmedium)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubIAdviseSink.OnRenameIMoniker">
            <summary>Задает stub IAdviseSink.OnRename(IMoniker moniker)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubIAdviseSink.OnSave">
            <summary>Задает stub IAdviseSink.OnSave()</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubIAdviseSink.OnViewChangeInt32Int32">
            <summary>Задает stub IAdviseSink.OnViewChange(Int32 aspect, Int32 index)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIAdviseSink.System#Runtime#InteropServices#ComTypes#IAdviseSink#OnClose">
            <summary>Задает заглушка IAdviseSink.OnClose()</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIAdviseSink.System#Runtime#InteropServices#ComTypes#IAdviseSink#OnDataChange(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)">
            <summary>Задает заглушка IAdviseSink.OnDataChange(FORMATETC&amp; format, STGMEDIUM&amp; stgmedium)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIAdviseSink.System#Runtime#InteropServices#ComTypes#IAdviseSink#OnRename(System.Runtime.InteropServices.ComTypes.IMoniker)">
            <summary>Задает заглушка IAdviseSink.OnRename(IMoniker moniker)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIAdviseSink.System#Runtime#InteropServices#ComTypes#IAdviseSink#OnSave">
            <summary>Задает заглушка IAdviseSink.OnSave()</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIAdviseSink.System#Runtime#InteropServices#ComTypes#IAdviseSink#OnViewChange(System.Int32,System.Int32)">
            <summary>Задает заглушка IAdviseSink.OnViewChange(Int32 aspect, Int32 index)</summary>
        </member>
        <member name="T:System.Runtime.InteropServices.ComTypes.Fakes.StubIDataObject">
            <summary>Тип заглушки System.Runtime.InteropServices.ComTypes.IDataObject</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIDataObject.#ctor">
            <summary>Инициализирует новый экземпляр type StubIDataObject</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubIDataObject.DAdviseFORMATETCRefADVFIAdviseSinkInt32Out">
            <summary>Задает stub IDataObject.DAdvise(FORMATETC&amp; pFormatetc, ADVF advf, IAdviseSink adviseSink, Int32&amp; connection)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubIDataObject.DUnadviseInt32">
            <summary>Задает stub IDataObject.DUnadvise(Int32 connection)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubIDataObject.EnumDAdviseIEnumSTATDATAOut">
            <summary>Задает stub IDataObject.EnumDAdvise(IEnumSTATDATA&amp; enumAdvise)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubIDataObject.EnumFormatEtcDATADIR">
            <summary>Задает stub IDataObject.EnumFormatEtc(DATADIR direction)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubIDataObject.GetCanonicalFormatEtcFORMATETCRefFORMATETCOut">
            <summary>Задает stub IDataObject.GetCanonicalFormatEtc(FORMATETC&amp; formatIn, FORMATETC&amp; formatOut)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubIDataObject.GetDataFORMATETCRefSTGMEDIUMOut">
            <summary>Задает stub IDataObject.GetData(FORMATETC&amp; format, STGMEDIUM&amp; medium)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubIDataObject.GetDataHereFORMATETCRefSTGMEDIUMRef">
            <summary>Задает stub IDataObject.GetDataHere(FORMATETC&amp; format, STGMEDIUM&amp; medium)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubIDataObject.QueryGetDataFORMATETCRef">
            <summary>Задает stub IDataObject.QueryGetData(FORMATETC&amp; format)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubIDataObject.SetDataFORMATETCRefSTGMEDIUMRefBoolean">
            <summary>Задает stub IDataObject.SetData(FORMATETC&amp; formatIn, STGMEDIUM&amp; medium, Boolean release)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIDataObject.System#Runtime#InteropServices#ComTypes#IDataObject#DAdvise(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.ADVF,System.Runtime.InteropServices.ComTypes.IAdviseSink,System.Int32@)">
            <summary>Задает заглушка IDataObject.DAdvise(FORMATETC&amp; pFormatetc, ADVF advf, IAdviseSink adviseSink, Int32&amp; connection)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIDataObject.System#Runtime#InteropServices#ComTypes#IDataObject#DUnadvise(System.Int32)">
            <summary>Задает заглушка IDataObject.DUnadvise(Int32 connection)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIDataObject.System#Runtime#InteropServices#ComTypes#IDataObject#EnumDAdvise(System.Runtime.InteropServices.ComTypes.IEnumSTATDATA@)">
            <summary>Задает заглушка IDataObject.EnumDAdvise(IEnumSTATDATA&amp; enumAdvise)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIDataObject.System#Runtime#InteropServices#ComTypes#IDataObject#EnumFormatEtc(System.Runtime.InteropServices.ComTypes.DATADIR)">
            <summary>Задает заглушка IDataObject.EnumFormatEtc(DATADIR direction)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIDataObject.System#Runtime#InteropServices#ComTypes#IDataObject#GetCanonicalFormatEtc(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.FORMATETC@)">
            <summary>Задает заглушка IDataObject.GetCanonicalFormatEtc(FORMATETC&amp; formatIn, FORMATETC&amp; formatOut)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIDataObject.System#Runtime#InteropServices#ComTypes#IDataObject#GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)">
            <summary>Задает заглушка IDataObject.GetData(FORMATETC&amp; format, STGMEDIUM&amp; medium)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIDataObject.System#Runtime#InteropServices#ComTypes#IDataObject#GetDataHere(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)">
            <summary>Задает заглушка IDataObject.GetDataHere(FORMATETC&amp; format, STGMEDIUM&amp; medium)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIDataObject.System#Runtime#InteropServices#ComTypes#IDataObject#QueryGetData(System.Runtime.InteropServices.ComTypes.FORMATETC@)">
            <summary>Задает заглушка IDataObject.QueryGetData(FORMATETC&amp; format)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIDataObject.System#Runtime#InteropServices#ComTypes#IDataObject#SetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@,System.Boolean)">
            <summary>Задает заглушка IDataObject.SetData(FORMATETC&amp; formatIn, STGMEDIUM&amp; medium, Boolean release)</summary>
        </member>
        <member name="T:System.Runtime.InteropServices.ComTypes.Fakes.StubIEnumFORMATETC">
            <summary>Тип заглушки System.Runtime.InteropServices.ComTypes.IEnumFORMATETC</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIEnumFORMATETC.#ctor">
            <summary>Инициализирует новый экземпляр type StubIEnumFORMATETC</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubIEnumFORMATETC.CloneIEnumFORMATETCOut">
            <summary>Задает stub IEnumFORMATETC.Clone(IEnumFORMATETC&amp; newEnum)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubIEnumFORMATETC.NextInt32FORMATETCArrayInt32Array">
            <summary>Задает stub IEnumFORMATETC.Next(Int32 celt, FORMATETC[] rgelt, Int32[] pceltFetched)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubIEnumFORMATETC.Reset">
            <summary>Задает stub IEnumFORMATETC.Reset()</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubIEnumFORMATETC.SkipInt32">
            <summary>Задает stub IEnumFORMATETC.Skip(Int32 celt)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIEnumFORMATETC.System#Runtime#InteropServices#ComTypes#IEnumFORMATETC#Clone(System.Runtime.InteropServices.ComTypes.IEnumFORMATETC@)">
            <summary>Задает заглушка IEnumFORMATETC.Clone(IEnumFORMATETC&amp; newEnum)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIEnumFORMATETC.System#Runtime#InteropServices#ComTypes#IEnumFORMATETC#Next(System.Int32,System.Runtime.InteropServices.ComTypes.FORMATETC[],System.Int32[])">
            <summary>Задает заглушка IEnumFORMATETC.Next(Int32 celt, FORMATETC[] rgelt, Int32[] pceltFetched)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIEnumFORMATETC.System#Runtime#InteropServices#ComTypes#IEnumFORMATETC#Reset">
            <summary>Задает заглушка IEnumFORMATETC.Reset()</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIEnumFORMATETC.System#Runtime#InteropServices#ComTypes#IEnumFORMATETC#Skip(System.Int32)">
            <summary>Задает заглушка IEnumFORMATETC.Skip(Int32 celt)</summary>
        </member>
        <member name="T:System.Runtime.InteropServices.ComTypes.Fakes.StubIEnumSTATDATA">
            <summary>Тип заглушки System.Runtime.InteropServices.ComTypes.IEnumSTATDATA</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIEnumSTATDATA.#ctor">
            <summary>Инициализирует новый экземпляр type StubIEnumSTATDATA</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubIEnumSTATDATA.CloneIEnumSTATDATAOut">
            <summary>Задает stub IEnumSTATDATA.Clone(IEnumSTATDATA&amp; newEnum)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubIEnumSTATDATA.NextInt32STATDATAArrayInt32Array">
            <summary>Задает stub IEnumSTATDATA.Next(Int32 celt, STATDATA[] rgelt, Int32[] pceltFetched)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubIEnumSTATDATA.Reset">
            <summary>Задает stub IEnumSTATDATA.Reset()</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubIEnumSTATDATA.SkipInt32">
            <summary>Задает stub IEnumSTATDATA.Skip(Int32 celt)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIEnumSTATDATA.System#Runtime#InteropServices#ComTypes#IEnumSTATDATA#Clone(System.Runtime.InteropServices.ComTypes.IEnumSTATDATA@)">
            <summary>Задает заглушка IEnumSTATDATA.Clone(IEnumSTATDATA&amp; newEnum)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIEnumSTATDATA.System#Runtime#InteropServices#ComTypes#IEnumSTATDATA#Next(System.Int32,System.Runtime.InteropServices.ComTypes.STATDATA[],System.Int32[])">
            <summary>Задает заглушка IEnumSTATDATA.Next(Int32 celt, STATDATA[] rgelt, Int32[] pceltFetched)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIEnumSTATDATA.System#Runtime#InteropServices#ComTypes#IEnumSTATDATA#Reset">
            <summary>Задает заглушка IEnumSTATDATA.Reset()</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIEnumSTATDATA.System#Runtime#InteropServices#ComTypes#IEnumSTATDATA#Skip(System.Int32)">
            <summary>Задает заглушка IEnumSTATDATA.Skip(Int32 celt)</summary>
        </member>
        <member name="T:System.Runtime.InteropServices.Fakes.StubStandardOleMarshalObject">
            <summary>Тип заглушки System.Runtime.InteropServices.StandardOleMarshalObject</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubStandardOleMarshalObject.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.StubStandardOleMarshalObject.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubStandardOleMarshalObject.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubStandardOleMarshalObject</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.StubStandardOleMarshalObject.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.StubStandardOleMarshalObject.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Security.Authentication.ExtendedProtection.Fakes.StubChannelBinding">
            <summary>Тип заглушки System.Security.Authentication.ExtendedProtection.ChannelBinding</summary>
        </member>
        <member name="M:System.Security.Authentication.ExtendedProtection.Fakes.StubChannelBinding.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Security.Authentication.ExtendedProtection.Fakes.StubChannelBinding.#ctor(System.Boolean)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Security.Authentication.ExtendedProtection.Fakes.StubChannelBinding.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Security.Authentication.ExtendedProtection.Fakes.StubChannelBinding.Dispose(System.Boolean)">
            <summary>Задает заглушка SafeHandle.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.Security.Authentication.ExtendedProtection.Fakes.StubChannelBinding.DisposeBoolean">
            <summary>Задает stub SafeHandle.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:System.Security.Authentication.ExtendedProtection.Fakes.StubChannelBinding.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubChannelBinding</summary>
        </member>
        <member name="P:System.Security.Authentication.ExtendedProtection.Fakes.StubChannelBinding.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Security.Authentication.ExtendedProtection.Fakes.StubChannelBinding.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Security.Authentication.ExtendedProtection.Fakes.StubChannelBinding.IsInvalid">
            <summary>Задает stub SafeHandleZeroOrMinusOneIsInvalid.get_IsInvalid()</summary>
        </member>
        <member name="F:System.Security.Authentication.ExtendedProtection.Fakes.StubChannelBinding.IsInvalidGet">
            <summary>Задает stub SafeHandleZeroOrMinusOneIsInvalid.get_IsInvalid()</summary>
        </member>
        <member name="M:System.Security.Authentication.ExtendedProtection.Fakes.StubChannelBinding.ReleaseHandle">
            <summary>Задает заглушка SafeHandle.ReleaseHandle()</summary>
        </member>
        <member name="F:System.Security.Authentication.ExtendedProtection.Fakes.StubChannelBinding.ReleaseHandle01">
            <summary>Задает stub SafeHandle.ReleaseHandle()</summary>
        </member>
        <member name="P:System.Security.Authentication.ExtendedProtection.Fakes.StubChannelBinding.Size">
            <summary>Задает stub ChannelBinding.get_Size()</summary>
        </member>
        <member name="F:System.Security.Authentication.ExtendedProtection.Fakes.StubChannelBinding.SizeGet">
            <summary>Задает stub ChannelBinding.get_Size()</summary>
        </member>
        <member name="T:System.Security.Authentication.ExtendedProtection.Fakes.StubExtendedProtectionPolicy">
            <summary>Тип заглушки System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy</summary>
        </member>
        <member name="M:System.Security.Authentication.ExtendedProtection.Fakes.StubExtendedProtectionPolicy.#ctor(System.Security.Authentication.ExtendedProtection.PolicyEnforcement)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Security.Authentication.ExtendedProtection.Fakes.StubExtendedProtectionPolicy.#ctor(System.Security.Authentication.ExtendedProtection.PolicyEnforcement,System.Security.Authentication.ExtendedProtection.ChannelBinding)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Security.Authentication.ExtendedProtection.Fakes.StubExtendedProtectionPolicy.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Security.Authentication.ExtendedProtection.Fakes.StubExtendedProtectionPolicy.#ctor(System.Security.Authentication.ExtendedProtection.PolicyEnforcement,System.Security.Authentication.ExtendedProtection.ProtectionScenario,System.Security.Authentication.ExtendedProtection.ServiceNameCollection)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Security.Authentication.ExtendedProtection.Fakes.StubExtendedProtectionPolicy.#ctor(System.Security.Authentication.ExtendedProtection.PolicyEnforcement,System.Security.Authentication.ExtendedProtection.ProtectionScenario,System.Collections.ICollection)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Security.Authentication.ExtendedProtection.Fakes.StubExtendedProtectionPolicy.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Security.Authentication.ExtendedProtection.Fakes.StubExtendedProtectionPolicy.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubExtendedProtectionPolicy</summary>
        </member>
        <member name="P:System.Security.Authentication.ExtendedProtection.Fakes.StubExtendedProtectionPolicy.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Security.Authentication.ExtendedProtection.Fakes.StubExtendedProtectionPolicy.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.Security.Authentication.ExtendedProtection.Fakes.StubExtendedProtectionPolicy.ToString">
            <summary>Задает заглушка ExtendedProtectionPolicy.ToString()</summary>
        </member>
        <member name="F:System.Security.Authentication.ExtendedProtection.Fakes.StubExtendedProtectionPolicy.ToString01">
            <summary>Задает stub ExtendedProtectionPolicy.ToString()</summary>
        </member>
        <member name="T:System.Security.Authentication.ExtendedProtection.Fakes.StubExtendedProtectionPolicyTypeConverter">
            <summary>Тип заглушки System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicyTypeConverter</summary>
        </member>
        <member name="M:System.Security.Authentication.ExtendedProtection.Fakes.StubExtendedProtectionPolicyTypeConverter.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Security.Authentication.ExtendedProtection.Fakes.StubExtendedProtectionPolicyTypeConverter.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Security.Authentication.ExtendedProtection.Fakes.StubExtendedProtectionPolicyTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>Задает заглушка TypeConverter.CanConvertFrom(ITypeDescriptorContext context, Type sourceType)</summary>
        </member>
        <member name="F:System.Security.Authentication.ExtendedProtection.Fakes.StubExtendedProtectionPolicyTypeConverter.CanConvertFromITypeDescriptorContextType">
            <summary>Задает stub TypeConverter.CanConvertFrom(ITypeDescriptorContext context, Type sourceType)</summary>
        </member>
        <member name="M:System.Security.Authentication.ExtendedProtection.Fakes.StubExtendedProtectionPolicyTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>Задает заглушка ExtendedProtectionPolicyTypeConverter.CanConvertTo(ITypeDescriptorContext context, Type destinationType)</summary>
        </member>
        <member name="F:System.Security.Authentication.ExtendedProtection.Fakes.StubExtendedProtectionPolicyTypeConverter.CanConvertToITypeDescriptorContextType">
            <summary>Задает stub ExtendedProtectionPolicyTypeConverter.CanConvertTo(ITypeDescriptorContext context, Type destinationType)</summary>
        </member>
        <member name="M:System.Security.Authentication.ExtendedProtection.Fakes.StubExtendedProtectionPolicyTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>Задает заглушка TypeConverter.ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, Object value)</summary>
        </member>
        <member name="F:System.Security.Authentication.ExtendedProtection.Fakes.StubExtendedProtectionPolicyTypeConverter.ConvertFromITypeDescriptorContextCultureInfoObject">
            <summary>Задает stub TypeConverter.ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, Object value)</summary>
        </member>
        <member name="M:System.Security.Authentication.ExtendedProtection.Fakes.StubExtendedProtectionPolicyTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>Задает заглушка ExtendedProtectionPolicyTypeConverter.ConvertTo(ITypeDescriptorContext context, CultureInfo culture, Object value, Type destinationType)</summary>
        </member>
        <member name="F:System.Security.Authentication.ExtendedProtection.Fakes.StubExtendedProtectionPolicyTypeConverter.ConvertToITypeDescriptorContextCultureInfoObjectType">
            <summary>Задает stub ExtendedProtectionPolicyTypeConverter.ConvertTo(ITypeDescriptorContext context, CultureInfo culture, Object value, Type destinationType)</summary>
        </member>
        <member name="M:System.Security.Authentication.ExtendedProtection.Fakes.StubExtendedProtectionPolicyTypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
            <summary>Задает заглушка TypeConverter.CreateInstance(ITypeDescriptorContext context, IDictionary propertyValues)</summary>
        </member>
        <member name="F:System.Security.Authentication.ExtendedProtection.Fakes.StubExtendedProtectionPolicyTypeConverter.CreateInstanceITypeDescriptorContextIDictionary">
            <summary>Задает stub TypeConverter.CreateInstance(ITypeDescriptorContext context, IDictionary propertyValues)</summary>
        </member>
        <member name="M:System.Security.Authentication.ExtendedProtection.Fakes.StubExtendedProtectionPolicyTypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Задает заглушка TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.Security.Authentication.ExtendedProtection.Fakes.StubExtendedProtectionPolicyTypeConverter.GetCreateInstanceSupportedITypeDescriptorContext">
            <summary>Задает stub TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.Security.Authentication.ExtendedProtection.Fakes.StubExtendedProtectionPolicyTypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>Задает заглушка TypeConverter.GetProperties(ITypeDescriptorContext context, Object value, Attribute[] attributes)</summary>
        </member>
        <member name="F:System.Security.Authentication.ExtendedProtection.Fakes.StubExtendedProtectionPolicyTypeConverter.GetPropertiesITypeDescriptorContextObjectAttributeArray">
            <summary>Задает stub TypeConverter.GetProperties(ITypeDescriptorContext context, Object value, Attribute[] attributes)</summary>
        </member>
        <member name="M:System.Security.Authentication.ExtendedProtection.Fakes.StubExtendedProtectionPolicyTypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Задает заглушка TypeConverter.GetPropertiesSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.Security.Authentication.ExtendedProtection.Fakes.StubExtendedProtectionPolicyTypeConverter.GetPropertiesSupportedITypeDescriptorContext">
            <summary>Задает stub TypeConverter.GetPropertiesSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.Security.Authentication.ExtendedProtection.Fakes.StubExtendedProtectionPolicyTypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Задает заглушка TypeConverter.GetStandardValues(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.Security.Authentication.ExtendedProtection.Fakes.StubExtendedProtectionPolicyTypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Задает заглушка TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.Security.Authentication.ExtendedProtection.Fakes.StubExtendedProtectionPolicyTypeConverter.GetStandardValuesExclusiveITypeDescriptorContext">
            <summary>Задает stub TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.Security.Authentication.ExtendedProtection.Fakes.StubExtendedProtectionPolicyTypeConverter.GetStandardValuesITypeDescriptorContext">
            <summary>Задает stub TypeConverter.GetStandardValues(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.Security.Authentication.ExtendedProtection.Fakes.StubExtendedProtectionPolicyTypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Задает заглушка TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="F:System.Security.Authentication.ExtendedProtection.Fakes.StubExtendedProtectionPolicyTypeConverter.GetStandardValuesSupportedITypeDescriptorContext">
            <summary>Задает stub TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext context)</summary>
        </member>
        <member name="M:System.Security.Authentication.ExtendedProtection.Fakes.StubExtendedProtectionPolicyTypeConverter.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubExtendedProtectionPolicyTypeConverter</summary>
        </member>
        <member name="P:System.Security.Authentication.ExtendedProtection.Fakes.StubExtendedProtectionPolicyTypeConverter.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Security.Authentication.ExtendedProtection.Fakes.StubExtendedProtectionPolicyTypeConverter.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.Security.Authentication.ExtendedProtection.Fakes.StubExtendedProtectionPolicyTypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)">
            <summary>Задает заглушка TypeConverter.IsValid(ITypeDescriptorContext context, Object value)</summary>
        </member>
        <member name="F:System.Security.Authentication.ExtendedProtection.Fakes.StubExtendedProtectionPolicyTypeConverter.IsValidITypeDescriptorContextObject">
            <summary>Задает stub TypeConverter.IsValid(ITypeDescriptorContext context, Object value)</summary>
        </member>
        <member name="T:System.Security.Authentication.ExtendedProtection.Fakes.StubServiceNameCollection">
            <summary>Тип заглушки System.Security.Authentication.ExtendedProtection.ServiceNameCollection</summary>
        </member>
        <member name="M:System.Security.Authentication.ExtendedProtection.Fakes.StubServiceNameCollection.#ctor(System.Collections.ICollection)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Security.Authentication.ExtendedProtection.Fakes.StubServiceNameCollection.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Security.Authentication.ExtendedProtection.Fakes.StubServiceNameCollection.Count">
            <summary>Задает stub ReadOnlyCollectionBase.get_Count()</summary>
        </member>
        <member name="F:System.Security.Authentication.ExtendedProtection.Fakes.StubServiceNameCollection.CountGet">
            <summary>Задает stub ReadOnlyCollectionBase.get_Count()</summary>
        </member>
        <member name="M:System.Security.Authentication.ExtendedProtection.Fakes.StubServiceNameCollection.GetEnumerator">
            <summary>Задает заглушка ReadOnlyCollectionBase.GetEnumerator()</summary>
        </member>
        <member name="F:System.Security.Authentication.ExtendedProtection.Fakes.StubServiceNameCollection.GetEnumerator01">
            <summary>Задает stub ReadOnlyCollectionBase.GetEnumerator()</summary>
        </member>
        <member name="M:System.Security.Authentication.ExtendedProtection.Fakes.StubServiceNameCollection.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubServiceNameCollection</summary>
        </member>
        <member name="P:System.Security.Authentication.ExtendedProtection.Fakes.StubServiceNameCollection.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Security.Authentication.ExtendedProtection.Fakes.StubServiceNameCollection.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Security.Authentication.Fakes.StubAuthenticationException">
            <summary>Тип заглушки System.Security.Authentication.AuthenticationException</summary>
        </member>
        <member name="M:System.Security.Authentication.Fakes.StubAuthenticationException.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Security.Authentication.Fakes.StubAuthenticationException.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Security.Authentication.Fakes.StubAuthenticationException.#ctor(System.String,System.Exception)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Security.Authentication.Fakes.StubAuthenticationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Security.Authentication.Fakes.StubAuthenticationException.AttachBackingFieldToHelpLink">
            <summary>Присоединение делегатов для эмуляции StubAuthenticationException.HelpLink как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Security.Authentication.Fakes.StubAuthenticationException.AttachBackingFieldToSource">
            <summary>Присоединение делегатов для эмуляции StubAuthenticationException.Source как свойства с резервным полем.</summary>
        </member>
        <member name="P:System.Security.Authentication.Fakes.StubAuthenticationException.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Security.Authentication.Fakes.StubAuthenticationException.Data">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="F:System.Security.Authentication.Fakes.StubAuthenticationException.DataGet">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="M:System.Security.Authentication.Fakes.StubAuthenticationException.GetBaseException">
            <summary>Задает заглушка Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Security.Authentication.Fakes.StubAuthenticationException.GetBaseException01">
            <summary>Задает stub Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Security.Authentication.Fakes.StubAuthenticationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Security.Authentication.Fakes.StubAuthenticationException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.Security.Authentication.Fakes.StubAuthenticationException.HelpLink">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Security.Authentication.Fakes.StubAuthenticationException.HelpLinkGet">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Security.Authentication.Fakes.StubAuthenticationException.HelpLinkSetString">
            <summary>Задает stub Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Security.Authentication.Fakes.StubAuthenticationException.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubAuthenticationException</summary>
        </member>
        <member name="P:System.Security.Authentication.Fakes.StubAuthenticationException.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Security.Authentication.Fakes.StubAuthenticationException.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Security.Authentication.Fakes.StubAuthenticationException.Message">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="F:System.Security.Authentication.Fakes.StubAuthenticationException.MessageGet">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="P:System.Security.Authentication.Fakes.StubAuthenticationException.Source">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.Security.Authentication.Fakes.StubAuthenticationException.SourceGet">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.Security.Authentication.Fakes.StubAuthenticationException.SourceSetString">
            <summary>Задает stub Exception.set_Source(String value)</summary>
        </member>
        <member name="P:System.Security.Authentication.Fakes.StubAuthenticationException.StackTrace">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="F:System.Security.Authentication.Fakes.StubAuthenticationException.StackTraceGet">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Security.Authentication.Fakes.StubAuthenticationException.ToString">
            <summary>Задает заглушка Exception.ToString()</summary>
        </member>
        <member name="F:System.Security.Authentication.Fakes.StubAuthenticationException.ToString01">
            <summary>Задает stub Exception.ToString()</summary>
        </member>
        <member name="T:System.Security.Authentication.Fakes.StubInvalidCredentialException">
            <summary>Тип заглушки System.Security.Authentication.InvalidCredentialException</summary>
        </member>
        <member name="M:System.Security.Authentication.Fakes.StubInvalidCredentialException.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Security.Authentication.Fakes.StubInvalidCredentialException.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Security.Authentication.Fakes.StubInvalidCredentialException.#ctor(System.String,System.Exception)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Security.Authentication.Fakes.StubInvalidCredentialException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Security.Authentication.Fakes.StubInvalidCredentialException.AttachBackingFieldToHelpLink">
            <summary>Присоединение делегатов для эмуляции StubInvalidCredentialException.HelpLink как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Security.Authentication.Fakes.StubInvalidCredentialException.AttachBackingFieldToSource">
            <summary>Присоединение делегатов для эмуляции StubInvalidCredentialException.Source как свойства с резервным полем.</summary>
        </member>
        <member name="P:System.Security.Authentication.Fakes.StubInvalidCredentialException.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Security.Authentication.Fakes.StubInvalidCredentialException.Data">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="F:System.Security.Authentication.Fakes.StubInvalidCredentialException.DataGet">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="M:System.Security.Authentication.Fakes.StubInvalidCredentialException.GetBaseException">
            <summary>Задает заглушка Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Security.Authentication.Fakes.StubInvalidCredentialException.GetBaseException01">
            <summary>Задает stub Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Security.Authentication.Fakes.StubInvalidCredentialException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Security.Authentication.Fakes.StubInvalidCredentialException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.Security.Authentication.Fakes.StubInvalidCredentialException.HelpLink">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Security.Authentication.Fakes.StubInvalidCredentialException.HelpLinkGet">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Security.Authentication.Fakes.StubInvalidCredentialException.HelpLinkSetString">
            <summary>Задает stub Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Security.Authentication.Fakes.StubInvalidCredentialException.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubInvalidCredentialException</summary>
        </member>
        <member name="P:System.Security.Authentication.Fakes.StubInvalidCredentialException.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Security.Authentication.Fakes.StubInvalidCredentialException.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Security.Authentication.Fakes.StubInvalidCredentialException.Message">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="F:System.Security.Authentication.Fakes.StubInvalidCredentialException.MessageGet">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="P:System.Security.Authentication.Fakes.StubInvalidCredentialException.Source">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.Security.Authentication.Fakes.StubInvalidCredentialException.SourceGet">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.Security.Authentication.Fakes.StubInvalidCredentialException.SourceSetString">
            <summary>Задает stub Exception.set_Source(String value)</summary>
        </member>
        <member name="P:System.Security.Authentication.Fakes.StubInvalidCredentialException.StackTrace">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="F:System.Security.Authentication.Fakes.StubInvalidCredentialException.StackTraceGet">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Security.Authentication.Fakes.StubInvalidCredentialException.ToString">
            <summary>Задает заглушка Exception.ToString()</summary>
        </member>
        <member name="F:System.Security.Authentication.Fakes.StubInvalidCredentialException.ToString01">
            <summary>Задает stub Exception.ToString()</summary>
        </member>
        <member name="T:System.Security.Cryptography.Fakes.StubAsnEncodedData">
            <summary>Тип заглушки System.Security.Cryptography.AsnEncodedData</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.StubAsnEncodedData.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.StubAsnEncodedData.#ctor(System.Byte[])">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.StubAsnEncodedData.#ctor(System.Security.Cryptography.AsnEncodedData)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.StubAsnEncodedData.#ctor(System.Security.Cryptography.Oid,System.Byte[])">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.StubAsnEncodedData.#ctor(System.String,System.Byte[])">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.StubAsnEncodedData.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.StubAsnEncodedData.CopyFrom(System.Security.Cryptography.AsnEncodedData)">
            <summary>Задает заглушка AsnEncodedData.CopyFrom(AsnEncodedData asnEncodedData)</summary>
        </member>
        <member name="F:System.Security.Cryptography.Fakes.StubAsnEncodedData.CopyFromAsnEncodedData">
            <summary>Задает stub AsnEncodedData.CopyFrom(AsnEncodedData asnEncodedData)</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.StubAsnEncodedData.Format(System.Boolean)">
            <summary>Задает заглушка AsnEncodedData.Format(Boolean multiLine)</summary>
        </member>
        <member name="F:System.Security.Cryptography.Fakes.StubAsnEncodedData.FormatBoolean">
            <summary>Задает stub AsnEncodedData.Format(Boolean multiLine)</summary>
        </member>
        <member name="M:System.Security.Cryptography.Fakes.StubAsnEncodedData.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubAsnEncodedData</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.StubAsnEncodedData.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Security.Cryptography.Fakes.StubAsnEncodedData.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate2Collection">
            <summary>Тип заглушки System.Security.Cryptography.X509Certificates.X509Certificate2Collection</summary>
        </member>
        <member name="M:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate2Collection.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate2Collection.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2[])">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate2Collection.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate2Collection.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2Collection)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate2Collection.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate2Collection.GetHashCode">
            <summary>Задает заглушка X509CertificateCollection.GetHashCode()</summary>
        </member>
        <member name="F:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate2Collection.GetHashCode01">
            <summary>Задает stub X509CertificateCollection.GetHashCode()</summary>
        </member>
        <member name="M:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate2Collection.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubX509Certificate2Collection</summary>
        </member>
        <member name="P:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate2Collection.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate2Collection.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate2Collection.OnClear">
            <summary>Задает заглушка CollectionBase.OnClear()</summary>
        </member>
        <member name="F:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate2Collection.OnClear01">
            <summary>Задает stub CollectionBase.OnClear()</summary>
        </member>
        <member name="M:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate2Collection.OnClearComplete">
            <summary>Задает заглушка CollectionBase.OnClearComplete()</summary>
        </member>
        <member name="F:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate2Collection.OnClearComplete01">
            <summary>Задает stub CollectionBase.OnClearComplete()</summary>
        </member>
        <member name="M:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate2Collection.OnInsert(System.Int32,System.Object)">
            <summary>Задает заглушка CollectionBase.OnInsert(Int32 index, Object value)</summary>
        </member>
        <member name="M:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate2Collection.OnInsertComplete(System.Int32,System.Object)">
            <summary>Задает заглушка CollectionBase.OnInsertComplete(Int32 index, Object value)</summary>
        </member>
        <member name="F:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate2Collection.OnInsertCompleteInt32Object">
            <summary>Задает stub CollectionBase.OnInsertComplete(Int32 index, Object value)</summary>
        </member>
        <member name="F:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate2Collection.OnInsertInt32Object">
            <summary>Задает stub CollectionBase.OnInsert(Int32 index, Object value)</summary>
        </member>
        <member name="M:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate2Collection.OnRemove(System.Int32,System.Object)">
            <summary>Задает заглушка CollectionBase.OnRemove(Int32 index, Object value)</summary>
        </member>
        <member name="M:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate2Collection.OnRemoveComplete(System.Int32,System.Object)">
            <summary>Задает заглушка CollectionBase.OnRemoveComplete(Int32 index, Object value)</summary>
        </member>
        <member name="F:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate2Collection.OnRemoveCompleteInt32Object">
            <summary>Задает stub CollectionBase.OnRemoveComplete(Int32 index, Object value)</summary>
        </member>
        <member name="F:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate2Collection.OnRemoveInt32Object">
            <summary>Задает stub CollectionBase.OnRemove(Int32 index, Object value)</summary>
        </member>
        <member name="M:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate2Collection.OnSet(System.Int32,System.Object,System.Object)">
            <summary>Задает заглушка CollectionBase.OnSet(Int32 index, Object oldValue, Object newValue)</summary>
        </member>
        <member name="M:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate2Collection.OnSetComplete(System.Int32,System.Object,System.Object)">
            <summary>Задает заглушка CollectionBase.OnSetComplete(Int32 index, Object oldValue, Object newValue)</summary>
        </member>
        <member name="F:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate2Collection.OnSetCompleteInt32ObjectObject">
            <summary>Задает stub CollectionBase.OnSetComplete(Int32 index, Object oldValue, Object newValue)</summary>
        </member>
        <member name="F:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate2Collection.OnSetInt32ObjectObject">
            <summary>Задает stub CollectionBase.OnSet(Int32 index, Object oldValue, Object newValue)</summary>
        </member>
        <member name="M:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate2Collection.OnValidate(System.Object)">
            <summary>Задает заглушка CollectionBase.OnValidate(Object value)</summary>
        </member>
        <member name="F:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate2Collection.OnValidateObject">
            <summary>Задает stub CollectionBase.OnValidate(Object value)</summary>
        </member>
        <member name="T:System.Security.Cryptography.X509Certificates.Fakes.StubX509CertificateCollection">
            <summary>Тип заглушки System.Security.Cryptography.X509Certificates.X509CertificateCollection</summary>
        </member>
        <member name="M:System.Security.Cryptography.X509Certificates.Fakes.StubX509CertificateCollection.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Security.Cryptography.X509Certificates.Fakes.StubX509CertificateCollection.#ctor(System.Security.Cryptography.X509Certificates.X509CertificateCollection)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Security.Cryptography.X509Certificates.Fakes.StubX509CertificateCollection.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate[])">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Security.Cryptography.X509Certificates.Fakes.StubX509CertificateCollection.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Security.Cryptography.X509Certificates.Fakes.StubX509CertificateCollection.GetHashCode">
            <summary>Задает заглушка X509CertificateCollection.GetHashCode()</summary>
        </member>
        <member name="F:System.Security.Cryptography.X509Certificates.Fakes.StubX509CertificateCollection.GetHashCode01">
            <summary>Задает stub X509CertificateCollection.GetHashCode()</summary>
        </member>
        <member name="M:System.Security.Cryptography.X509Certificates.Fakes.StubX509CertificateCollection.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubX509CertificateCollection</summary>
        </member>
        <member name="P:System.Security.Cryptography.X509Certificates.Fakes.StubX509CertificateCollection.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Security.Cryptography.X509Certificates.Fakes.StubX509CertificateCollection.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.Security.Cryptography.X509Certificates.Fakes.StubX509CertificateCollection.OnClear">
            <summary>Задает заглушка CollectionBase.OnClear()</summary>
        </member>
        <member name="F:System.Security.Cryptography.X509Certificates.Fakes.StubX509CertificateCollection.OnClear01">
            <summary>Задает stub CollectionBase.OnClear()</summary>
        </member>
        <member name="M:System.Security.Cryptography.X509Certificates.Fakes.StubX509CertificateCollection.OnClearComplete">
            <summary>Задает заглушка CollectionBase.OnClearComplete()</summary>
        </member>
        <member name="F:System.Security.Cryptography.X509Certificates.Fakes.StubX509CertificateCollection.OnClearComplete01">
            <summary>Задает stub CollectionBase.OnClearComplete()</summary>
        </member>
        <member name="M:System.Security.Cryptography.X509Certificates.Fakes.StubX509CertificateCollection.OnInsert(System.Int32,System.Object)">
            <summary>Задает заглушка CollectionBase.OnInsert(Int32 index, Object value)</summary>
        </member>
        <member name="M:System.Security.Cryptography.X509Certificates.Fakes.StubX509CertificateCollection.OnInsertComplete(System.Int32,System.Object)">
            <summary>Задает заглушка CollectionBase.OnInsertComplete(Int32 index, Object value)</summary>
        </member>
        <member name="F:System.Security.Cryptography.X509Certificates.Fakes.StubX509CertificateCollection.OnInsertCompleteInt32Object">
            <summary>Задает stub CollectionBase.OnInsertComplete(Int32 index, Object value)</summary>
        </member>
        <member name="F:System.Security.Cryptography.X509Certificates.Fakes.StubX509CertificateCollection.OnInsertInt32Object">
            <summary>Задает stub CollectionBase.OnInsert(Int32 index, Object value)</summary>
        </member>
        <member name="M:System.Security.Cryptography.X509Certificates.Fakes.StubX509CertificateCollection.OnRemove(System.Int32,System.Object)">
            <summary>Задает заглушка CollectionBase.OnRemove(Int32 index, Object value)</summary>
        </member>
        <member name="M:System.Security.Cryptography.X509Certificates.Fakes.StubX509CertificateCollection.OnRemoveComplete(System.Int32,System.Object)">
            <summary>Задает заглушка CollectionBase.OnRemoveComplete(Int32 index, Object value)</summary>
        </member>
        <member name="F:System.Security.Cryptography.X509Certificates.Fakes.StubX509CertificateCollection.OnRemoveCompleteInt32Object">
            <summary>Задает stub CollectionBase.OnRemoveComplete(Int32 index, Object value)</summary>
        </member>
        <member name="F:System.Security.Cryptography.X509Certificates.Fakes.StubX509CertificateCollection.OnRemoveInt32Object">
            <summary>Задает stub CollectionBase.OnRemove(Int32 index, Object value)</summary>
        </member>
        <member name="M:System.Security.Cryptography.X509Certificates.Fakes.StubX509CertificateCollection.OnSet(System.Int32,System.Object,System.Object)">
            <summary>Задает заглушка CollectionBase.OnSet(Int32 index, Object oldValue, Object newValue)</summary>
        </member>
        <member name="M:System.Security.Cryptography.X509Certificates.Fakes.StubX509CertificateCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
            <summary>Задает заглушка CollectionBase.OnSetComplete(Int32 index, Object oldValue, Object newValue)</summary>
        </member>
        <member name="F:System.Security.Cryptography.X509Certificates.Fakes.StubX509CertificateCollection.OnSetCompleteInt32ObjectObject">
            <summary>Задает stub CollectionBase.OnSetComplete(Int32 index, Object oldValue, Object newValue)</summary>
        </member>
        <member name="F:System.Security.Cryptography.X509Certificates.Fakes.StubX509CertificateCollection.OnSetInt32ObjectObject">
            <summary>Задает stub CollectionBase.OnSet(Int32 index, Object oldValue, Object newValue)</summary>
        </member>
        <member name="M:System.Security.Cryptography.X509Certificates.Fakes.StubX509CertificateCollection.OnValidate(System.Object)">
            <summary>Задает заглушка CollectionBase.OnValidate(Object value)</summary>
        </member>
        <member name="F:System.Security.Cryptography.X509Certificates.Fakes.StubX509CertificateCollection.OnValidateObject">
            <summary>Задает stub CollectionBase.OnValidate(Object value)</summary>
        </member>
        <member name="T:System.Security.Cryptography.X509Certificates.Fakes.StubX509Chain">
            <summary>Тип заглушки System.Security.Cryptography.X509Certificates.X509Chain</summary>
        </member>
        <member name="M:System.Security.Cryptography.X509Certificates.Fakes.StubX509Chain.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Security.Cryptography.X509Certificates.Fakes.StubX509Chain.#ctor(System.Boolean)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Security.Cryptography.X509Certificates.Fakes.StubX509Chain.#ctor(System.IntPtr)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Security.Cryptography.X509Certificates.Fakes.StubX509Chain.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Security.Cryptography.X509Certificates.Fakes.StubX509Chain.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubX509Chain</summary>
        </member>
        <member name="P:System.Security.Cryptography.X509Certificates.Fakes.StubX509Chain.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Security.Cryptography.X509Certificates.Fakes.StubX509Chain.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Security.Cryptography.X509Certificates.Fakes.StubX509Extension">
            <summary>Тип заглушки System.Security.Cryptography.X509Certificates.X509Extension</summary>
        </member>
        <member name="M:System.Security.Cryptography.X509Certificates.Fakes.StubX509Extension.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Security.Cryptography.X509Certificates.Fakes.StubX509Extension.#ctor(System.Security.Cryptography.AsnEncodedData,System.Boolean)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Security.Cryptography.X509Certificates.Fakes.StubX509Extension.#ctor(System.Security.Cryptography.Oid,System.Byte[],System.Boolean)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Security.Cryptography.X509Certificates.Fakes.StubX509Extension.#ctor(System.String,System.Byte[],System.Boolean)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Security.Cryptography.X509Certificates.Fakes.StubX509Extension.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Security.Cryptography.X509Certificates.Fakes.StubX509Extension.CopyFrom(System.Security.Cryptography.AsnEncodedData)">
            <summary>Задает заглушка X509Extension.CopyFrom(AsnEncodedData asnEncodedData)</summary>
        </member>
        <member name="F:System.Security.Cryptography.X509Certificates.Fakes.StubX509Extension.CopyFromAsnEncodedData">
            <summary>Задает stub X509Extension.CopyFrom(AsnEncodedData asnEncodedData)</summary>
        </member>
        <member name="M:System.Security.Cryptography.X509Certificates.Fakes.StubX509Extension.Format(System.Boolean)">
            <summary>Задает заглушка AsnEncodedData.Format(Boolean multiLine)</summary>
        </member>
        <member name="F:System.Security.Cryptography.X509Certificates.Fakes.StubX509Extension.FormatBoolean">
            <summary>Задает stub AsnEncodedData.Format(Boolean multiLine)</summary>
        </member>
        <member name="M:System.Security.Cryptography.X509Certificates.Fakes.StubX509Extension.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubX509Extension</summary>
        </member>
        <member name="P:System.Security.Cryptography.X509Certificates.Fakes.StubX509Extension.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Security.Cryptography.X509Certificates.Fakes.StubX509Extension.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Security.Permissions.Fakes.StubResourcePermissionBase">
            <summary>Тип заглушки System.Security.Permissions.ResourcePermissionBase</summary>
        </member>
        <member name="M:System.Security.Permissions.Fakes.StubResourcePermissionBase.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Security.Permissions.Fakes.StubResourcePermissionBase.#ctor(System.Security.Permissions.PermissionState)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Security.Permissions.Fakes.StubResourcePermissionBase.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Security.Permissions.Fakes.StubResourcePermissionBase.Copy">
            <summary>Задает заглушка ResourcePermissionBase.Copy()</summary>
        </member>
        <member name="F:System.Security.Permissions.Fakes.StubResourcePermissionBase.Copy01">
            <summary>Задает stub ResourcePermissionBase.Copy()</summary>
        </member>
        <member name="M:System.Security.Permissions.Fakes.StubResourcePermissionBase.Equals(System.Object)">
            <summary>Задает заглушка CodeAccessPermission.Equals(Object obj)</summary>
        </member>
        <member name="F:System.Security.Permissions.Fakes.StubResourcePermissionBase.EqualsObject">
            <summary>Задает stub CodeAccessPermission.Equals(Object obj)</summary>
        </member>
        <member name="M:System.Security.Permissions.Fakes.StubResourcePermissionBase.FromXml(System.Security.SecurityElement)">
            <summary>Задает заглушка ResourcePermissionBase.FromXml(SecurityElement securityElement)</summary>
        </member>
        <member name="F:System.Security.Permissions.Fakes.StubResourcePermissionBase.FromXmlSecurityElement">
            <summary>Задает stub ResourcePermissionBase.FromXml(SecurityElement securityElement)</summary>
        </member>
        <member name="M:System.Security.Permissions.Fakes.StubResourcePermissionBase.GetHashCode">
            <summary>Задает заглушка CodeAccessPermission.GetHashCode()</summary>
        </member>
        <member name="F:System.Security.Permissions.Fakes.StubResourcePermissionBase.GetHashCode01">
            <summary>Задает stub CodeAccessPermission.GetHashCode()</summary>
        </member>
        <member name="M:System.Security.Permissions.Fakes.StubResourcePermissionBase.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubResourcePermissionBase</summary>
        </member>
        <member name="P:System.Security.Permissions.Fakes.StubResourcePermissionBase.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Security.Permissions.Fakes.StubResourcePermissionBase.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.Security.Permissions.Fakes.StubResourcePermissionBase.Intersect(System.Security.IPermission)">
            <summary>Задает заглушка ResourcePermissionBase.Intersect(IPermission target)</summary>
        </member>
        <member name="F:System.Security.Permissions.Fakes.StubResourcePermissionBase.IntersectIPermission">
            <summary>Задает stub ResourcePermissionBase.Intersect(IPermission target)</summary>
        </member>
        <member name="M:System.Security.Permissions.Fakes.StubResourcePermissionBase.IsSubsetOf(System.Security.IPermission)">
            <summary>Задает заглушка ResourcePermissionBase.IsSubsetOf(IPermission target)</summary>
        </member>
        <member name="F:System.Security.Permissions.Fakes.StubResourcePermissionBase.IsSubsetOfIPermission">
            <summary>Задает stub ResourcePermissionBase.IsSubsetOf(IPermission target)</summary>
        </member>
        <member name="M:System.Security.Permissions.Fakes.StubResourcePermissionBase.ToString">
            <summary>Задает заглушка CodeAccessPermission.ToString()</summary>
        </member>
        <member name="F:System.Security.Permissions.Fakes.StubResourcePermissionBase.ToString01">
            <summary>Задает stub CodeAccessPermission.ToString()</summary>
        </member>
        <member name="M:System.Security.Permissions.Fakes.StubResourcePermissionBase.ToXml">
            <summary>Задает заглушка ResourcePermissionBase.ToXml()</summary>
        </member>
        <member name="F:System.Security.Permissions.Fakes.StubResourcePermissionBase.ToXml01">
            <summary>Задает stub ResourcePermissionBase.ToXml()</summary>
        </member>
        <member name="M:System.Security.Permissions.Fakes.StubResourcePermissionBase.Union(System.Security.IPermission)">
            <summary>Задает заглушка ResourcePermissionBase.Union(IPermission target)</summary>
        </member>
        <member name="F:System.Security.Permissions.Fakes.StubResourcePermissionBase.UnionIPermission">
            <summary>Задает stub ResourcePermissionBase.Union(IPermission target)</summary>
        </member>
        <member name="T:System.Security.Permissions.Fakes.StubResourcePermissionBaseEntry">
            <summary>Тип заглушки System.Security.Permissions.ResourcePermissionBaseEntry</summary>
        </member>
        <member name="M:System.Security.Permissions.Fakes.StubResourcePermissionBaseEntry.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Security.Permissions.Fakes.StubResourcePermissionBaseEntry.#ctor(System.Int32,System.String[])">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Security.Permissions.Fakes.StubResourcePermissionBaseEntry.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Security.Permissions.Fakes.StubResourcePermissionBaseEntry.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubResourcePermissionBaseEntry</summary>
        </member>
        <member name="P:System.Security.Permissions.Fakes.StubResourcePermissionBaseEntry.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Security.Permissions.Fakes.StubResourcePermissionBaseEntry.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Text.RegularExpressions.Fakes.StubRegex">
            <summary>Тип заглушки System.Text.RegularExpressions.Regex</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Fakes.StubRegex.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Fakes.StubRegex.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Fakes.StubRegex.#ctor(System.String,System.Text.RegularExpressions.RegexOptions)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Fakes.StubRegex.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Fakes.StubRegex.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Text.RegularExpressions.Fakes.StubRegex.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Fakes.StubRegex.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubRegex</summary>
        </member>
        <member name="P:System.Text.RegularExpressions.Fakes.StubRegex.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Text.RegularExpressions.Fakes.StubRegex.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Fakes.StubRegex.ToString">
            <summary>Задает заглушка Regex.ToString()</summary>
        </member>
        <member name="F:System.Text.RegularExpressions.Fakes.StubRegex.ToString01">
            <summary>Задает stub Regex.ToString()</summary>
        </member>
        <member name="T:System.Text.RegularExpressions.Fakes.StubRegexCompilationInfo">
            <summary>Тип заглушки System.Text.RegularExpressions.RegexCompilationInfo</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Fakes.StubRegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Fakes.StubRegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Text.RegularExpressions.Fakes.StubRegexCompilationInfo.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Fakes.StubRegexCompilationInfo.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubRegexCompilationInfo</summary>
        </member>
        <member name="P:System.Text.RegularExpressions.Fakes.StubRegexCompilationInfo.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Text.RegularExpressions.Fakes.StubRegexCompilationInfo.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Text.RegularExpressions.Fakes.StubRegexMatchTimeoutException">
            <summary>Тип заглушки System.Text.RegularExpressions.RegexMatchTimeoutException</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Fakes.StubRegexMatchTimeoutException.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Fakes.StubRegexMatchTimeoutException.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Fakes.StubRegexMatchTimeoutException.#ctor(System.String,System.Exception)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Fakes.StubRegexMatchTimeoutException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Fakes.StubRegexMatchTimeoutException.#ctor(System.String,System.String,System.TimeSpan)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Fakes.StubRegexMatchTimeoutException.AttachBackingFieldToHelpLink">
            <summary>Присоединение делегатов для эмуляции StubRegexMatchTimeoutException.HelpLink как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Fakes.StubRegexMatchTimeoutException.AttachBackingFieldToSource">
            <summary>Присоединение делегатов для эмуляции StubRegexMatchTimeoutException.Source как свойства с резервным полем.</summary>
        </member>
        <member name="P:System.Text.RegularExpressions.Fakes.StubRegexMatchTimeoutException.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Text.RegularExpressions.Fakes.StubRegexMatchTimeoutException.Data">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="F:System.Text.RegularExpressions.Fakes.StubRegexMatchTimeoutException.DataGet">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Fakes.StubRegexMatchTimeoutException.GetBaseException">
            <summary>Задает заглушка Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Text.RegularExpressions.Fakes.StubRegexMatchTimeoutException.GetBaseException01">
            <summary>Задает stub Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Fakes.StubRegexMatchTimeoutException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Text.RegularExpressions.Fakes.StubRegexMatchTimeoutException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.Text.RegularExpressions.Fakes.StubRegexMatchTimeoutException.HelpLink">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Text.RegularExpressions.Fakes.StubRegexMatchTimeoutException.HelpLinkGet">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Text.RegularExpressions.Fakes.StubRegexMatchTimeoutException.HelpLinkSetString">
            <summary>Задает stub Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Fakes.StubRegexMatchTimeoutException.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubRegexMatchTimeoutException</summary>
        </member>
        <member name="P:System.Text.RegularExpressions.Fakes.StubRegexMatchTimeoutException.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Text.RegularExpressions.Fakes.StubRegexMatchTimeoutException.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Text.RegularExpressions.Fakes.StubRegexMatchTimeoutException.Message">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="F:System.Text.RegularExpressions.Fakes.StubRegexMatchTimeoutException.MessageGet">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="P:System.Text.RegularExpressions.Fakes.StubRegexMatchTimeoutException.Source">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.Text.RegularExpressions.Fakes.StubRegexMatchTimeoutException.SourceGet">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.Text.RegularExpressions.Fakes.StubRegexMatchTimeoutException.SourceSetString">
            <summary>Задает stub Exception.set_Source(String value)</summary>
        </member>
        <member name="P:System.Text.RegularExpressions.Fakes.StubRegexMatchTimeoutException.StackTrace">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="F:System.Text.RegularExpressions.Fakes.StubRegexMatchTimeoutException.StackTraceGet">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Fakes.StubRegexMatchTimeoutException.ToString">
            <summary>Задает заглушка Exception.ToString()</summary>
        </member>
        <member name="F:System.Text.RegularExpressions.Fakes.StubRegexMatchTimeoutException.ToString01">
            <summary>Задает stub Exception.ToString()</summary>
        </member>
        <member name="T:System.Text.RegularExpressions.Fakes.StubRegexRunner">
            <summary>Тип заглушки System.Text.RegularExpressions.RegexRunner</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Fakes.StubRegexRunner.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Text.RegularExpressions.Fakes.StubRegexRunner.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Fakes.StubRegexRunner.FindFirstChar">
            <summary>Задает заглушка RegexRunner.FindFirstChar()</summary>
        </member>
        <member name="F:System.Text.RegularExpressions.Fakes.StubRegexRunner.FindFirstChar01">
            <summary>Задает stub RegexRunner.FindFirstChar()</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Fakes.StubRegexRunner.Go">
            <summary>Задает заглушка RegexRunner.Go()</summary>
        </member>
        <member name="F:System.Text.RegularExpressions.Fakes.StubRegexRunner.Go01">
            <summary>Задает stub RegexRunner.Go()</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Fakes.StubRegexRunner.InitTrackCount">
            <summary>Задает заглушка RegexRunner.InitTrackCount()</summary>
        </member>
        <member name="F:System.Text.RegularExpressions.Fakes.StubRegexRunner.InitTrackCount01">
            <summary>Задает stub RegexRunner.InitTrackCount()</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Fakes.StubRegexRunner.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubRegexRunner</summary>
        </member>
        <member name="P:System.Text.RegularExpressions.Fakes.StubRegexRunner.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Text.RegularExpressions.Fakes.StubRegexRunner.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Text.RegularExpressions.Fakes.StubRegexRunnerFactory">
            <summary>Тип заглушки System.Text.RegularExpressions.RegexRunnerFactory</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Fakes.StubRegexRunnerFactory.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Text.RegularExpressions.Fakes.StubRegexRunnerFactory.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Fakes.StubRegexRunnerFactory.CreateInstance">
            <summary>Задает заглушка RegexRunnerFactory.CreateInstance()</summary>
        </member>
        <member name="F:System.Text.RegularExpressions.Fakes.StubRegexRunnerFactory.CreateInstance01">
            <summary>Задает stub RegexRunnerFactory.CreateInstance()</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Fakes.StubRegexRunnerFactory.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubRegexRunnerFactory</summary>
        </member>
        <member name="P:System.Text.RegularExpressions.Fakes.StubRegexRunnerFactory.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Text.RegularExpressions.Fakes.StubRegexRunnerFactory.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Threading.Fakes.StubBarrier">
            <summary>Тип заглушки System.Threading.Barrier</summary>
        </member>
        <member name="M:System.Threading.Fakes.StubBarrier.#ctor(System.Int32)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Threading.Fakes.StubBarrier.#ctor(System.Int32,System.Action{System.Threading.Barrier})">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Threading.Fakes.StubBarrier.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Threading.Fakes.StubBarrier.Dispose(System.Boolean)">
            <summary>Задает заглушка Barrier.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.Threading.Fakes.StubBarrier.DisposeBoolean">
            <summary>Задает stub Barrier.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:System.Threading.Fakes.StubBarrier.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubBarrier</summary>
        </member>
        <member name="P:System.Threading.Fakes.StubBarrier.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Threading.Fakes.StubBarrier.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Threading.Fakes.StubBarrierPostPhaseException">
            <summary>Тип заглушки System.Threading.BarrierPostPhaseException</summary>
        </member>
        <member name="M:System.Threading.Fakes.StubBarrierPostPhaseException.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Threading.Fakes.StubBarrierPostPhaseException.#ctor(System.Exception)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Threading.Fakes.StubBarrierPostPhaseException.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Threading.Fakes.StubBarrierPostPhaseException.#ctor(System.String,System.Exception)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Threading.Fakes.StubBarrierPostPhaseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Threading.Fakes.StubBarrierPostPhaseException.AttachBackingFieldToHelpLink">
            <summary>Присоединение делегатов для эмуляции StubBarrierPostPhaseException.HelpLink как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Threading.Fakes.StubBarrierPostPhaseException.AttachBackingFieldToSource">
            <summary>Присоединение делегатов для эмуляции StubBarrierPostPhaseException.Source как свойства с резервным полем.</summary>
        </member>
        <member name="P:System.Threading.Fakes.StubBarrierPostPhaseException.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Threading.Fakes.StubBarrierPostPhaseException.Data">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="F:System.Threading.Fakes.StubBarrierPostPhaseException.DataGet">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="M:System.Threading.Fakes.StubBarrierPostPhaseException.GetBaseException">
            <summary>Задает заглушка Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Threading.Fakes.StubBarrierPostPhaseException.GetBaseException01">
            <summary>Задает stub Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Threading.Fakes.StubBarrierPostPhaseException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Threading.Fakes.StubBarrierPostPhaseException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.Threading.Fakes.StubBarrierPostPhaseException.HelpLink">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Threading.Fakes.StubBarrierPostPhaseException.HelpLinkGet">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Threading.Fakes.StubBarrierPostPhaseException.HelpLinkSetString">
            <summary>Задает stub Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Threading.Fakes.StubBarrierPostPhaseException.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubBarrierPostPhaseException</summary>
        </member>
        <member name="P:System.Threading.Fakes.StubBarrierPostPhaseException.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Threading.Fakes.StubBarrierPostPhaseException.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Threading.Fakes.StubBarrierPostPhaseException.Message">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="F:System.Threading.Fakes.StubBarrierPostPhaseException.MessageGet">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="P:System.Threading.Fakes.StubBarrierPostPhaseException.Source">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.Threading.Fakes.StubBarrierPostPhaseException.SourceGet">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.Threading.Fakes.StubBarrierPostPhaseException.SourceSetString">
            <summary>Задает stub Exception.set_Source(String value)</summary>
        </member>
        <member name="P:System.Threading.Fakes.StubBarrierPostPhaseException.StackTrace">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="F:System.Threading.Fakes.StubBarrierPostPhaseException.StackTraceGet">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Threading.Fakes.StubBarrierPostPhaseException.ToString">
            <summary>Задает заглушка Exception.ToString()</summary>
        </member>
        <member name="F:System.Threading.Fakes.StubBarrierPostPhaseException.ToString01">
            <summary>Задает stub Exception.ToString()</summary>
        </member>
        <member name="T:System.Threading.Fakes.StubThreadExceptionEventArgs">
            <summary>Тип заглушки System.Threading.ThreadExceptionEventArgs</summary>
        </member>
        <member name="M:System.Threading.Fakes.StubThreadExceptionEventArgs.#ctor(System.Exception)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Threading.Fakes.StubThreadExceptionEventArgs.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:System.Threading.Fakes.StubThreadExceptionEventArgs.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubThreadExceptionEventArgs</summary>
        </member>
        <member name="P:System.Threading.Fakes.StubThreadExceptionEventArgs.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Threading.Fakes.StubThreadExceptionEventArgs.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Timers.Fakes.StubTimer">
            <summary>Тип заглушки System.Timers.Timer</summary>
        </member>
        <member name="M:System.Timers.Fakes.StubTimer.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Timers.Fakes.StubTimer.#ctor(System.Double)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Timers.Fakes.StubTimer.AttachBackingFieldToSite">
            <summary>Присоединение делегатов для эмуляции StubTimer.Site как свойства с резервным полем.</summary>
        </member>
        <member name="P:System.Timers.Fakes.StubTimer.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Timers.Fakes.StubTimer.CanRaiseEvents">
            <summary>Задает stub Component.get_CanRaiseEvents()</summary>
        </member>
        <member name="F:System.Timers.Fakes.StubTimer.CanRaiseEventsGet">
            <summary>Задает stub Component.get_CanRaiseEvents()</summary>
        </member>
        <member name="M:System.Timers.Fakes.StubTimer.Dispose(System.Boolean)">
            <summary>Задает заглушка Timer.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.Timers.Fakes.StubTimer.DisposeBoolean">
            <summary>Задает stub Timer.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:System.Timers.Fakes.StubTimer.GetService(System.Type)">
            <summary>Задает заглушка Component.GetService(Type service)</summary>
        </member>
        <member name="F:System.Timers.Fakes.StubTimer.GetServiceType">
            <summary>Задает stub Component.GetService(Type service)</summary>
        </member>
        <member name="M:System.Timers.Fakes.StubTimer.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubTimer</summary>
        </member>
        <member name="P:System.Timers.Fakes.StubTimer.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Timers.Fakes.StubTimer.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Timers.Fakes.StubTimer.Site">
            <summary>Задает stub Timer.get_Site()</summary>
        </member>
        <member name="F:System.Timers.Fakes.StubTimer.SiteGet">
            <summary>Задает stub Timer.get_Site()</summary>
        </member>
        <member name="F:System.Timers.Fakes.StubTimer.SiteSetISite">
            <summary>Задает stub Timer.set_Site(ISite value)</summary>
        </member>
        <member name="M:System.Timers.Fakes.StubTimer.ToString">
            <summary>Задает заглушка Component.ToString()</summary>
        </member>
        <member name="F:System.Timers.Fakes.StubTimer.ToString01">
            <summary>Задает stub Component.ToString()</summary>
        </member>
        <member name="T:System.Timers.Fakes.StubTimersDescriptionAttribute">
            <summary>Тип заглушки System.Timers.TimersDescriptionAttribute</summary>
        </member>
        <member name="M:System.Timers.Fakes.StubTimersDescriptionAttribute.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:System.Timers.Fakes.StubTimersDescriptionAttribute.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Timers.Fakes.StubTimersDescriptionAttribute.Description">
            <summary>Задает stub TimersDescriptionAttribute.get_Description()</summary>
        </member>
        <member name="F:System.Timers.Fakes.StubTimersDescriptionAttribute.DescriptionGet">
            <summary>Задает stub TimersDescriptionAttribute.get_Description()</summary>
        </member>
        <member name="M:System.Timers.Fakes.StubTimersDescriptionAttribute.Equals(System.Object)">
            <summary>Задает заглушка DescriptionAttribute.Equals(Object obj)</summary>
        </member>
        <member name="F:System.Timers.Fakes.StubTimersDescriptionAttribute.EqualsObject">
            <summary>Задает stub DescriptionAttribute.Equals(Object obj)</summary>
        </member>
        <member name="M:System.Timers.Fakes.StubTimersDescriptionAttribute.GetHashCode">
            <summary>Задает заглушка DescriptionAttribute.GetHashCode()</summary>
        </member>
        <member name="F:System.Timers.Fakes.StubTimersDescriptionAttribute.GetHashCode01">
            <summary>Задает stub DescriptionAttribute.GetHashCode()</summary>
        </member>
        <member name="M:System.Timers.Fakes.StubTimersDescriptionAttribute.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubTimersDescriptionAttribute</summary>
        </member>
        <member name="P:System.Timers.Fakes.StubTimersDescriptionAttribute.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Timers.Fakes.StubTimersDescriptionAttribute.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="M:System.Timers.Fakes.StubTimersDescriptionAttribute.IsDefaultAttribute">
            <summary>Задает заглушка DescriptionAttribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:System.Timers.Fakes.StubTimersDescriptionAttribute.IsDefaultAttribute01">
            <summary>Задает stub DescriptionAttribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:System.Timers.Fakes.StubTimersDescriptionAttribute.Match(System.Object)">
            <summary>Задает заглушка Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:System.Timers.Fakes.StubTimersDescriptionAttribute.MatchObject">
            <summary>Задает stub Attribute.Match(Object obj)</summary>
        </member>
        <member name="P:System.Timers.Fakes.StubTimersDescriptionAttribute.TypeId">
            <summary>Задает stub Attribute.get_TypeId()</summary>
        </member>
        <member name="F:System.Timers.Fakes.StubTimersDescriptionAttribute.TypeIdGet">
            <summary>Задает stub Attribute.get_TypeId()</summary>
        </member>
        <member name="T:System.Windows.Input.Fakes.StubICommand">
            <summary>Тип заглушки System.Windows.Input.ICommand</summary>
        </member>
        <member name="M:System.Windows.Input.Fakes.StubICommand.#ctor">
            <summary>Инициализирует новый экземпляр type StubICommand</summary>
        </member>
        <member name="F:System.Windows.Input.Fakes.StubICommand.CanExecuteObject">
            <summary>Задает stub ICommand.CanExecute(Object parameter)</summary>
        </member>
        <member name="F:System.Windows.Input.Fakes.StubICommand.ExecuteObject">
            <summary>Задает stub ICommand.Execute(Object parameter)</summary>
        </member>
        <member name="M:System.Windows.Input.Fakes.StubICommand.System#Windows#Input#ICommand#CanExecute(System.Object)">
            <summary>Задает заглушка ICommand.CanExecute(Object parameter)</summary>
        </member>
        <member name="M:System.Windows.Input.Fakes.StubICommand.System#Windows#Input#ICommand#Execute(System.Object)">
            <summary>Задает заглушка ICommand.Execute(Object parameter)</summary>
        </member>
    </members>
</doc>
